/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 *
 * (C) Copyright IBM Corporation 2017, 2024
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
 window.apiConnectExplorer = {
  attachPoint: '#root',
  options: {
      renderSchemaView: true,
      headerTitle: "API Connect v10.0.LATEST",
      headerActive: true,
      groupByTags: true,
      validateSwagger: false,
      explorerDir: "/../app/",
      routerType: "hash",
      versions: {
        "10.0.1.1": "10.0.1.1.html",
        "10.0.1.2": "10.0.1.2.html",
        "10.0.1.4": "10.0.1.4.html",
        "10.0.1.5": "10.0.1.5.html",
        "10.0.1.6": "10.0.1.6.html",
        "10.0.1.7": "10.0.1.7.html",
        "10.0.1.8": "10.0.1.8.html",
        "10.0.1.9": "10.0.1.9.html",
        "10.0.1.11": "10.0.1.11.html",
        "10.0.1.12": "10.0.1.12.html",
        "10.0.1.LATEST": "10.0.1.LATEST.html",
        "10.0.2.0": "10.0.2.0.html",
        "10.0.3.0": "10.0.3.0.html",
        "10.0.4.0": "10.0.4.0.html",
        "10.0.5.0": "10.0.5.0.html",
        "10.0.5.1": "10.0.5.1.html",
        "10.0.5.2": "10.0.5.2.html",
        "10.0.5.3": "10.0.5.3.html",
        "10.0.5.4": "10.0.5.4.html",
        "10.0.5.5": "10.0.5.5.html",
        "10.0.5.LATEST": "10.0.5.LATEST.html",
        "10.0.6.0": "10.0.6.0.html",
        "10.0.7.0": "10.0.7.0.html",
        "10.0.LATEST": "10.0.LATEST.html",
      }
    },
  apis: [
{
  "openapi": "3.0.0",
  "info": {
    "x-ibm-name": "apim",
    "version": "2.0.0",
    "title": "IBM API Connect Platform - Cloud Management API",
    "description": "This API provides operations for managing the IBM API Connect cloud configuration.",
    "termsOfService": "https://www.ibm.com/legal",
    "contact": {
      "name": "IBM",
      "url": "https://www.ibm.com",
      "email": "help@ibm.com"
    },
    "license": {
      "name": "tbd",
      "url": "https://tbd.com"
    }
  },
  "servers": [
    {
      "url": "https://apimserver.example.com/api",
      "description": "APIM base path"
    }
  ],
  "paths": {
    "/cloud/log-spec": {
      "description": "Log Spec object operations",
      "get": {
        "summary": "Get the Log Spec object",
        "description": "Get the Log Spec object",
        "operationId": "log_spec_singletonGet",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogSpec"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/LogSpec"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Logging Specification",
          "Resource: Log Spec"
        ]
      },
      "put": {
        "summary": "Update the Log Spec object",
        "description": "Update the Log Spec object\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "log_spec_singletonUpdate",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogSpec"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/LogSpec"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogSpec"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/LogSpec"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Logging Specification",
          "Resource: Log Spec"
        ]
      }
    },
    "/orgs/{org}/user-registries": {
      "description": "The collection of User Registry operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a user registry.",
        "description": "Creates a user registry.\n\n          Required fields:\n          - integration_url\n          \n          Fields not allowed:\n          - owned\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "user_registry_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistry"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistry"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      },
      "get": {
        "summary": "Lists user registries.",
        "description": "Returns the list of user registries belonging to a provider organization.",
        "operationId": "user_registry_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      },
      "delete": {
        "summary": "Clears user registries.",
        "description": "Deletes all user registries belonging to a provider organization.",
        "operationId": "user_registry_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}": {
      "description": "User Registry object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        }
      ],
      "get": {
        "summary": "Returns a user registry.",
        "description": "Returns a user registry.",
        "operationId": "user_registry_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      },
      "patch": {
        "summary": "Updates a user registry.",
        "description": "Updates a user registry.\n\n          Fields not allowed:\n          - owned\n          - registry_type\n          - user_registry_managed\n          - correlation_data\n          - integration_url\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "user_registry_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistry"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      },
      "delete": {
        "summary": "Deletes a user registry.",
        "description": "Deletes a user registry.",
        "operationId": "user_registry_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}/execute": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        }
      ],
      "post": {
        "summary": "Execute a User Registry operation",
        "description": "Execute a User Registry operation",
        "operationId": "user_registry_executeById",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/operation"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryExecuteResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryExecuteResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}/test-connection": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        }
      ],
      "post": {
        "summary": "Test a User Registry connection",
        "description": "Test a User Registry connection",
        "operationId": "user_registry_testConnectionById",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestConnectionCredentials"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TestConnectionCredentials"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/orgs/{org}/user-registries/execute": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Execute a User Registry operation",
        "description": "Execute a User Registry operation",
        "operationId": "user_registry_execute",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/operation"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistryExecute"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistryExecute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryExecuteResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryExecuteResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/orgs/{org}/user-registries/test-connection": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Test a User Registry connection",
        "description": "Test a User Registry connection",
        "operationId": "user_registry_testConnection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistryTestConnection"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistryTestConnection"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}/search": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        }
      ],
      "post": {
        "summary": "Search for users in the user registry",
        "description": "Search for users in the user registry",
        "operationId": "user_registry_search",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}/users": {
      "description": "The collection of User operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        }
      ],
      "post": {
        "summary": "Creates a user.",
        "description": "Creates a user entry in a user registry. For user registries that are defined as <i>user managed</i>, a user record is also created in the backing (usually remote) user directory.\n\n          Required fields:\n          - username\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - user_registry_url\n",
        "operationId": "user_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      },
      "get": {
        "summary": "Lists users.",
        "description": "Returns a user entry from a user registry. The user entry returned comes from the API Connect configuration, rather than a from backing (remote) user directory.",
        "operationId": "user_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      },
      "delete": {
        "summary": "Clears users.",
        "description": "Removes all user entries from a user registry. For user registries that are defined as <i>user managed</i>, user records are also removed from the backing (usually remote) user directory.",
        "operationId": "user_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}/users/{user}": {
      "description": "User object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        },
        {
          "$ref": "#/components/parameters/user"
        }
      ],
      "get": {
        "summary": "Returns a user.",
        "description": "Deletes a user entry from a user registry. For user registries that are defined as <i>user managed</i>, the user record is also deleted in the backing (usually remote) user directory.",
        "operationId": "user_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      },
      "patch": {
        "summary": "Updates a user.",
        "description": "Updates a user entry. To change a user password, see the </tt>reset-password</tt> operation.\n\n          Fields not allowed:\n          - identity_provider\n          - username\n          - salt\n          - correlation_data\n          - force_password_change\n          - last_login_at\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - user_registry_url\n",
        "operationId": "user_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      },
      "delete": {
        "summary": "Deletes a user.",
        "description": "Deletes a user entry from a user registry. For user registries that are defined as <i>user managed</i>, the user record is also deleted in the backing (usually remote) user directory.",
        "operationId": "user_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/request-password-reset": {
      "post": {
        "summary": "Send reset password link",
        "description": "Send reset password link",
        "operationId": "user_requestPasswordReset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPasswordReset"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/RequestPasswordReset"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}/users/{user}/reset-password": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        },
        {
          "$ref": "#/components/parameters/user"
        }
      ],
      "post": {
        "summary": "Reset password",
        "description": "Reset password",
        "operationId": "user_resetPassword",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/cloud/admin/search/user": {
      "post": {
        "summary": "Search for users in the admin realm",
        "description": "Search for users in the admin realm",
        "operationId": "user_searchAdmin",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/cloud/provider/search/user": {
      "post": {
        "summary": "Search for users in the provider realm",
        "description": "Search for users in the provider realm",
        "operationId": "user_searchProvider",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/cloud/admin/identity-providers": {
      "get": {
        "summary": "List Identity Providers in the admin realm",
        "description": "List Identity Providers in the admin realm",
        "operationId": "user_registry_identityProviderListAdmin",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/cloud/provider/identity-providers": {
      "get": {
        "summary": "List Identity Providers in the provider realm",
        "description": "List Identity Providers in the provider realm",
        "operationId": "user_registry_identityProviderListProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/token": {
      "post": {
        "summary": "Generate a token",
        "description": "Generate a token",
        "operationId": "oauth2_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: Access Token (User Scope)"
        ]
      }
    },
    "/oauth2/redirect": {
      "get": {
        "summary": "Authorization provider redirect endpoint",
        "description": "Authorization provider redirect endpoint",
        "operationId": "oauth2_redirect_get",
        "parameters": [
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/code"
          },
          {
            "$ref": "#/components/parameters/error"
          },
          {
            "$ref": "#/components/parameters/error_description"
          },
          {
            "$ref": "#/components/parameters/error_uri"
          },
          {
            "$ref": "#/components/parameters/oauth_token"
          },
          {
            "$ref": "#/components/parameters/oauth_verifier"
          }
        ],
        "responses": {
          "302": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Oauth2 Action",
          "Resource: OAuth2 Redirect"
        ]
      },
      "post": {
        "summary": "Authorization provider redirect endpoint",
        "description": "Authorization provider redirect endpoint",
        "operationId": "oauth2_redirect_post",
        "parameters": [
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/code"
          },
          {
            "$ref": "#/components/parameters/error"
          },
          {
            "$ref": "#/components/parameters/error_description"
          },
          {
            "$ref": "#/components/parameters/error_uri"
          },
          {
            "$ref": "#/components/parameters/oauth_token"
          },
          {
            "$ref": "#/components/parameters/oauth_verifier"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OauthRedirect"
              }
            }
          }
        },
        "responses": {
          "302": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Oauth2 Action",
          "Resource: OAuth2 Redirect"
        ]
      }
    },
    "/oauth2/authorize": {
      "get": {
        "summary": "APIC authorization endpoint",
        "description": "APIC authorize endpoint",
        "operationId": "oauth2_authorize",
        "parameters": [
          {
            "$ref": "#/components/parameters/client_id"
          },
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/realm"
          },
          {
            "$ref": "#/components/parameters/redirect_uri"
          },
          {
            "$ref": "#/components/parameters/response_type"
          },
          {
            "$ref": "#/components/parameters/token"
          },
          {
            "$ref": "#/components/parameters/name"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/invitation_scope"
          }
        ],
        "responses": {
          "302": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: Oauth2 Authorization Request"
        ]
      }
    },
    "/cloud/settings": {
      "description": "Cloud Setting object operations",
      "get": {
        "summary": "Get the Cloud Setting object",
        "description": "Get the Cloud Setting object",
        "operationId": "cloud_setting_singletonGet",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CloudSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Cloud Setting"
        ]
      },
      "put": {
        "summary": "Update the Cloud Setting object",
        "description": "Update the Cloud Setting object\n          \n          Fields not allowed to be null:\n          - email_sender\n          - tls_client_profile_default_url\n          \n          Fields not allowed:\n          - service_type\n          - cloud_id\n          - ibm_cloud\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "cloud_setting_singletonUpdate",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudSetting"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/CloudSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CloudSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Cloud Setting"
        ]
      }
    },
    "/cloud/settings/audit-endpoint/test-connection": {
      "post": {
        "summary": "Test an audit endpoint connection",
        "description": "Test an audit endpoint connection",
        "operationId": "cloud_setting_auditEndpointTestConnection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditEndpointTestConnection"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/AuditEndpointTestConnection"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Cloud Setting"
        ]
      }
    },
    "/cloud/info": {
      "get": {
        "summary": "Return public information about the cloud deployment",
        "description": "Return public information about the cloud deployment",
        "operationId": "cloud_setting_publicInfo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudPublicInfo"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CloudPublicInfo"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Cloud Setting"
        ]
      }
    },
    "/cloud/about": {
      "get": {
        "summary": "Return information about the cloud",
        "description": "Return public information about the cloud. You MUST supply the --format option when using this command from the API Connect toolkit.",
        "operationId": "cloud_setting_about",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudAbout"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CloudAbout"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Cloud Setting"
        ]
      }
    },
    "/cloud/topology": {
      "get": {
        "summary": "Return the topology of the cloud for governance",
        "description": "Return the topology of the cloud for governance. You MUST supply the --format option when using this command from the API Connect toolkit.",
        "operationId": "cloud_setting_topology",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudTopology"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CloudTopology"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Cloud Setting"
        ]
      }
    },
    "/cloud/settings/mail-server-configured": {
      "get": {
        "summary": "Return true or false based on if mail server is configured or not",
        "description": "Return true or false based on if mail server is configured or not. You MUST supply the --format option when using this command from the API Connect toolkit.",
        "operationId": "cloud_setting_mailServerConfigured",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailServerConfigured"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MailServerConfigured"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Cloud Setting"
        ]
      }
    },
    "/cloud/settings/toolkit-credentials": {
      "get": {
        "summary": "List credential for toolkit, consumer toolkit, governance, and discovery toolkit",
        "description": "List credential for toolkit, consumer toolkit, governance, and discovery toolkit",
        "operationId": "cloud_setting_toolkitCredentialsList",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolkitCredentialsResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ToolkitCredentialsResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Cloud Setting"
        ]
      }
    },
    "/cloud/settings/designer-credentials": {
      "get": {
        "summary": "List credential for designer",
        "description": "List credential for designer",
        "operationId": "cloud_setting_designerCredentialsList",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DesignerCredentialsResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DesignerCredentialsResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Cloud Setting"
        ]
      }
    },
    "/cloud/oauth2/certs": {
      "get": {
        "summary": "Support JWKS_URI endpoint, conform to OIDC specification",
        "description": "Return JWKS that is used to issue token. You MUST supply the --format option when using this command from the API Connect toolkit.",
        "operationId": "cloud_setting_oauth2Certs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oauth2CertsResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Oauth2CertsResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Cloud Setting"
        ]
      }
    },
    "/cloud/settings/user-registries": {
      "description": "User Registry Setting object operations",
      "get": {
        "summary": "Get the User Registry Setting object",
        "description": "Get the User Registry Setting object",
        "operationId": "user_registry_setting_singletonGet",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistrySetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistrySetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: User Registry Setting"
        ]
      },
      "put": {
        "summary": "Update the User Registry Setting object",
        "description": "Update the User Registry Setting object\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "user_registry_setting_singletonUpdate",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrySetting"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrySetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistrySetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistrySetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: User Registry Setting"
        ]
      }
    },
    "/cloud/settings/notification-style": {
      "description": "Notification Style object operations",
      "get": {
        "summary": "Get the Notification Style object",
        "description": "Get the Notification Style object",
        "operationId": "notification_style_singletonGetCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Style (Cloud Scope)"
        ]
      },
      "put": {
        "summary": "Update the Notification Style object",
        "description": "Update the Notification Style object\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "notification_style_singletonUpdateCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationStyle"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationStyle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Style (Cloud Scope)"
        ]
      }
    },
    "/cloud/settings/notification-templates": {
      "description": "Notification Template operations across all collections",
      "get": {
        "summary": "List all Notification Template objects in all collections",
        "description": "List all Notification Template objects in all collections",
        "operationId": "notification_template_listAllCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (All Subcollections)"
        ]
      }
    },
    "/cloud/settings/notification-templates/cloud": {
      "description": "The collection of Notification Template operations",
      "get": {
        "summary": "List the Notification Template objects",
        "description": "List the Notification Template objects",
        "operationId": "notification_template_listCloudSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Cloud Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/cloud/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Get the Notification Template object by name or id",
        "description": "Get the Notification Template object by name or id",
        "operationId": "notification_template_getCloudSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Cloud Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification Template object by name or id",
        "description": "Update the Notification Template object by name or id\n          \n          Fields not allowed:\n          - name\n          - notification_template_type\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateCloudSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Cloud Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/cloud/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listCloudSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Cloud Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/cloud/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getCloudSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Cloud Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateCloudSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Cloud Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/admin": {
      "description": "The collection of Notification Template operations",
      "get": {
        "summary": "List the Notification Template objects",
        "description": "List the Notification Template objects",
        "operationId": "notification_template_listAdminSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Admin Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/admin/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Get the Notification Template object by name or id",
        "description": "Get the Notification Template object by name or id",
        "operationId": "notification_template_getAdminSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Admin Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification Template object by name or id",
        "description": "Update the Notification Template object by name or id\n          \n          Fields not allowed:\n          - name\n          - notification_template_type\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateAdminSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Admin Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/admin/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listAdminSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Admin Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/admin/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getAdminSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Admin Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateAdminSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Admin Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/provider": {
      "description": "The collection of Notification Template operations",
      "get": {
        "summary": "List the Notification Template objects",
        "description": "List the Notification Template objects",
        "operationId": "notification_template_listProviderSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Provider Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/provider/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Get the Notification Template object by name or id",
        "description": "Get the Notification Template object by name or id",
        "operationId": "notification_template_getProviderSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Provider Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification Template object by name or id",
        "description": "Update the Notification Template object by name or id\n          \n          Fields not allowed:\n          - name\n          - notification_template_type\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateProviderSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Provider Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/provider/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listProviderSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Provider Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/provider/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getProviderSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Provider Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateProviderSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Provider Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/catalog": {
      "description": "The collection of Notification Template operations",
      "get": {
        "summary": "List the Notification Template objects",
        "description": "List the Notification Template objects",
        "operationId": "notification_template_listCatalogSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Catalog Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/catalog/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Get the Notification Template object by name or id",
        "description": "Get the Notification Template object by name or id",
        "operationId": "notification_template_getCatalogSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Catalog Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification Template object by name or id",
        "description": "Update the Notification Template object by name or id\n          \n          Fields not allowed:\n          - name\n          - notification_template_type\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateCatalogSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Catalog Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/catalog/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listCatalogSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Catalog Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/catalog/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getCatalogSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Catalog Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateCatalogSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Catalog Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/space": {
      "description": "The collection of Notification Template operations",
      "get": {
        "summary": "List the Notification Template objects",
        "description": "List the Notification Template objects",
        "operationId": "notification_template_listSpaceSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Space Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/space/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Get the Notification Template object by name or id",
        "description": "Get the Notification Template object by name or id",
        "operationId": "notification_template_getSpaceSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Space Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification Template object by name or id",
        "description": "Update the Notification Template object by name or id\n          \n          Fields not allowed:\n          - name\n          - notification_template_type\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateSpaceSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Space Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/space/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listSpaceSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Space Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/space/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getSpaceSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Space Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateSpaceSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Space Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/consumer": {
      "description": "The collection of Notification Template operations",
      "get": {
        "summary": "List the Notification Template objects",
        "description": "List the Notification Template objects",
        "operationId": "notification_template_listConsumerSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/consumer/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Get the Notification Template object by name or id",
        "description": "Get the Notification Template object by name or id",
        "operationId": "notification_template_getConsumerSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Consumer Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification Template object by name or id",
        "description": "Update the Notification Template object by name or id\n          \n          Fields not allowed:\n          - name\n          - notification_template_type\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateConsumerSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/consumer/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listConsumerSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/cloud/settings/notification-templates/consumer/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getConsumerSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Consumer Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateConsumerSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Notification Template (Cloud Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/cloud/settings/role-defaults": {
      "description": "Role Default operations across all collections",
      "get": {
        "summary": "List all Role Default objects in all collections",
        "description": "List all Role Default objects in all collections",
        "operationId": "role_default_listAllCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Role Default (Cloud Scope) (All Subcollections)"
        ]
      }
    },
    "/cloud/settings/role-defaults/provider": {
      "description": "The collection of Role Default operations",
      "post": {
        "summary": "Create a Role Default object",
        "description": "Create a Role Default object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "role_default_createProviderSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDefault"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/RoleDefault"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Role Default (Cloud Scope) (Provider Subcollection)"
        ]
      },
      "get": {
        "summary": "List the Role Default objects",
        "description": "List the Role Default objects",
        "operationId": "role_default_listProviderSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Role Default (Cloud Scope) (Provider Subcollection)"
        ]
      },
      "delete": {
        "summary": "Clear the Role Default objects",
        "description": "Clear the Role Default objects",
        "operationId": "role_default_clearProviderSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Role Default (Cloud Scope) (Provider Subcollection)"
        ]
      }
    },
    "/cloud/settings/role-defaults/provider/{role-default}": {
      "description": "Role Default object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/role-default"
        }
      ],
      "get": {
        "summary": "Get the Role Default object by name or id",
        "description": "Get the Role Default object by name or id",
        "operationId": "role_default_getProviderSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Role Default (Cloud Scope) (Provider Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Role Default object by name or id",
        "description": "Update the Role Default object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "role_default_updateProviderSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDefault"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/RoleDefault"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Role Default (Cloud Scope) (Provider Subcollection)"
        ]
      },
      "delete": {
        "summary": "Delete the Role Default object by name or id",
        "description": "Delete the Role Default object by name or id",
        "operationId": "role_default_delProviderSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Role Default (Cloud Scope) (Provider Subcollection)"
        ]
      }
    },
    "/cloud/settings/role-defaults/consumer": {
      "description": "The collection of Role Default operations",
      "get": {
        "summary": "List the Role Default objects",
        "description": "List the Role Default objects",
        "operationId": "role_default_listConsumerSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Role Default (Cloud Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/cloud/settings/role-defaults/consumer/{role-default}": {
      "description": "Role Default object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/role-default"
        }
      ],
      "get": {
        "summary": "Get the Role Default object by name or id",
        "description": "Get the Role Default object by name or id",
        "operationId": "role_default_getConsumerSubcollectionCloudScope",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Settings",
          "Resource: Role Default (Cloud Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/cloud/integrations": {
      "description": "Integration operations across all collections",
      "get": {
        "summary": "List all Integration objects in all collections",
        "description": "List all Integration objects in all collections",
        "operationId": "integration_listAll",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (All Subcollections)"
        ]
      }
    },
    "/cloud/integrations/billing": {
      "description": "The collection of Integration operations",
      "post": {
        "summary": "Create a Integration object",
        "description": "Create a Integration object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "integration_createBillingSubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (Billing Subcollection)"
        ]
      },
      "get": {
        "summary": "List the Integration objects",
        "description": "List the Integration objects",
        "operationId": "integration_listBillingSubcollection",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (Billing Subcollection)"
        ]
      },
      "delete": {
        "summary": "Clear the Integration objects",
        "description": "Clear the Integration objects",
        "operationId": "integration_clearBillingSubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (Billing Subcollection)"
        ]
      }
    },
    "/cloud/integrations/billing/{integration}": {
      "description": "Integration object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/integration"
        }
      ],
      "get": {
        "summary": "Get the Integration object by name or id",
        "description": "Get the Integration object by name or id",
        "operationId": "integration_getBillingSubcollection",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (Billing Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Integration object by name or id",
        "description": "Update the Integration object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "integration_updateBillingSubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (Billing Subcollection)"
        ]
      },
      "delete": {
        "summary": "Delete the Integration object by name or id",
        "description": "Delete the Integration object by name or id",
        "operationId": "integration_delBillingSubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (Billing Subcollection)"
        ]
      }
    },
    "/cloud/integrations/payment-method": {
      "description": "The collection of Integration operations",
      "post": {
        "summary": "Create a Integration object",
        "description": "Create a Integration object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "integration_createPaymentMethodSubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (PaymentMethod Subcollection)"
        ]
      },
      "get": {
        "summary": "List the Integration objects",
        "description": "List the Integration objects",
        "operationId": "integration_listPaymentMethodSubcollection",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (PaymentMethod Subcollection)"
        ]
      },
      "delete": {
        "summary": "Clear the Integration objects",
        "description": "Clear the Integration objects",
        "operationId": "integration_clearPaymentMethodSubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (PaymentMethod Subcollection)"
        ]
      }
    },
    "/cloud/integrations/payment-method/{integration}": {
      "description": "Integration object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/integration"
        }
      ],
      "get": {
        "summary": "Get the Integration object by name or id",
        "description": "Get the Integration object by name or id",
        "operationId": "integration_getPaymentMethodSubcollection",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (PaymentMethod Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Integration object by name or id",
        "description": "Update the Integration object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "integration_updatePaymentMethodSubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (PaymentMethod Subcollection)"
        ]
      },
      "delete": {
        "summary": "Delete the Integration object by name or id",
        "description": "Delete the Integration object by name or id",
        "operationId": "integration_delPaymentMethodSubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (PaymentMethod Subcollection)"
        ]
      }
    },
    "/cloud/integrations/user-registry": {
      "description": "The collection of Integration operations",
      "post": {
        "summary": "Create a Integration object",
        "description": "Create a Integration object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "integration_createUserRegistrySubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (UserRegistry Subcollection)"
        ]
      },
      "get": {
        "summary": "List the Integration objects",
        "description": "List the Integration objects",
        "operationId": "integration_listUserRegistrySubcollection",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (UserRegistry Subcollection)"
        ]
      },
      "delete": {
        "summary": "Clear the Integration objects",
        "description": "Clear the Integration objects",
        "operationId": "integration_clearUserRegistrySubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (UserRegistry Subcollection)"
        ]
      }
    },
    "/cloud/integrations/user-registry/{integration}": {
      "description": "Integration object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/integration"
        }
      ],
      "get": {
        "summary": "Get the Integration object by name or id",
        "description": "Get the Integration object by name or id",
        "operationId": "integration_getUserRegistrySubcollection",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (UserRegistry Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Integration object by name or id",
        "description": "Update the Integration object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "integration_updateUserRegistrySubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (UserRegistry Subcollection)"
        ]
      },
      "delete": {
        "summary": "Delete the Integration object by name or id",
        "description": "Delete the Integration object by name or id",
        "operationId": "integration_delUserRegistrySubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (UserRegistry Subcollection)"
        ]
      }
    },
    "/cloud/integrations/gateway-service": {
      "description": "The collection of Integration operations",
      "post": {
        "summary": "Create a Integration object",
        "description": "Create a Integration object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "integration_createGatewayServiceSubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (GatewayService Subcollection)"
        ]
      },
      "get": {
        "summary": "List the Integration objects",
        "description": "List the Integration objects",
        "operationId": "integration_listGatewayServiceSubcollection",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (GatewayService Subcollection)"
        ]
      },
      "delete": {
        "summary": "Clear the Integration objects",
        "description": "Clear the Integration objects",
        "operationId": "integration_clearGatewayServiceSubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (GatewayService Subcollection)"
        ]
      }
    },
    "/cloud/integrations/gateway-service/{integration}": {
      "description": "Integration object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/integration"
        }
      ],
      "get": {
        "summary": "Get the Integration object by name or id",
        "description": "Get the Integration object by name or id",
        "operationId": "integration_getGatewayServiceSubcollection",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (GatewayService Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Integration object by name or id",
        "description": "Update the Integration object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "integration_updateGatewayServiceSubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (GatewayService Subcollection)"
        ]
      },
      "delete": {
        "summary": "Delete the Integration object by name or id",
        "description": "Delete the Integration object by name or id",
        "operationId": "integration_delGatewayServiceSubcollection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Integration (GatewayService Subcollection)"
        ]
      }
    },
    "/cloud/registrations": {
      "description": "The collection of Registration operations",
      "post": {
        "summary": "Create a Registration object",
        "description": "Create a Registration object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "registration_create",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Registration"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Registration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Registration"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Registration"
        ]
      },
      "get": {
        "summary": "List the Registration objects",
        "description": "List the Registration objects",
        "operationId": "registration_list",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Registration"
        ]
      },
      "delete": {
        "summary": "Clear the Registration objects",
        "description": "Clear the Registration objects",
        "operationId": "registration_clear",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Registration"
        ]
      }
    },
    "/cloud/registrations/{registration}": {
      "description": "Registration object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/registration"
        }
      ],
      "get": {
        "summary": "Get the Registration object by name or id",
        "description": "Get the Registration object by name or id",
        "operationId": "registration_get",
        "security": [
          {
            "oauth": [
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Registration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Registration"
        ]
      },
      "patch": {
        "summary": "Update the Registration object by name or id",
        "description": "Update the Registration object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "registration_update",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Registration"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Registration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Registration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Registration"
        ]
      },
      "delete": {
        "summary": "Delete the Registration object by name or id",
        "description": "Delete the Registration object by name or id",
        "operationId": "registration_del",
        "security": [
          {
            "oauth": [
              "cloud:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registration"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Registration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Cloud Management",
          "Resource: Registration"
        ]
      }
    },
    "/cloud/api-keys": {
      "description": "The collection of API Key operations",
      "post": {
        "summary": "Create a API Key object",
        "description": "Create a API Key object\n          \n          Required fields:\n          - client_type\n          - description\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "api_key_create",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKey"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/APIKey"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: API Key"
        ]
      },
      "get": {
        "summary": "List the API Key objects",
        "description": "List the API Key objects",
        "operationId": "api_key_list",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: API Key"
        ]
      }
    },
    "/cloud/api-keys/{api-key}": {
      "description": "API Key object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/api-key"
        }
      ],
      "get": {
        "summary": "Get the API Key object by name or id",
        "description": "Get the API Key object by name or id",
        "operationId": "api_key_get",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: API Key"
        ]
      },
      "delete": {
        "summary": "Delete the API Key object by name or id",
        "description": "Delete the API Key object by name or id",
        "operationId": "api_key_del",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: API Key"
        ]
      }
    },
    "/orgs/{org}/settings": {
      "description": "Organization Setting object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Returns provider organization settings.",
        "description": "Returns the settings for a provider organization.",
        "operationId": "org_setting_singletonGet",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OrgSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Organization Setting"
        ]
      },
      "put": {
        "summary": "Updates provider organization settings.",
        "description": "Updates the settings for a provider organization.\n\n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "org_setting_singletonUpdate",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrgSetting"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/OrgSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OrgSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Organization Setting"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates": {
      "description": "Notification Template operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Lists provider notification templates.",
        "description": "Returns the list of all notification templates for a provider organization.",
        "operationId": "notification_template_listAllOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (All Subcollections)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/admin": {
      "description": "The collection of Notification Template operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "List the Notification Template objects",
        "description": "List the Notification Template objects",
        "operationId": "notification_template_listAdminSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Admin Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/admin/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Get the Notification Template object by name or id",
        "description": "Get the Notification Template object by name or id",
        "operationId": "notification_template_getAdminSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Admin Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification Template object by name or id",
        "description": "Update the Notification Template object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateAdminSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Admin Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/admin/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listAdminSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Admin Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/admin/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getAdminSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Admin Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateAdminSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Admin Subcollection)"
        ]
      }
    },
    "/orgs/{org}": {
      "description": "Organization object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Returns a provider organization.",
        "description": "Returns a provider organization.",
        "operationId": "org_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      },
      "patch": {
        "summary": "Updates a provider organization.",
        "description": "Updates a provider organization.\n\n          Fields not allowed:\n          - name\n          - org_type\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "org_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Org"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Org"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      },
      "delete": {
        "summary": "Deletes a provider organization.",
        "description": "Deletes a provider organization.",
        "operationId": "org_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      }
    },
    "/orgs/{org}/transfer-owner": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Transfer owner to an associate",
        "description": "Transfer owner to an associate",
        "operationId": "org_transferOwner",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cascade"
          },
          {
            "$ref": "#/components/parameters/delete_old_owner"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      }
    },
    "/orgs/{org}/search/user": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Search provider users from an organization.",
        "description": "Search provider users from an organization.",
        "operationId": "user_searchProviderOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      }
    },
    "/orgs/{org}/associates": {
      "description": "The collection of Associate operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Lists associates.",
        "description": "Returns a list of associates of the given provider org.",
        "operationId": "associate_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Associate (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/associates/{associate}": {
      "description": "Associate object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/associate"
        }
      ],
      "get": {
        "summary": "Returns an associate.",
        "description": "Returns an associate of the given provider org.",
        "operationId": "associate_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Associate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Associate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Associate (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations": {
      "description": "The collection of Member Invitation operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a provider organization member invitation.",
        "description": "Creates a provider organization member invitation.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "member_invitation_createOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      },
      "get": {
        "summary": "Lists provider organization member invitations.",
        "description": "Returns the list of member invitations for a provider organization.",
        "operationId": "member_invitation_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Clears provider organization member invitations.",
        "description": "Removes all member invitations for a provider organization.",
        "operationId": "member_invitation_clearOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations/{member-invitation}": {
      "description": "Member Invitation object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "get": {
        "summary": "Returns a provider organization member invitation.",
        "description": "Returns a provider organization member invitation.",
        "operationId": "member_invitation_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a provider organization member invitation.",
        "description": "Updates a member invitation to a provider organization.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "member_invitation_updateOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a provider organization member invitation.",
        "description": "Deletes a provider organization member invitation.",
        "operationId": "member_invitation_delOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations/{member-invitation}/regenerate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Regenerate the Member Invitation",
        "description": "Regenerate the Member Invitation",
        "operationId": "member_invitation_regenerateOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations/{member-invitation}/register": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Register using the Member Invitation",
        "description": "Register using the Member Invitation",
        "operationId": "member_invitation_registerOrgScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationRegister"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations/{member-invitation}/accept": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Accept using the Member Invitation",
        "description": "Accept using the Member Invitation",
        "operationId": "member_invitation_acceptOrgScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationAccept"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationAccept"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/members": {
      "description": "The collection of Member operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a provider organization member.",
        "description": "Adds a member to a provider organization.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n          - user_registry_url\n",
        "operationId": "member_createOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      },
      "get": {
        "summary": "Lists provider organization members.",
        "description": "Returns the list of members of a provider organization.",
        "operationId": "member_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Clears provider organization members.",
        "description": "Removes all members from a provider organization.",
        "operationId": "member_clearOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/members/{member}": {
      "description": "Member object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member"
        }
      ],
      "get": {
        "summary": "Returns a provider organization member.",
        "description": "Returns a member of a provider organization.",
        "operationId": "member_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a provider organization member.",
        "description": "Updates a member of a provider organization.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n          - user_registry_url\n",
        "operationId": "member_updateOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a provider organization member.",
        "description": "Removes a member from a provider organization.",
        "operationId": "member_delOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cascade"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      }
    },
    "/cloud/permissions": {
      "description": "Permission operations across all collections",
      "get": {
        "summary": "Lists cloud-level permissions.",
        "description": "Returns the overall list of permissions configured at the cloud level.",
        "operationId": "permission_listAll",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (All Subcollections)"
        ]
      }
    },
    "/cloud/permissions/org": {
      "description": "The collection of Permission operations",
      "get": {
        "summary": "Lists cloud-level oorganization permissions.",
        "description": "Returns the list of organization permissions defined at the cloud level.",
        "operationId": "permission_listOrgSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Org Subcollection)"
        ]
      }
    },
    "/cloud/permissions/org/{permission}": {
      "description": "Permission object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/permission"
        }
      ],
      "get": {
        "summary": "Returns an organization permission.",
        "description": "Returns an organization permissions instance defined at the cloud level.",
        "operationId": "permission_getOrgSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Org Subcollection)"
        ]
      }
    },
    "/cloud/permissions/cloud": {
      "description": "The collection of Permission operations",
      "get": {
        "summary": "Lists cloud-level cloud permissions.",
        "description": "Returns the list of cloud permissions defined at the cloud level.",
        "operationId": "permission_listCloudSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Cloud Subcollection)"
        ]
      }
    },
    "/cloud/permissions/cloud/{permission}": {
      "description": "Permission object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/permission"
        }
      ],
      "get": {
        "summary": "Returns a cloud permission.",
        "description": "Returns a cloud permissions instance defined at the cloud level.",
        "operationId": "permission_getCloudSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Cloud Subcollection)"
        ]
      }
    },
    "/cloud/permissions/provider": {
      "description": "The collection of Permission operations",
      "get": {
        "summary": "Lists cloud-level provider permissions.",
        "description": "Returns the list of provider permissions defined at the cloud level.",
        "operationId": "permission_listProviderSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Provider Subcollection)"
        ]
      }
    },
    "/cloud/permissions/provider/{permission}": {
      "description": "Permission object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/permission"
        }
      ],
      "get": {
        "summary": "Returns a provider permission.",
        "description": "Returns a provider permissions instance defined at the cloud level.",
        "operationId": "permission_getProviderSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Provider Subcollection)"
        ]
      }
    },
    "/cloud/permissions/consumer": {
      "description": "The collection of Permission operations",
      "get": {
        "summary": "Lists cloud-level consumer permissions.",
        "description": "Returns the list of consumer permissions defined at the cloud level.",
        "operationId": "permission_listConsumerSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Consumer Subcollection)"
        ]
      }
    },
    "/cloud/permissions/consumer/{permission}": {
      "description": "Permission object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/permission"
        }
      ],
      "get": {
        "summary": "Returns a consumer permission.",
        "description": "Returns a consumer permissions instance defined at the cloud level.",
        "operationId": "permission_getConsumerSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Consumer Subcollection)"
        ]
      }
    },
    "/cloud/permissions/deployment": {
      "description": "The collection of Permission operations",
      "get": {
        "summary": "Lists cloud-level deployment permissions.",
        "description": "Returns the list of deployment permissions defined at the cloud level.",
        "operationId": "permission_listDeploymentSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Deployment Subcollection)"
        ]
      }
    },
    "/cloud/permissions/deployment/{permission}": {
      "description": "Permission object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/permission"
        }
      ],
      "get": {
        "summary": "Returns a deployment permission.",
        "description": "Returns a deployment permissions instance defined at the cloud level.",
        "operationId": "permission_getDeploymentSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Deployment Subcollection)"
        ]
      }
    },
    "/orgs/{org}/roles": {
      "description": "The collection of Role operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a provider organization role.",
        "description": "Adds a role to a provider organization.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "role_createOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      },
      "get": {
        "summary": "Lists provider organization roles.",
        "description": "Returns the list of roles for a provider organization.",
        "operationId": "role_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Clears provider organization roles.",
        "description": "Removes all roles from a provider organization.",
        "operationId": "role_clearOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/roles/{role}": {
      "description": "Role object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/role"
        }
      ],
      "get": {
        "summary": "Returns a provider organization role.",
        "description": "Returns a role from a provider organization.",
        "operationId": "role_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a provider organization role.",
        "description": "Updates a role in a provider organization.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "role_updateOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a provider organization role.",
        "description": "Removes a role from a provider organization.",
        "operationId": "role_delOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones": {
      "description": "The collection of Availability Zone operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Create a Availability Zone object",
        "description": "Create a Availability Zone object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "availability_zone_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityZone"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityZone"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityZone"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityZone"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Availability Zone"
        ]
      },
      "get": {
        "summary": "List the Availability Zone objects",
        "description": "List the Availability Zone objects",
        "operationId": "availability_zone_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityZoneList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityZoneList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Availability Zone"
        ]
      },
      "delete": {
        "summary": "Clear the Availability Zone objects",
        "description": "Clear the Availability Zone objects",
        "operationId": "availability_zone_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Availability Zone"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}": {
      "description": "Availability Zone object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        }
      ],
      "get": {
        "summary": "Get the Availability Zone object by name or id",
        "description": "Get the Availability Zone object by name or id",
        "operationId": "availability_zone_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityZone"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityZone"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Availability Zone"
        ]
      },
      "patch": {
        "summary": "Update the Availability Zone object by name or id",
        "description": "Update the Availability Zone object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "availability_zone_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityZone"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityZone"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityZone"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityZone"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Availability Zone"
        ]
      },
      "delete": {
        "summary": "Delete the Availability Zone object by name or id",
        "description": "Delete the Availability Zone object by name or id",
        "operationId": "availability_zone_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityZone"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityZone"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Availability Zone"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services": {
      "description": "The collection of Gateway Service operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        }
      ],
      "post": {
        "summary": "Create a Gateway Service object",
        "description": "Create a Gateway Service object\n          \n          Required fields:\n          - endpoint\n          - api_endpoint_base\n          - sni\n          \n          Fields not allowed:\n          - owned\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - availability_zone_url\n",
        "operationId": "gateway_service_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GatewayService"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GatewayService"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayService"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Service"
        ]
      },
      "get": {
        "summary": "List the Gateway Service objects",
        "description": "List the Gateway Service objects",
        "operationId": "gateway_service_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayServiceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayServiceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Service"
        ]
      },
      "delete": {
        "summary": "Clear the Gateway Service objects",
        "description": "Clear the Gateway Service objects",
        "operationId": "gateway_service_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Service"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}": {
      "description": "Gateway Service object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        }
      ],
      "get": {
        "summary": "Get the Gateway Service object by name or id",
        "description": "Get the Gateway Service object by name or id",
        "operationId": "gateway_service_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Service"
        ]
      },
      "patch": {
        "summary": "Update the Gateway Service object by name or id",
        "description": "Update the Gateway Service object by name or id\n          \n          Fields not allowed to be null:\n          - endpoint\n          - api_endpoint_base\n          - sni\n          \n          Fields not allowed:\n          - owned\n          - endpoint\n          - integration_url\n          - gateway_service_type\n          - api_endpoint_base\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - availability_zone_url\n",
        "operationId": "gateway_service_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GatewayService"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GatewayService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Service"
        ]
      },
      "delete": {
        "summary": "Delete the Gateway Service object by name or id",
        "description": "Delete the Gateway Service object by name or id",
        "operationId": "gateway_service_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Service"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/reset-oauth-secret": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        }
      ],
      "post": {
        "summary": "Reset the oauth shared crypto material",
        "description": "Reset the oauth shared crypto material",
        "operationId": "gateway_service_resetOauthSecret",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Service"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/download-logs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        }
      ],
      "get": {
        "summary": "Get the Gateway Service download logs",
        "description": "Get the Gateway Service download logs",
        "operationId": "gateway_service_downloadLogs",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Service"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/policies": {
      "description": "Policy operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        }
      ],
      "get": {
        "summary": "List all Policy objects in all collections",
        "description": "List all Policy objects in all collections",
        "operationId": "policy_listAllOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Policy by Id (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/policies/{policy-name}": {
      "description": "The collection of Policy operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-name"
        }
      ],
      "get": {
        "summary": "List the Policy objects",
        "description": "List the Policy objects",
        "operationId": "policy_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Policy by Id (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/policies/{policy-id}": {
      "description": "Policy object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-id"
        }
      ],
      "get": {
        "summary": "Get the Policy object by id",
        "description": "Get the Policy object by id",
        "operationId": "policy_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Policy by Id (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/policies/{policy-name}/{policy-version}": {
      "description": "Policy object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-name"
        },
        {
          "$ref": "#/components/parameters/policy-version"
        }
      ],
      "get": {
        "summary": "Get the Policy object by name and version",
        "description": "Get the Policy object by name and version",
        "operationId": "policy_getByNameVersionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Policy by Id (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/policies/{policy-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-id"
        }
      ],
      "get": {
        "summary": "Get the Policy document",
        "description": "Get the Policy document",
        "operationId": "policy_getDocumentOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Policy by Id (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/policies/{policy-name}/{policy-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-name"
        },
        {
          "$ref": "#/components/parameters/policy-version"
        }
      ],
      "get": {
        "summary": "Get the Policy document by name and version",
        "description": "Get the Policy document by name and version",
        "operationId": "policy_getDocumentByNameVersionOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Policy by Id (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/extensions": {
      "description": "Extension operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        }
      ],
      "get": {
        "summary": "List all Extension objects in all collections",
        "description": "List all Extension objects in all collections",
        "operationId": "extension_listAllOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Extension by Id (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/extensions/{extension-name}": {
      "description": "The collection of Extension operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-name"
        }
      ],
      "get": {
        "summary": "List the Extension objects",
        "description": "List the Extension objects",
        "operationId": "extension_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Extension by Id (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/extensions/{extension-id}": {
      "description": "Extension object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-id"
        }
      ],
      "get": {
        "summary": "Get the Extension object by id",
        "description": "Get the Extension object by id",
        "operationId": "extension_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Extension by Id (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/extensions/{extension-name}/{extension-version}": {
      "description": "Extension object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-name"
        },
        {
          "$ref": "#/components/parameters/extension-version"
        }
      ],
      "get": {
        "summary": "Get the Extension object by name and version",
        "description": "Get the Extension object by name and version",
        "operationId": "extension_getByNameVersionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Extension by Id (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/extensions/{extension-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-id"
        }
      ],
      "get": {
        "summary": "Get the Extension document",
        "description": "Get the Extension document",
        "operationId": "extension_getDocumentOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Extension by Id (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/extensions/{extension-name}/{extension-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-name"
        },
        {
          "$ref": "#/components/parameters/extension-version"
        }
      ],
      "get": {
        "summary": "Get the Extension document by name and version",
        "description": "Get the Extension document by name and version",
        "operationId": "extension_getDocumentByNameVersionOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Extension by Id (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/gateway-extension": {
      "description": "Gateway Extension object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        }
      ],
      "post": {
        "summary": "Create the Gateway Extension object",
        "description": "Create the Gateway Extension object\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "gateway_extension_singletonCreateOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/GatewayExtensionMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayExtension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayExtension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Extension (Org Scope)"
        ]
      },
      "get": {
        "summary": "Get the Gateway Extension object",
        "description": "Get the Gateway Extension object",
        "operationId": "gateway_extension_singletonGetOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayExtension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayExtension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Extension (Org Scope)"
        ]
      },
      "put": {
        "summary": "Update the Gateway Extension object",
        "description": "Update the Gateway Extension object\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "gateway_extension_singletonUpdateOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GatewayExtension"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GatewayExtension"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/GatewayExtensionMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayExtension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayExtension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Extension (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Delete the Gateway Extension object",
        "description": "Delete the Gateway Extension object",
        "operationId": "gateway_extension_singletonDelOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayExtension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayExtension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Extension (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/gateway-extension/implementation": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        }
      ],
      "get": {
        "summary": "Get the Gateway Extension implementation document",
        "description": "Get the Gateway Extension implementation document",
        "operationId": "gateway_extension_getImplementationOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Implementation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Implementation"
                }
              },
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Extension (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/portal-services": {
      "description": "The collection of Portal Service operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        }
      ],
      "post": {
        "summary": "Create a Portal Service object",
        "description": "Create a Portal Service object\n          \n          Required fields:\n          - endpoint\n          - web_endpoint_base\n          \n          Fields not allowed:\n          - owned\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - availability_zone_url\n",
        "operationId": "portal_service_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalService"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/PortalService"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PortalService"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Portal Service"
        ]
      },
      "get": {
        "summary": "List the Portal Service objects",
        "description": "List the Portal Service objects",
        "operationId": "portal_service_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalServiceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PortalServiceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Portal Service"
        ]
      },
      "delete": {
        "summary": "Clear the Portal Service objects",
        "description": "Clear the Portal Service objects",
        "operationId": "portal_service_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          },
          {
            "$ref": "#/components/parameters/force"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Portal Service"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/portal-services/{portal-service}": {
      "description": "Portal Service object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/portal-service"
        }
      ],
      "get": {
        "summary": "Get the Portal Service object by name or id",
        "description": "Get the Portal Service object by name or id",
        "operationId": "portal_service_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PortalService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Portal Service"
        ]
      },
      "patch": {
        "summary": "Update the Portal Service object by name or id",
        "description": "Update the Portal Service object by name or id\n          \n          Fields not allowed to be null:\n          - endpoint_tls_client_profile_url\n          - web_endpoint_base\n          \n          Fields not allowed:\n          - owned\n          - endpoint\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - availability_zone_url\n",
        "operationId": "portal_service_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalService"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/PortalService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PortalService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Portal Service"
        ]
      },
      "delete": {
        "summary": "Delete the Portal Service object by name or id",
        "description": "Delete the Portal Service object by name or id",
        "operationId": "portal_service_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/force"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PortalService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Portal Service"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/portal-services/{portal-service}/update-credentials": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/portal-service"
        }
      ],
      "post": {
        "summary": "Update the Portal Service configuration",
        "description": "Update the Portal Service configuration",
        "operationId": "portal_service_updateCredentials",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCredentialsResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCredentialsResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Portal Service"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/analytics-services": {
      "description": "The collection of Analytics Service operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        }
      ],
      "post": {
        "summary": "Create a Analytics Service object",
        "description": "Create a Analytics Service object\n          \n          Fields not allowed:\n          - gateway_service_urls\n          - ingestion_endpoint\n          - client_endpoint\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - availability_zone_url\n",
        "operationId": "analytics_service_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsService"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsService"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Analytics Service"
        ]
      },
      "get": {
        "summary": "List the Analytics Service objects",
        "description": "List the Analytics Service objects",
        "operationId": "analytics_service_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsServiceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsServiceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Analytics Service"
        ]
      },
      "delete": {
        "summary": "Clear the Analytics Service objects",
        "description": "Clear the Analytics Service objects",
        "operationId": "analytics_service_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Analytics Service"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/analytics-services/{analytics-service}": {
      "description": "Analytics Service object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the Analytics Service object by name or id",
        "description": "Get the Analytics Service object by name or id",
        "operationId": "analytics_service_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Analytics Service"
        ]
      },
      "patch": {
        "summary": "Update the Analytics Service object by name or id",
        "description": "Update the Analytics Service object by name or id\n          \n          Fields not allowed to be null:\n          - ingestion_endpoint_tls_client_profile_url\n          - client_endpoint_tls_client_profile_url\n          \n          Fields not allowed:\n          - endpoint\n          - ingestion_endpoint\n          - client_endpoint\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - availability_zone_url\n",
        "operationId": "analytics_service_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsService"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Analytics Service"
        ]
      },
      "delete": {
        "summary": "Delete the Analytics Service object by name or id",
        "description": "Delete the Analytics Service object by name or id",
        "operationId": "analytics_service_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Analytics Service"
        ]
      }
    },
    "/orgs/{org}/oauth-providers": {
      "description": "The collection of Oauth Provider operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates an OAuth provider.",
        "description": "Creates an OAuth provider resource.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "oauth_provider_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OauthProvider"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/OauthProvider"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Oauth Provider"
        ]
      },
      "get": {
        "summary": "Lists OAuth providers.",
        "description": "Returns the list of all OAuth provider resources.",
        "operationId": "oauth_provider_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProviderList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProviderList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Oauth Provider"
        ]
      },
      "delete": {
        "summary": "Clears OAuth providers.",
        "description": "Deletes all OAuth provider resources.",
        "operationId": "oauth_provider_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Oauth Provider"
        ]
      }
    },
    "/orgs/{org}/oauth-providers/{oauth-provider}": {
      "description": "Oauth Provider object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/oauth-provider"
        }
      ],
      "get": {
        "summary": "Returns an OAuth provider.",
        "description": "Returns an OAuth provider resource.",
        "operationId": "oauth_provider_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Oauth Provider"
        ]
      },
      "patch": {
        "summary": "Creates an OAuth provider.",
        "description": "Updates an OAuth provider resource.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "oauth_provider_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OauthProvider"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/OauthProvider"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Oauth Provider"
        ]
      },
      "delete": {
        "summary": "Deletes an OAuth provider.",
        "description": "Deletes an OAuth provider resource.",
        "operationId": "oauth_provider_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Oauth Provider"
        ]
      }
    },
    "/orgs/{org}/mail-servers": {
      "description": "The collection of Mail Server operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Create a Mail Server object",
        "description": "Create a Mail Server object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "mail_server_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailServer"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MailServer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailServer"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MailServer"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Mail Server"
        ]
      },
      "get": {
        "summary": "List the Mail Server objects",
        "description": "List the Mail Server objects",
        "operationId": "mail_server_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailServerList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MailServerList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Mail Server"
        ]
      },
      "delete": {
        "summary": "Clear the Mail Server objects",
        "description": "Clear the Mail Server objects",
        "operationId": "mail_server_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Mail Server"
        ]
      }
    },
    "/orgs/{org}/mail-servers/{mail-server}": {
      "description": "Mail Server object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/mail-server"
        }
      ],
      "get": {
        "summary": "Get the Mail Server object by name or id",
        "description": "Get the Mail Server object by name or id",
        "operationId": "mail_server_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailServer"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MailServer"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Mail Server"
        ]
      },
      "patch": {
        "summary": "Update the Mail Server object by name or id",
        "description": "Update the Mail Server object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "mail_server_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailServer"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MailServer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailServer"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MailServer"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Mail Server"
        ]
      },
      "delete": {
        "summary": "Delete the Mail Server object by name or id",
        "description": "Delete the Mail Server object by name or id",
        "operationId": "mail_server_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailServer"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MailServer"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Mail Server"
        ]
      }
    },
    "/orgs/{org}/mail-servers/{mail-server}/test-connection": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/mail-server"
        }
      ],
      "post": {
        "summary": "Test a Mail Server connection",
        "description": "Test a Mail Server connection",
        "operationId": "mail_server_testConnectionByIdOrName",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailServerSavedTestConnection"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MailServerSavedTestConnection"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Mail Server"
        ]
      }
    },
    "/orgs/{org}/mail-servers/test-connection": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Test a Mail Server connection",
        "description": "Test a Mail Server connection",
        "operationId": "mail_server_testConnection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailServerProvidedTestConnection"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MailServerProvidedTestConnection"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Mail Server"
        ]
      }
    },
    "/orgs/{org}/tls-server-profiles": {
      "description": "TLS Server Profile operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Create a TLS Server Profile object",
        "description": "Create a TLS Server Profile object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "tls_server_profile_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TLSServerProfile"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TLSServerProfile"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Server Profile by Id"
        ]
      },
      "get": {
        "summary": "List all TLS Server Profile objects in all collections",
        "description": "List all TLS Server Profile objects in all collections",
        "operationId": "tls_server_profile_listAll",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfileList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfileList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Server Profile by Id"
        ]
      },
      "delete": {
        "summary": "Clear all TLS Server Profile objects in all collections",
        "description": "Clear all TLS Server Profile objects in all collections",
        "operationId": "tls_server_profile_clearAll",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          },
          {
            "$ref": "#/components/parameters/cascade"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Server Profile by Id"
        ]
      }
    },
    "/orgs/{org}/tls-server-profiles/{tls-server-profile-name}": {
      "description": "The collection of TLS Server Profile operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/tls-server-profile-name"
        }
      ],
      "get": {
        "summary": "List the TLS Server Profile objects",
        "description": "List the TLS Server Profile objects",
        "operationId": "tls_server_profile_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfileList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfileList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Server Profile by Id"
        ]
      },
      "delete": {
        "summary": "Clear the TLS Server Profile objects",
        "description": "Clear the TLS Server Profile objects",
        "operationId": "tls_server_profile_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          },
          {
            "$ref": "#/components/parameters/cascade"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Server Profile by Id"
        ]
      }
    },
    "/orgs/{org}/tls-server-profiles/{tls-server-profile-id}": {
      "description": "TLS Server Profile object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/tls-server-profile-id"
        }
      ],
      "get": {
        "summary": "Get the TLS Server Profile object by id",
        "description": "Get the TLS Server Profile object by id",
        "operationId": "tls_server_profile_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Server Profile by Id"
        ]
      },
      "patch": {
        "summary": "Update the TLS Server Profile object by id",
        "description": "Update the TLS Server Profile object by id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "tls_server_profile_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TLSServerProfile"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TLSServerProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Server Profile by Id"
        ]
      },
      "delete": {
        "summary": "Delete the TLS Server Profile object by id",
        "description": "Delete the TLS Server Profile object by id",
        "operationId": "tls_server_profile_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cascade"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Server Profile by Id"
        ]
      }
    },
    "/orgs/{org}/tls-server-profiles/{tls-server-profile-name}/{tls-server-profile-version}": {
      "description": "TLS Server Profile object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/tls-server-profile-name"
        },
        {
          "$ref": "#/components/parameters/tls-server-profile-version"
        }
      ],
      "get": {
        "summary": "Get the TLS Server Profile object by name and version",
        "description": "Get the TLS Server Profile object by name and version",
        "operationId": "tls_server_profile_getByNameVersion",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Server Profile by Id"
        ]
      },
      "patch": {
        "summary": "Update the TLS Server Profile object by name and version",
        "description": "Update the TLS Server Profile object by name and version\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "tls_server_profile_updateByNameVersion",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TLSServerProfile"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TLSServerProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Server Profile by Id"
        ]
      },
      "delete": {
        "summary": "Delete a TLS Server Profile",
        "description": "Delete a TLS Server Profile",
        "operationId": "tls_server_profile_delByNameVersion",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSServerProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Server Profile by Id"
        ]
      }
    },
    "/orgs/{org}/tls-client-profiles": {
      "description": "TLS Client Profile operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a TLS client profile.",
        "description": "Creates a TLS client profile.\n\n          Fields not allowed:\n          - owned\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "tls_client_profile_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TLSClientProfile"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TLSClientProfile"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "get": {
        "summary": "Lists TLS client profiles.",
        "description": "Returns the list of all TLS client profiles belonging to a provider organization.",
        "operationId": "tls_client_profile_listAll",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfileList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfileList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "delete": {
        "summary": "Clears TLS client profiles.",
        "description": "Removes all TLS client profiles belonging to a provider organization.",
        "operationId": "tls_client_profile_clearAll",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          },
          {
            "$ref": "#/components/parameters/cascade"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      }
    },
    "/orgs/{org}/tls-client-profiles/{tls-client-profile-name}": {
      "description": "The collection of TLS Client Profile operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/tls-client-profile-name"
        }
      ],
      "get": {
        "summary": "Lists TLS client profile versions.",
        "description": "Returns all versions of the named TLS client profile belonging to a provider organization.",
        "operationId": "tls_client_profile_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfileList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfileList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "delete": {
        "summary": "Clears TLS client profile versions.",
        "description": "Removes all versions of the named TLS client profile belonging to a provider organization.",
        "operationId": "tls_client_profile_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      }
    },
    "/orgs/{org}/tls-client-profiles/{tls-client-profile-id}": {
      "description": "TLS Client Profile object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/tls-client-profile-id"
        }
      ],
      "get": {
        "summary": "Returns a TLS client profile.",
        "description": "Returns a TLS client profile belonging to a provider organization.",
        "operationId": "tls_client_profile_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "patch": {
        "summary": "Updates a TLS client profile.",
        "description": "Updates a TLS client profile.\n\n          Fields not allowed:\n          - owned\n          \n          Fields not allowed to be null:\n          - ciphers\n          - protocols\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "tls_client_profile_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TLSClientProfile"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TLSClientProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "delete": {
        "summary": "Deletes a TLS client profile.",
        "description": "Deletes a TLS client profile belonging to a provider organization.",
        "operationId": "tls_client_profile_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      }
    },
    "/orgs/{org}/tls-client-profiles/{tls-client-profile-name}/{tls-client-profile-version}": {
      "description": "TLS Client Profile object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/tls-client-profile-name"
        },
        {
          "$ref": "#/components/parameters/tls-client-profile-version"
        }
      ],
      "get": {
        "summary": "Returns a TLS client profile.",
        "description": "Returns a TLS client profile belonging to a provider organization.",
        "operationId": "tls_client_profile_getByNameVersion",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "patch": {
        "summary": "Updates a TLS client profile.",
        "description": "Updates a TLS client profile.\n\n          Fields not allowed:\n          - owned\n          \n          Fields not allowed to be null:\n          - ciphers\n          - protocols\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "tls_client_profile_updateByNameVersion",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TLSClientProfile"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TLSClientProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "delete": {
        "summary": "Delete a TLS Client Profile",
        "description": "Delete a TLS Client Profile",
        "operationId": "tls_client_profile_delByNameVersion",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      }
    },
    "/orgs/{org}/keystores": {
      "description": "The collection of Keystore operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a keystore.",
        "description": "Creates a keystore belonging to a provider organization.\n\n          Required fields:\n          - keystore\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "keystore_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Keystore"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Keystore"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Keystore"
        ]
      },
      "get": {
        "summary": "Lists keystores.",
        "description": "Lists all keystores belonging to a provider organization.",
        "operationId": "keystore_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeystoreList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/KeystoreList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Keystore"
        ]
      },
      "delete": {
        "summary": "Clears keystores.",
        "description": "Removes all keystores belonging to a provider organization.",
        "operationId": "keystore_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Keystore"
        ]
      }
    },
    "/orgs/{org}/keystores/{keystore}": {
      "description": "Keystore object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/keystore"
        }
      ],
      "get": {
        "summary": "Returns a keystore.",
        "description": "Returns a keystores belonging to a provider organization.",
        "operationId": "keystore_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Keystore"
        ]
      },
      "patch": {
        "summary": "Updates a keystore.",
        "description": "Updates a keystore belonging to a provider organization.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "keystore_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Keystore"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Keystore"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Keystore"
        ]
      },
      "delete": {
        "summary": "Deletes a keystore.",
        "description": "Deletes a keystore belonging to a provider organization.",
        "operationId": "keystore_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Keystore"
        ]
      }
    },
    "/orgs/{org}/truststores": {
      "description": "The collection of Truststore operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a trust store.",
        "description": "Creates a trust store.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "truststore_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Truststore"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Truststore"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Truststore"
        ]
      },
      "get": {
        "summary": "Lists trust stores.",
        "description": "Returns the list of all trust stores belonging to a provider organization.",
        "operationId": "truststore_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruststoreList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TruststoreList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Truststore"
        ]
      },
      "delete": {
        "summary": "Clears trust stores.",
        "description": "Removes all trust stores belonging to a provider organization.",
        "operationId": "truststore_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Truststore"
        ]
      }
    },
    "/orgs/{org}/truststores/{truststore}": {
      "description": "Truststore object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/truststore"
        }
      ],
      "get": {
        "summary": "Returns a trust store.",
        "description": "Returns a trust store.",
        "operationId": "truststore_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Truststore"
        ]
      },
      "patch": {
        "summary": "Updates a trust store.",
        "description": "Updates a trust store.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "truststore_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Truststore"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Truststore"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Truststore"
        ]
      },
      "delete": {
        "summary": "Deletes a trust store.",
        "description": "Deletes a trust store.",
        "operationId": "truststore_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Truststore"
        ]
      }
    },
    "/orgs/{org}/truststores/{truststore}/entries": {
      "description": "The collection of Entry operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/truststore"
        }
      ],
      "post": {
        "summary": "Creates a trust store entry.",
        "description": "Adds an entry to a trust store.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "entry_createTruststoreScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Entry"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Entry"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Entry (Truststore Scope)"
        ]
      },
      "get": {
        "summary": "Lists trust store entries.",
        "description": "Returns the list of entries from a trust store.",
        "operationId": "entry_listTruststoreScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntryList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/EntryList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Entry (Truststore Scope)"
        ]
      },
      "delete": {
        "summary": "Clears trust store entries.",
        "description": "Deletes all entries from a trust store.",
        "operationId": "entry_clearTruststoreScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Entry (Truststore Scope)"
        ]
      }
    },
    "/orgs/{org}/truststores/{truststore}/entries/{entry}": {
      "description": "Entry object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/truststore"
        },
        {
          "$ref": "#/components/parameters/entry"
        }
      ],
      "get": {
        "summary": "Returns a trust store entry.",
        "description": "Returns the given entry from a trust store.",
        "operationId": "entry_getTruststoreScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Entry (Truststore Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a trust store entry.",
        "description": "Updates the given entry in a trust store.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "entry_updateTruststoreScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Entry"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Entry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Entry (Truststore Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a trust store entry.",
        "description": "Deletes the given entry from a trust store.",
        "operationId": "entry_delTruststoreScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Entry (Truststore Scope)"
        ]
      }
    },
    "/cloud/org-invitations": {
      "description": "The collection of Organization Invitation operations",
      "post": {
        "summary": "Create an Organization Invitation object",
        "description": "Create an Organization Invitation object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "invitation_createOrgScope",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Organization Invitation (Org Scope)"
        ]
      },
      "get": {
        "summary": "List the Organization Invitation objects",
        "description": "List the Organization Invitation objects",
        "operationId": "invitation_listOrgScope",
        "security": [
          {
            "oauth": [
              "provider-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Organization Invitation (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Clear the Organization Invitation objects",
        "description": "Clear the Organization Invitation objects",
        "operationId": "invitation_clearOrgScope",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Organization Invitation (Org Scope)"
        ]
      }
    },
    "/cloud/org-invitations/{invitation}": {
      "description": "Organization Invitation object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "get": {
        "summary": "Get the Organization Invitation object by name or id",
        "description": "Get the Organization Invitation object by name or id",
        "operationId": "invitation_getOrgScope",
        "security": [
          {
            "oauth": [
              "provider-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Organization Invitation (Org Scope)"
        ]
      },
      "patch": {
        "summary": "Update the Organization Invitation object by name or id",
        "description": "Update the Organization Invitation object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "invitation_updateOrgScope",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Organization Invitation (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Delete the Organization Invitation object by name or id",
        "description": "Delete the Organization Invitation object by name or id",
        "operationId": "invitation_delOrgScope",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Organization Invitation (Org Scope)"
        ]
      }
    },
    "/cloud/org-invitations/{invitation}/regenerate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "post": {
        "summary": "Regenerate the Organization Invitation",
        "description": "Regenerate the Organization Invitation",
        "operationId": "invitation_regenerateOrgScope",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Organization Invitation (Org Scope)"
        ]
      }
    },
    "/cloud/org-invitations/{invitation}/register": {
      "parameters": [
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "post": {
        "summary": "Register using the Organization Invitation",
        "description": "Register using the Organization Invitation",
        "operationId": "invitation_registerOrgScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationRegister"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/InvitationRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Organization Invitation (Org Scope)"
        ]
      }
    },
    "/cloud/org-invitations/{invitation}/accept": {
      "parameters": [
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "post": {
        "summary": "Accept using the Organization Invitation",
        "description": "Accept using the Organization Invitation",
        "operationId": "invitation_acceptOrgScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationAccept"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/InvitationAccept"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Organization Invitation (Org Scope)"
        ]
      }
    },
    "/cloud/orgs": {
      "description": "The collection of Organization operations",
      "post": {
        "summary": "Create an Organization object",
        "description": "Create an Organization object\n          \n          Required fields:\n          - owner_url\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "org_create",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Org"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Org"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Organization"
        ]
      },
      "get": {
        "summary": "List the Organization objects",
        "description": "List the Organization objects",
        "operationId": "org_list",
        "security": [
          {
            "oauth": [
              "provider-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/org_type"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OrgList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Organization"
        ]
      },
      "delete": {
        "summary": "Clear the Organization objects",
        "description": "Clear the Organization objects",
        "operationId": "org_clear",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Organization"
        ]
      }
    },
    "/cloud/provider/groups": {
      "description": "The collection of Group operations",
      "post": {
        "summary": "Create a Group object",
        "description": "Create a Group object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "group_createCloudScope",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Group (Cloud Scope)"
        ]
      },
      "get": {
        "summary": "List the Group objects",
        "description": "List the Group objects",
        "operationId": "group_listCloudScope",
        "security": [
          {
            "oauth": [
              "provider-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GroupList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Group (Cloud Scope)"
        ]
      },
      "delete": {
        "summary": "Clear the Group objects",
        "description": "Clear the Group objects",
        "operationId": "group_clearCloudScope",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Group (Cloud Scope)"
        ]
      }
    },
    "/cloud/provider/groups/{group}": {
      "description": "Group object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/group"
        }
      ],
      "get": {
        "summary": "Get the Group object by name or id",
        "description": "Get the Group object by name or id",
        "operationId": "group_getCloudScope",
        "security": [
          {
            "oauth": [
              "provider-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Group (Cloud Scope)"
        ]
      },
      "patch": {
        "summary": "Update the Group object by name or id",
        "description": "Update the Group object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "group_updateCloudScope",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Group (Cloud Scope)"
        ]
      },
      "delete": {
        "summary": "Delete the Group object by name or id",
        "description": "Delete the Group object by name or id",
        "operationId": "group_delCloudScope",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Group (Cloud Scope)"
        ]
      }
    },
    "/me": {
      "description": "Me object operations",
      "get": {
        "summary": "Returns the current user.",
        "description": "Returns the user profile for the currently authenticated user.",
        "operationId": "me_singletonGet",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/context"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      },
      "put": {
        "summary": "Updates the current user.",
        "description": "Updates the user profile for the currently authenticated user.\n\n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "me_singletonUpdate",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Me"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Me"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      },
      "delete": {
        "summary": "Deletes the current user.",
        "description": "Removes the currently authenticated user.",
        "operationId": "me_singletonDel",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      }
    },
    "/me/change-password": {
      "post": {
        "summary": "Change my password",
        "description": "Change my password",
        "operationId": "me_changePassword",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      }
    },
    "/me/reset-password": {
      "post": {
        "summary": "Reset password",
        "description": "Reset password",
        "operationId": "me_resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      }
    },
    "/me/sign-out": {
      "post": {
        "summary": "Sign out",
        "description": "Sign out",
        "operationId": "me_signOut",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "302": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      }
    },
    "/permissions": {
      "description": "The collection of My Permission operations",
      "get": {
        "summary": "Lists the user's permissions.",
        "description": "Returns the list of permissions for the currently authenticated user.",
        "operationId": "my_permission_list",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyPermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MyPermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: My Permission"
        ]
      }
    },
    "/orgs": {
      "description": "The collection of My Organization operations",
      "get": {
        "summary": "Lists the user's organizations.",
        "description": "Returns the list of organizations of which the currently authenticated user is a member.",
        "operationId": "my_org_list",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OrgList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: My Organization"
        ]
      }
    },
    "/cloud/webhooks": {
      "description": "The collection of Webhook operations",
      "get": {
        "summary": "List the Webhook objects",
        "description": "List the Webhook objects",
        "operationId": "webhook_listCloudScope",
        "security": [
          {
            "oauth": [
              "webhook:view",
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Webhook (Cloud Scope)"
        ]
      }
    },
    "/cloud/webhooks/{webhook}": {
      "description": "Webhook object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/webhook"
        }
      ],
      "get": {
        "summary": "Get the Webhook object by name or id",
        "description": "Get the Webhook object by name or id",
        "operationId": "webhook_getCloudScope",
        "security": [
          {
            "oauth": [
              "webhook:view",
              "cloud:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Webhook (Cloud Scope)"
        ]
      },
      "patch": {
        "summary": "Update the Webhook object by name or id",
        "description": "Update the Webhook object by name or id\n          \n          Fields not allowed:\n          - state_change_history\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "webhook_updateCloudScope",
        "security": [
          {
            "oauth": [
              "webhook:manage",
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Webhook (Cloud Scope)"
        ]
      }
    },
    "/cloud/primary-events": {
      "description": "The collection of Primary Event operations",
      "get": {
        "summary": "List the Primary Event objects",
        "description": "List the Primary Event objects",
        "operationId": "primary_event_listCloudScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/state"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEventList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEventList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Primary Event (Cloud Scope)"
        ]
      }
    },
    "/cloud/primary-events/{primary-event}": {
      "description": "Primary Event object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/primary-event"
        }
      ],
      "get": {
        "summary": "Get the Primary Event object by name or id",
        "description": "Get the Primary Event object by name or id",
        "operationId": "primary_event_getCloudScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEvent"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEvent"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Primary Event (Cloud Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/primary-events": {
      "description": "The collection of Primary Event operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        }
      ],
      "get": {
        "summary": "List the Primary Event objects",
        "description": "List the Primary Event objects",
        "operationId": "primary_event_listGatewayServiceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/state"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEventList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEventList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Primary Event (GatewayService Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/gateway-services/{gateway-service}/primary-events/{primary-event}": {
      "description": "Primary Event object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        },
        {
          "$ref": "#/components/parameters/primary-event"
        }
      ],
      "get": {
        "summary": "Get the Primary Event object by name or id",
        "description": "Get the Primary Event object by name or id",
        "operationId": "primary_event_getGatewayServiceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEvent"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEvent"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Primary Event (GatewayService Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/portal-services/{portal-service}/primary-events": {
      "description": "The collection of Primary Event operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/portal-service"
        }
      ],
      "get": {
        "summary": "List the Primary Event objects",
        "description": "List the Primary Event objects",
        "operationId": "primary_event_listPortalServiceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/state"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEventList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEventList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Primary Event (PortalService Scope)"
        ]
      }
    },
    "/orgs/{org}/availability-zones/{availability-zone}/portal-services/{portal-service}/primary-events/{primary-event}": {
      "description": "Primary Event object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/availability-zone"
        },
        {
          "$ref": "#/components/parameters/portal-service"
        },
        {
          "$ref": "#/components/parameters/primary-event"
        }
      ],
      "get": {
        "summary": "Get the Primary Event object by name or id",
        "description": "Get the Primary Event object by name or id",
        "operationId": "primary_event_getPortalServiceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEvent"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEvent"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Primary Event (PortalService Scope)"
        ]
      }
    },
    "/cloud/webhooks/{webhook}/subscriber-events": {
      "description": "The collection of Subscriber Event operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/webhook"
        }
      ],
      "get": {
        "summary": "List the Subscriber Event objects",
        "description": "List the Subscriber Event objects",
        "operationId": "subscriber_event_listCloudScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/state"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriberEventList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriberEventList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Subscriber Event (Cloud Scope)"
        ]
      }
    },
    "/cloud/webhooks/{webhook}/subscriber-events/{subscriber-event}": {
      "description": "Subscriber Event object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/webhook"
        },
        {
          "$ref": "#/components/parameters/subscriber-event"
        }
      ],
      "get": {
        "summary": "Get the Subscriber Event object by name or id",
        "description": "Get the Subscriber Event object by name or id",
        "operationId": "subscriber_event_getCloudScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriberEvent"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriberEvent"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Subscriber Event (Cloud Scope)"
        ]
      }
    },
    "/cloud/task-queues": {
      "description": "The collection of Task Queue operations",
      "get": {
        "summary": "List the Task Queue objects",
        "description": "List the Task Queue objects",
        "operationId": "task_queue_listCloudScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/cascade"
          },
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/query"
          },
          {
            "$ref": "#/components/parameters/kind"
          },
          {
            "$ref": "#/components/parameters/target"
          },
          {
            "$ref": "#/components/parameters/apply_filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskQueueList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TaskQueueList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Task Queue (Cloud Scope)"
        ]
      }
    },
    "/cloud/task-queues/{task-queue}": {
      "description": "Task Queue object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/task-queue"
        }
      ],
      "get": {
        "summary": "Get the Task Queue object by name or id",
        "description": "Get the Task Queue object by name or id",
        "operationId": "task_queue_getCloudScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/cascade"
          },
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/query"
          },
          {
            "$ref": "#/components/parameters/kind"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskQueue"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TaskQueue"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Task Queue (Cloud Scope)"
        ]
      }
    },
    "/cloud/emails/send-to-owners": {
      "post": {
        "summary": "Email provider org owners",
        "description": "Send an email to owners of provider orgs",
        "operationId": "cloud_emails_send",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/knowledge-center/api-connect/platform-apis/cloudemails#send"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailProviderOrgOwners"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/EmailProviderOrgOwners"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProviderOrgOwnersResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProviderOrgOwnersResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Organization"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "notification-language": {
        "name": "notification-language",
        "in": "path",
        "description": "Notification Language name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "X-IBM-Client-Id": {
        "name": "X-IBM-Client-Id",
        "in": "header",
        "description": "Registration client identifier",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "X-IBM-Client-Secret": {
        "name": "X-IBM-Client-Secret",
        "in": "header",
        "description": "Registration client secret",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "access-token": {
        "name": "access-token",
        "in": "path",
        "description": "Invitation Token name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "analytics-service": {
        "name": "analytics-service",
        "in": "path",
        "description": "Analytics Service name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api-key": {
        "name": "api-key",
        "in": "path",
        "description": "API Key name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api_type": {
        "name": "api_type",
        "in": "query",
        "description": "The type of api (asyncapi, rest, graphql, wsdl_to_rest, or wsdl)",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "apply_filter": {
        "name": "apply_filter",
        "in": "query",
        "description": "Filter tasks",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "assembly_type": {
        "name": "assembly_type",
        "in": "query",
        "description": "The type of the assembly to generate (rest_to_proxy)",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "associate": {
        "name": "associate",
        "in": "path",
        "description": "Associate name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "availability-zone": {
        "name": "availability-zone",
        "in": "path",
        "description": "Availability Zone name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "base_path": {
        "name": "base_path",
        "in": "query",
        "description": "Base path of the API",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "capture-id": {
        "name": "capture-id",
        "in": "path",
        "description": "Capture id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "cascade": {
        "name": "cascade",
        "in": "query",
        "description": "Cascade the behavior",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "catalog_name": {
        "name": "catalog_name",
        "in": "query",
        "description": "Name of a catalog",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "catalog_url": {
        "name": "catalog_url",
        "in": "query",
        "description": "Catalog URL",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "client_id": {
        "name": "client_id",
        "in": "query",
        "description": "Registration client identifier",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "code": {
        "name": "code",
        "in": "query",
        "description": "Oauth2 code",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "confirm": {
        "name": "confirm",
        "in": "query",
        "description": "Confirmation for critical updates",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "consumer_org_url": {
        "name": "consumer_org_url",
        "in": "query",
        "description": "Consumer Org Url",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "context": {
        "name": "context",
        "in": "query",
        "description": "user's login context admin/manager",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "delete_old_owner": {
        "name": "delete_old_owner",
        "in": "query",
        "description": "Delete old owner",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "disable_ws_security": {
        "name": "disable_ws_security",
        "in": "query",
        "description": "Disable generation of WS-Security definitions in api",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "endpoint": {
        "name": "endpoint",
        "in": "query",
        "description": "Endpoint url",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "enforced": {
        "name": "enforced",
        "in": "query",
        "description": "Whether the API is enforced or not",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "entry": {
        "name": "entry",
        "in": "path",
        "description": "Entry name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "error": {
        "name": "error",
        "in": "query",
        "description": "error per OAuth specification",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "error_description": {
        "name": "error_description",
        "in": "query",
        "description": "error_description per OAuth specification",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "error_uri": {
        "name": "error_uri",
        "in": "query",
        "description": "error_uri per OAuth specification",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "event_state": {
        "name": "event_state",
        "in": "query",
        "description": "Event state to filter by",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "expand": {
        "name": "expand",
        "in": "query",
        "description": "List of transient field to expand",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "extension-id": {
        "name": "extension-id",
        "in": "path",
        "description": "Extension name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "extension-name": {
        "name": "extension-name",
        "in": "path",
        "description": "Extension name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "extension-version": {
        "name": "extension-version",
        "in": "path",
        "description": "Extension version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "name": "fields",
        "in": "query",
        "description": "List of field names to return",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "force": {
        "name": "force",
        "in": "query",
        "description": "Force the operation",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "gateway-service": {
        "name": "gateway-service",
        "in": "path",
        "description": "Gateway Service name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "gateway_service_names": {
        "name": "gateway_service_names",
        "in": "query",
        "description": "Names of Gateway Services",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "gateway_services": {
        "name": "gateway_services",
        "in": "query",
        "description": "The list of gateway service names to support partial publishing",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "gateway_type": {
        "name": "gateway_type",
        "in": "query",
        "description": "The type of the gateway (datapower-gateway, datapower-api-gateway, event-gateway)",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "group": {
        "name": "group",
        "in": "path",
        "description": "Group name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "integration": {
        "name": "integration",
        "in": "path",
        "description": "Integration name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "invitation": {
        "name": "invitation",
        "in": "path",
        "description": "Organization Invitation name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "invitation-token": {
        "name": "invitation-token",
        "in": "path",
        "description": "Invitation Token name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "invitation_scope": {
        "name": "invitation_scope",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "keystore": {
        "name": "keystore",
        "in": "path",
        "description": "Keystore name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "kind": {
        "name": "kind",
        "in": "query",
        "description": "kind of item",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Maximum number of items to return",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "mail-server": {
        "name": "mail-server",
        "in": "path",
        "description": "Mail Server name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "member": {
        "name": "member",
        "in": "path",
        "description": "Member name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "member-invitation": {
        "name": "member-invitation",
        "in": "path",
        "description": "Member Invitation name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "metadata": {
        "name": "metadata",
        "in": "query",
        "description": "List of metadata fields in the api to filter on",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "migrate_subscriptions": {
        "name": "migrate_subscriptions",
        "in": "query",
        "description": "Migrate subscription when republish product",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "my-org": {
        "name": "my-org",
        "in": "path",
        "description": "My Organization name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "my-permission": {
        "name": "my-permission",
        "in": "path",
        "description": "My Permission name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "name": {
        "name": "name",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "notification-template": {
        "name": "notification-template",
        "in": "path",
        "description": "Notification Template name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "oauth-provider": {
        "name": "oauth-provider",
        "in": "path",
        "description": "Oauth Provider name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "oauth-state": {
        "name": "oauth-state",
        "in": "path",
        "description": "Oauth State name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "oauth_token": {
        "name": "oauth_token",
        "in": "query",
        "description": "Oauth Token for Twitter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "oauth_verifier": {
        "name": "oauth_verifier",
        "in": "query",
        "description": "Oauth Verifier for Twitter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "Offset item number from list to begin return",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "operation": {
        "name": "operation",
        "in": "query",
        "description": "Operation to perform on the user registry (get_base_dn_list, validate_password)",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "org": {
        "name": "org",
        "in": "path",
        "description": "Organization name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "org_type": {
        "name": "org_type",
        "in": "query",
        "description": "Type of orgs to return",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "permission": {
        "name": "permission",
        "in": "path",
        "description": "Permission name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "plan": {
        "name": "plan",
        "in": "query",
        "description": "Plan Name",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "policy-id": {
        "name": "policy-id",
        "in": "path",
        "description": "Policy name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "policy-name": {
        "name": "policy-name",
        "in": "path",
        "description": "Policy name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "policy-version": {
        "name": "policy-version",
        "in": "path",
        "description": "Policy version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "portal-service": {
        "name": "portal-service",
        "in": "path",
        "description": "Portal Service name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "primary-event": {
        "name": "primary-event",
        "in": "path",
        "description": "Primary Event name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "product_url": {
        "name": "product_url",
        "in": "query",
        "description": "Product Url",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "query": {
        "name": "query",
        "in": "query",
        "description": "Add query to request",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "realm": {
        "name": "realm",
        "in": "query",
        "description": "User registry realm name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "redirect_uri": {
        "name": "redirect_uri",
        "in": "query",
        "description": "Redirect Url",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "refresh-token": {
        "name": "refresh-token",
        "in": "path",
        "description": "Refresh Token name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "registration": {
        "name": "registration",
        "in": "path",
        "description": "Registration name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "response_type": {
        "name": "response_type",
        "in": "query",
        "description": "Oauth2 response_type",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "role": {
        "name": "role",
        "in": "path",
        "description": "Role name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "role-default": {
        "name": "role-default",
        "in": "path",
        "description": "Role Default name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "scope": {
        "name": "scope",
        "in": "query",
        "description": "Scope of the call",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "snapshot": {
        "name": "snapshot",
        "in": "path",
        "description": "Snapshot name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "space_name": {
        "name": "space_name",
        "in": "query",
        "description": "Name of a space",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "state": {
        "name": "state",
        "in": "query",
        "description": "State for a webhook event in subscriber queue",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "subscriber-event": {
        "name": "subscriber-event",
        "in": "path",
        "description": "Subscriber Event name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "subsystem-service": {
        "name": "subsystem-service",
        "in": "path",
        "description": "Subsystem Service name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "subsystem_service_name": {
        "name": "subsystem_service_name",
        "in": "query",
        "description": "Name of subsystem service",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "subsystem_service_type": {
        "name": "subsystem_service_type",
        "in": "query",
        "description": "Type of subsystem service",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "summary": {
        "name": "summary",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "target": {
        "name": "target",
        "in": "query",
        "description": "target for the task",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "task-queue": {
        "name": "task-queue",
        "in": "path",
        "description": "Task Queue name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "title": {
        "name": "title",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "tls-client-profile-id": {
        "name": "tls-client-profile-id",
        "in": "path",
        "description": "TLS Client Profile name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "tls-client-profile-name": {
        "name": "tls-client-profile-name",
        "in": "path",
        "description": "TLS Client Profile name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "tls-client-profile-version": {
        "name": "tls-client-profile-version",
        "in": "path",
        "description": "TLS Client Profile version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "tls-server-profile-id": {
        "name": "tls-server-profile-id",
        "in": "path",
        "description": "TLS Server Profile name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "tls-server-profile-name": {
        "name": "tls-server-profile-name",
        "in": "path",
        "description": "TLS Server Profile name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "tls-server-profile-version": {
        "name": "tls-server-profile-version",
        "in": "path",
        "description": "TLS Server Profile version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "token": {
        "name": "token",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "transaction-id": {
        "name": "transaction-id",
        "in": "path",
        "description": "Transaction id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "truststore": {
        "name": "truststore",
        "in": "path",
        "description": "Truststore name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "upper_time_limit": {
        "name": "upper_time_limit",
        "in": "query",
        "description": "Upper limit on generated_at",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "user": {
        "name": "user",
        "in": "path",
        "description": "User name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "user-registry": {
        "name": "user-registry",
        "in": "path",
        "description": "User Registry name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "validate_apis": {
        "name": "validate_apis",
        "in": "query",
        "description": "Whether to validate APIs also",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "webhook": {
        "name": "webhook",
        "in": "path",
        "description": "Webhook name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "wsdl_service": {
        "name": "wsdl_service",
        "in": "query",
        "description": "Name of WSDL service to create the OpenAPI definition from",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "wsdl_services": {
        "name": "wsdl_services",
        "in": "query",
        "description": "A comma delimited list of WSDL services to introspect",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "headers": {
      "Location": {
        "description": "URL referencing a newly created resource",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "AccessToken": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "access_token"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string",
            "enum": [
              "registration",
              "personal",
              "invitation",
              "sign_up",
              "reset_password",
              "Bearer"
            ]
          },
          "third_party_at_iat": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 2147483647
          },
          "third_party_at_expires_in": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 2147483647
          },
          "third_party_access_token": {
            "type": "string"
          },
          "third_party_refresh_token": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "AccessTokenList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessToken"
            }
          }
        }
      },
      "Activation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "activation"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "activation_link": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "user_registry_url": {
            "type": "string",
            "format": "uri"
          },
          "identity_provider": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "consumer_org": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "active",
              "pending"
            ]
          },
          "ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ActivationList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Activation"
            }
          }
        }
      },
      "AnalyticsService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "analytics_service"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "ingestion_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "ingestion_endpoint_tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "client_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "client_endpoint_tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "internal_svc_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "internal_svc_endpoint_tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "availability_zone_url": {
            "type": "string",
            "format": "uri"
          },
          "communication_from_apim_kind": {
            "type": "string",
            "enum": [
              "external",
              "internal_svc"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "AnalyticsServiceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsService"
            }
          }
        }
      },
      "API": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "api"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "staged",
              "online",
              "offline",
              "retired"
            ]
          },
          "api": {
            "type": "object",
            "additionalProperties": true
          },
          "wsdl": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "content_type",
              "content"
            ],
            "properties": {
              "content_type": {
                "type": "string",
                "enum": [
                  "application/wsdl",
                  "application/wsdl+xml",
                  "text/xml",
                  "application/zip"
                ]
              },
              "content": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "api_type": {
            "type": "string",
            "enum": [
              "rest",
              "wsdl",
              "graphql",
              "asyncapi"
            ]
          },
          "gateway_type": {
            "type": "string",
            "enum": [
              "datapower-gateway",
              "datapower-api-gateway",
              "event-gateway"
            ]
          },
          "oai_version": {
            "type": "string",
            "enum": [
              "openapi2",
              "openapi3"
            ]
          },
          "document_specification": {
            "type": "string",
            "enum": [
              "asyncapi2.0",
              "asyncapi2.1",
              "openapi2",
              "openapi3"
            ]
          },
          "base_paths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enforced": {
            "type": "boolean"
          },
          "catalog_api": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "swagger": {
                "type": "string"
              },
              "info": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "title",
                  "version"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "x-ibm-name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "x-ibm-summary": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "gateway_api": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "swagger": {
                "type": "string"
              },
              "info": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "title",
                  "version"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "x-ibm-name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "x-ibm-summary": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "consumer_api": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "swagger": {
                "type": "string"
              },
              "info": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "title",
                  "version"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "x-ibm-name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "x-ibm-summary": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "extension_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "specialization": {
            "$ref": "#/components/schemas/APISpecialization"
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "oauth_providers": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "provider_type": {
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "APIList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/API"
            }
          }
        }
      },
      "APIKey": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "api_key"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "client_type": {
            "type": "string",
            "enum": [
              "toolkit",
              "atm"
            ]
          },
          "realm": {
            "type": "string"
          },
          "user_url": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "token_exp": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "token_iat": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "token_jti": {
            "type": "string"
          },
          "api_key": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "APIKeyList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APIKey"
            }
          }
        }
      },
      "App": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "app"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "lifecycle_state": {
            "type": "string",
            "enum": [
              "development",
              "production"
            ]
          },
          "lifecycle_state_pending": {
            "type": "string",
            "nullable": true,
            "enum": [
              "production"
            ]
          },
          "app_credential_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "redirect_endpoints": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "application_public_certificate_entry": {
            "type": "string"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "task_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "image_endpoint": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "application_type_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "credentials": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "client_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "AppList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          }
        }
      },
      "ApplicationType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "application_type"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "oauth_types": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "client_type",
                "grant_types"
              ],
              "properties": {
                "client_type": {
                  "type": "string",
                  "enum": [
                    "public",
                    "confidential"
                  ]
                },
                "grant_types": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "password",
                      "implicit",
                      "access_code",
                      "application",
                      "jwt"
                    ]
                  }
                }
              }
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "app_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ApplicationTypeList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationType"
            }
          }
        }
      },
      "Associate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "associate"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "AssociateList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Associate"
            }
          }
        }
      },
      "AvailabilityZone": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "availability_zone"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "management": {
            "type": "boolean"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "AvailabilityZoneList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailabilityZone"
            }
          }
        }
      },
      "Billing": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "billing"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "payment_method_integration_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "visibility": {
            "$ref": "#/components/schemas/ResourceVisibility"
          },
          "owned": {
            "type": "boolean"
          },
          "configured_billing_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "custom_endpoint": {
            "$ref": "#/components/schemas/SecuredEndpoint"
          },
          "job_queue_status": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "queue_length": {
                "type": "integer"
              },
              "head_state": {
                "type": "string"
              },
              "head_error": {
                "type": "string"
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "BillingList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Billing"
            }
          }
        }
      },
      "Catalog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "catalog"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "owner_url": {
            "type": "string",
            "format": "uri"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "configured_catalog_user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "app_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "CatalogList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Catalog"
            }
          }
        }
      },
      "CatalogSetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "catalog_setting"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "user_registry_default_url": {
            "type": "string",
            "format": "uri"
          },
          "production_mode": {
            "type": "boolean"
          },
          "portal": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "none",
                  "drupal"
                ]
              },
              "endpoint": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "portal_service_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "webhook_url": {
                "type": "string",
                "format": "uri"
              },
              "webhook_state": {
                "type": "string"
              },
              "service_version": {
                "type": "string"
              },
              "state": {
                "type": "string",
                "enum": [
                  "pending",
                  "ready"
                ]
              }
            }
          },
          "product_lifecycle_approvals": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "staged",
                "published",
                "deprecated",
                "retired",
                "archived",
                "replace",
                "supersede"
              ]
            }
          },
          "task_self_approval": {
            "type": "boolean"
          },
          "allowed_product_visibility": {
            "$ref": "#/components/schemas/ProductVisibility"
          },
          "application_lifecycle": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            }
          },
          "consumer_self_service_onboarding": {
            "type": "boolean"
          },
          "consumer_self_service_onboarding_approval": {
            "type": "boolean"
          },
          "consumer_org_invitations_enabled": {
            "type": "boolean"
          },
          "consumer_org_invitation_roles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "administrator",
                "developer",
                "viewer"
              ]
            }
          },
          "invitation_ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "legacy_endpoint_behavior": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "v5_endpoint_substitution_behavior": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true,
            "properties": {
              "base_endpoints": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "endpoint": {
                      "type": "string",
                      "format": "uri"
                    },
                    "gateway_service_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              },
              "unenforced_api_base_endpoint": {
                "type": "string",
                "format": "uri",
                "nullable": true
              }
            }
          },
          "vanity_api_endpoint": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "endpoint_preference": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "catalog",
                  "api"
                ]
              },
              "vanity_api_base_endpoints": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "endpoint",
                    "type"
                  ],
                  "properties": {
                    "endpoint": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": {
                      "type": "string"
                    },
                    "type": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "development",
                          "production"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "spaces_enabled": {
            "type": "boolean"
          },
          "custom_notification_templates_enabled": {
            "type": "boolean"
          },
          "email_sender": {
            "$ref": "#/components/schemas/EmailSender"
          },
          "hash_client_secret": {
            "type": "boolean"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "default_catalog": {
            "type": "boolean"
          },
          "product_publish_validations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "override_invitation_ttl_for_all_consumer_orgs": {
            "type": "boolean"
          },
          "gateway_supported_protocols": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "enum": [
                "wss",
                "https",
                "ws",
                "http"
              ]
            }
          },
          "consumer_self_service_onboarding_ttl": {
            "type": "integer",
            "nullable": true,
            "minimum": 60,
            "maximum": 31536000
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "CloudSetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "cloud_setting"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "cloud_name": {
            "type": "string"
          },
          "cloud_id": {
            "type": "string"
          },
          "mail_server_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "invitation_ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "reset_password_ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "provision_sandbox_catalog": {
            "type": "boolean"
          },
          "restrict_member_manage_permission": {
            "type": "boolean",
            "default": false
          },
          "access_token_expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "refresh_token_enabled": {
            "type": "boolean"
          },
          "refresh_expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "api_key_enabled": {
            "type": "boolean",
            "default": true
          },
          "api_key_expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "api_key_multiple_uses": {
            "type": "boolean",
            "default": false
          },
          "sso_settings": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "org_types": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "admin",
                    "provider"
                  ]
                },
                "nullable": true
              },
              "default_org_type": {
                "type": "string",
                "enum": [
                  "admin",
                  "provider"
                ],
                "nullable": true
              },
              "user_registry_urls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                },
                "nullable": true
              },
              "default_user_registry_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "registration_urls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                },
                "nullable": true
              },
              "default_registration_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              }
            },
            "nullable": true
          },
          "audit_setting": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "audit_reads": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "response_data_to_http_endpoints": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "list_results_limit": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 10000
                      }
                    }
                  }
                }
              },
              "mode": {
                "type": "string",
                "enum": [
                  "block",
                  "non_block"
                ]
              },
              "endpoints": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "endpoint_type": {
                      "type": "string",
                      "enum": [
                        "http",
                        "syslog_udp",
                        "syslog_tcp",
                        "syslog_tls"
                      ]
                    },
                    "endpoint": {
                      "$ref": "#/components/schemas/SecuredEndpoint"
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "nullable": true
                    }
                  },
                  "required": [
                    "endpoint"
                  ]
                }
              }
            }
          },
          "gateway_service_default_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "cloud_manager_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "api_manager_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "platform_api_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "consumer_api_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "platform_api_svc_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "consumer_api_svc_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "license_accepted": {
            "type": "boolean"
          },
          "email_sender": {
            "$ref": "#/components/schemas/EmailSender"
          },
          "ibm_cloud": {
            "type": "boolean"
          },
          "service_type": {
            "type": "string",
            "enum": [
              "monolithic",
              "microservice"
            ]
          },
          "tls_client_profile_default_url": {
            "type": "string",
            "format": "uri"
          },
          "token_issuer": {
            "type": "string"
          },
          "access_token_keystore_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "id_token_keystore_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "temporary_token_keystore_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "self_signed_token_keystore_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "atm_base_path": {
            "type": "string",
            "nullable": true
          },
          "temporary_token_format": {
            "type": "string",
            "enum": [
              "jwt",
              "b64"
            ]
          },
          "sync_roles_setting": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "endpoint": {
                "$ref": "#/components/schemas/SecuredEndpoint"
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredAPIUserRegistry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "configured_api_user_registry"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "user_registry_url": {
            "type": "string",
            "format": "uri"
          },
          "owned": {
            "type": "boolean"
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "registry_type": {
            "type": "string"
          },
          "user_managed": {
            "type": "boolean"
          },
          "user_registry_managed": {
            "type": "boolean"
          },
          "external_group_mapping_enabled": {
            "type": "boolean",
            "default": false
          },
          "onboarding": {
            "type": "string",
            "nullable": true,
            "enum": [
              "active",
              "suspended"
            ]
          },
          "case_sensitive": {
            "type": "boolean"
          },
          "email_required": {
            "type": "boolean",
            "default": false
          },
          "email_unique_if_exist": {
            "type": "boolean",
            "default": true
          },
          "identity_providers": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          },
          "configuration": {
            "type": "object",
            "additionalProperties": true
          },
          "endpoint": {
            "$ref": "#/components/schemas/SecuredEndpoint"
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "global_policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredAPIUserRegistryList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
            }
          }
        }
      },
      "ConfiguredBilling": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "configured_billing"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "billing_url": {
            "type": "string",
            "format": "uri"
          },
          "owned": {
            "type": "boolean"
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "payment_method_integration_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredBillingList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfiguredBilling"
            }
          }
        }
      },
      "ConfiguredCatalogUserRegistry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "configured_catalog_user_registry"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "user_registry_url": {
            "type": "string",
            "format": "uri"
          },
          "owned": {
            "type": "boolean"
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "registry_type": {
            "type": "string"
          },
          "user_managed": {
            "type": "boolean"
          },
          "user_registry_managed": {
            "type": "boolean"
          },
          "external_group_mapping_enabled": {
            "type": "boolean",
            "default": false
          },
          "onboarding": {
            "type": "string",
            "nullable": true,
            "enum": [
              "active",
              "suspended"
            ]
          },
          "case_sensitive": {
            "type": "boolean"
          },
          "email_required": {
            "type": "boolean",
            "default": false
          },
          "email_unique_if_exist": {
            "type": "boolean",
            "default": true
          },
          "identity_providers": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          },
          "configuration": {
            "type": "object",
            "additionalProperties": true
          },
          "endpoint": {
            "$ref": "#/components/schemas/SecuredEndpoint"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredCatalogUserRegistryList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfiguredCatalogUserRegistry"
            }
          }
        }
      },
      "ConfiguredGatewayService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "configured_gateway_service"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "gateway_service_url": {
            "type": "string",
            "format": "uri"
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_type": {
            "type": "string"
          },
          "owned": {
            "type": "boolean"
          },
          "configuration": {
            "type": "object"
          },
          "availability_zone_url": {
            "type": "string",
            "format": "uri"
          },
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "api_endpoint_base": {
            "type": "string"
          },
          "catalog_base": {
            "type": "string"
          },
          "sni": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "host": {
                  "type": "string"
                },
                "tls_server_profile_url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "oauth_shared_secret": {
            "type": "string",
            "format": "password"
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "ready"
            ]
          },
          "overall_state": {
            "type": "string",
            "enum": [
              "pending",
              "ready"
            ]
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "analytics_service_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "gateway_version": {
            "type": "string"
          },
          "domain_name": {
            "type": "string"
          },
          "managed_by": {
            "type": "string",
            "enum": [
              "apim",
              "gateway"
            ]
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "catalog_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "webhook_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_webhook_url": {
            "type": "string",
            "format": "uri"
          },
          "webhook_state": {
            "type": "string"
          },
          "catalog_webhook_state": {
            "type": "string"
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_processing_status": {
            "$ref": "#/components/schemas/SubscriberProcessingStatus"
          },
          "events": {
            "type": "object",
            "properties": {
              "sent_events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriberEvent"
                }
              },
              "queued_events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriberEvent"
                }
              }
            }
          },
          "service_version": {
            "type": "string",
            "nullable": true
          },
          "communication_kind": {
            "type": "string",
            "enum": [
              "external",
              "internal_svc"
            ]
          },
          "communication_to_analytics_kind": {
            "type": "string",
            "enum": [
              "external",
              "internal_svc"
            ]
          },
          "communication_to_analytics_with_jwt": {
            "type": "boolean",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredGatewayServiceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfiguredGatewayService"
            }
          }
        }
      },
      "ConfiguredOauthProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "configured_oauth_provider"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "oauth_provider_url": {
            "type": "string",
            "format": "uri"
          },
          "owned": {
            "type": "boolean"
          },
          "debug": {
            "type": "boolean"
          },
          "provider_type": {
            "type": "string",
            "enum": [
              "native",
              "third_party"
            ]
          },
          "scopes": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "grants": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "access_code",
                "application",
                "password",
                "implicit",
                "jwt"
              ]
            }
          },
          "gateway_version": {
            "type": "string",
            "enum": [
              "5000",
              "6000"
            ]
          },
          "advanced_scope": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "override_endpoint_from_api": {
                "type": "boolean"
              },
              "default_validator_endpoint": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "required": [
                  "endpoint"
                ],
                "properties": {
                  "endpoint": {
                    "type": "string"
                  },
                  "tls_client_profile_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  }
                }
              },
              "request_query": {
                "type": "string"
              },
              "request_headers_regex": {
                "type": "string"
              },
              "response_headers_regex": {
                "type": "string"
              }
            }
          },
          "native_provider": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "api": {
                "$ref": "#/components/schemas/OAI3",
                "nullable": true
              },
              "default_scopes": {
                "type": "string",
                "nullable": true
              },
              "authorize_path": {
                "type": "string"
              },
              "token_path": {
                "type": "string"
              },
              "token_secret": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  }
                }
              },
              "clients": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "confidential",
                    "public"
                  ]
                }
              },
              "access_code_ttl": {
                "type": "integer",
                "minimum": 1,
                "maximum": 600
              },
              "access_token_ttl": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "access_token_one_time_use": {
                "type": "boolean"
              },
              "maximum_consent_ttl": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "refresh_token": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "count": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "ttl": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "one_time_use": {
                    "type": "boolean"
                  }
                }
              },
              "revocation": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "native",
                      "third_party"
                    ]
                  },
                  "resource_owner_revocation_path": {
                    "type": "string"
                  },
                  "client_revocation_path": {
                    "type": "string"
                  },
                  "third_party_endpoint": {
                    "type": "object",
                    "additionalProperties": false,
                    "nullable": true,
                    "required": [
                      "endpoint"
                    ],
                    "properties": {
                      "endpoint": {
                        "type": "string"
                      },
                      "tls_client_profile_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                      }
                    }
                  },
                  "application_revocation": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "apprevoke_path": {
                        "type": "string"
                      }
                    }
                  },
                  "third_party_security": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "basic-auth"
                      ]
                    }
                  },
                  "basic_auth": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string",
                        "nullable": true
                      },
                      "request_headername": {
                        "type": "string"
                      }
                    }
                  },
                  "custom_headername_format": {
                    "type": "string"
                  },
                  "third_party_cache_type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "no-cache",
                        "protocol",
                        "time-to-live"
                      ]
                    }
                  },
                  "third_party_revocation_protocol": {
                    "type": "string",
                    "items": {
                      "type": "string",
                      "enum": [
                        "XML",
                        "JSON"
                      ]
                    }
                  },
                  "time_to_live": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cache_ttl": {
                        "type": "integer"
                      }
                    }
                  },
                  "third_party_fail_on_error": {
                    "type": "boolean",
                    "default": true
                  },
                  "owner_revocation": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "owner_revoke_path": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "token_introspection": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "introspection_path": {
                    "type": "string"
                  }
                }
              },
              "token_metadata": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "source": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "external_url",
                        "authentication_url"
                      ]
                    }
                  },
                  "external_endpoint": {
                    "type": "object",
                    "additionalProperties": false,
                    "nullable": true,
                    "required": [
                      "endpoint"
                    ],
                    "properties": {
                      "endpoint": {
                        "type": "string"
                      },
                      "tls_client_profile_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                      }
                    }
                  },
                  "header_name_token": {
                    "type": "string"
                  },
                  "header_name_payload": {
                    "type": "string"
                  }
                }
              },
              "openid_connect": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "discovery_path": {
                    "type": "string",
                    "nullable": true
                  },
                  "supported_response_types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "code_id_token",
                        "code_access_token",
                        "code_id_token_access_token"
                      ]
                    }
                  }
                }
              },
              "pkce": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "required": {
                    "type": "boolean"
                  },
                  "allow_plain": {
                    "type": "boolean"
                  }
                }
              },
              "advanced_scope_security": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "mode": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "basic-auth"
                      ]
                    }
                  },
                  "basic_auth": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "request_headername": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                }
              },
              "native_provider_5000": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "identity_extraction": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "basic",
                          "default_form",
                          "custom_form",
                          "redirect"
                        ]
                      },
                      "redirect_endpoint": {
                        "type": "string",
                        "nullable": true
                      },
                      "custom_form_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint"
                      }
                    }
                  },
                  "authentication": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "user_registry_url": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "authorization": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "default_form",
                          "custom_form",
                          "authenticated"
                        ]
                      },
                      "custom_form_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint"
                      }
                    }
                  },
                  "scope_validators": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "application_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint",
                        "nullable": true
                      },
                      "owner_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "third_party_config": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "token_validation_requirement": {
                "type": "string",
                "enum": [
                  "connected",
                  "active",
                  "custom"
                ]
              },
              "authorize_endpoint": {
                "type": "string"
              },
              "token_endpoint": {
                "type": "string"
              },
              "introspection_endpoint": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "required": [
                  "endpoint"
                ],
                "properties": {
                  "endpoint": {
                    "type": "string"
                  },
                  "tls_client_profile_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  }
                }
              },
              "security": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "basic-auth"
                  ]
                }
              },
              "basic_auth": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "request_headername": {
                    "type": "string",
                    "nullable": true
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "custom_headername_format": {
                "type": "string"
              },
              "advanced_scope_security": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "mode": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "basic-auth"
                      ]
                    }
                  },
                  "basic_auth": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "request_headername": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                }
              },
              "auth_header_pass_thru": {
                "type": "boolean",
                "default": false
              },
              "introspect_cache_type": {
                "type": "string",
                "default": "no-cache",
                "enum": [
                  "no-cache",
                  "protocol",
                  "time-to-live"
                ]
              },
              "introspect_cache_ttl": {
                "type": "integer"
              }
            }
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredOauthProviderList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfiguredOauthProvider"
            }
          }
        }
      },
      "ConfiguredTLSClientProfile": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "configured_tls_client_profile"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "owned": {
            "type": "boolean"
          },
          "protocols": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "tls_v1.0",
                "tls_v1.1",
                "tls_v1.2",
                "tls_v1.3"
              ]
            }
          },
          "ciphers": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TLS_AES_256_GCM_SHA384",
                "TLS_CHACHA20_POLY1305_SHA256",
                "TLS_AES_128_GCM_SHA256",
                "TLS_AES_128_CCM_SHA256",
                "TLS_AES_128_CCM_8_SHA256",
                "ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                "ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                "ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
                "ECDHE_RSA_WITH_AES_256_CBC_SHA384",
                "ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                "ECDHE_RSA_WITH_AES_256_CBC_SHA",
                "DHE_DSS_WITH_AES_256_GCM_SHA384",
                "DHE_RSA_WITH_AES_256_GCM_SHA384",
                "DHE_RSA_WITH_AES_256_CBC_SHA256",
                "DHE_DSS_WITH_AES_256_CBC_SHA256",
                "DHE_RSA_WITH_AES_256_CBC_SHA",
                "DHE_DSS_WITH_AES_256_CBC_SHA",
                "RSA_WITH_AES_256_GCM_SHA384",
                "RSA_WITH_AES_256_CBC_SHA256",
                "RSA_WITH_AES_256_CBC_SHA",
                "ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                "ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                "ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
                "ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                "ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                "ECDHE_RSA_WITH_AES_128_CBC_SHA",
                "DHE_DSS_WITH_AES_128_GCM_SHA256",
                "DHE_RSA_WITH_AES_128_GCM_SHA256",
                "DHE_RSA_WITH_AES_128_CBC_SHA256",
                "DHE_DSS_WITH_AES_128_CBC_SHA256",
                "DHE_RSA_WITH_AES_128_CBC_SHA",
                "DHE_DSS_WITH_AES_128_CBC_SHA",
                "RSA_WITH_AES_128_GCM_SHA256",
                "RSA_WITH_AES_128_CBC_SHA256",
                "RSA_WITH_AES_128_CBC_SHA",
                "ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA",
                "ECDHE_RSA_WITH_3DES_EDE_CBC_SHA",
                "DHE_RSA_WITH_3DES_EDE_CBC_SHA",
                "DHE_DSS_WITH_3DES_EDE_CBC_SHA",
                "RSA_WITH_3DES_EDE_CBC_SHA"
              ]
            },
            "nullable": true
          },
          "elliptic_curve_auto_negotiation": {
            "type": "boolean",
            "default": true
          },
          "elliptic_curve": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "sect163k1",
                "sect163r1",
                "sect163r2",
                "sect193r1",
                "sect193r2",
                "sect233k1",
                "sect233r1",
                "sect239k1",
                "sect283k1",
                "sect283r1",
                "sect409k1",
                "sect409r1",
                "sect571k1",
                "sect571r1",
                "secp160k1",
                "secp160r1",
                "secp160r2",
                "secp192k1",
                "secp192r1",
                "prime192v1",
                "secp224k1",
                "secp224r1",
                "secp256k1",
                "secp256r1",
                "prime256v1",
                "secp384r1",
                "secp521r1",
                "brainpoolP256r1",
                "brainpoolP384r1",
                "brainpoolP512r1"
              ]
            },
            "nullable": true
          },
          "insecure_server_connections": {
            "type": "boolean"
          },
          "server_name_indication": {
            "type": "boolean",
            "default": true
          },
          "keystore_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "truststore_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "global_policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredTLSClientProfileList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
            }
          }
        }
      },
      "ConsumerOrg": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "consumer_org"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "owner_url": {
            "type": "string",
            "format": "uri"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "group_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "subscription_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConsumerOrgList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsumerOrg"
            }
          }
        }
      },
      "ConsumerOrgSetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "consumer_org_setting"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "invitation_ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "configured_billing": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "default_payment_method_url": {
                  "type": "string",
                  "format": "uri"
                },
                "billing_identifiers": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "Credential": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "credential"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "client_id": {
            "type": "string"
          },
          "client_secret_hashed": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "app_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "CredentialList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Credential"
            }
          }
        }
      },
      "DraftAPI": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "draft_api"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "draft_api": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "swagger": {
                "type": "string"
              },
              "info": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "title",
                  "version"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "x-ibm-name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "x-ibm-summary": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "remote_api": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "auth_header": {
                "type": "string"
              }
            }
          },
          "api_type": {
            "type": "string",
            "enum": [
              "rest",
              "wsdl",
              "graphql",
              "asyncapi"
            ]
          },
          "enforced": {
            "type": "boolean"
          },
          "gateway_type": {
            "type": "string",
            "enum": [
              "datapower-gateway",
              "datapower-api-gateway",
              "event-gateway"
            ]
          },
          "oai_version": {
            "type": "string",
            "enum": [
              "openapi2",
              "openapi3"
            ]
          },
          "document_specification": {
            "type": "string",
            "enum": [
              "asyncapi2.0",
              "asyncapi2.1",
              "openapi2",
              "openapi3"
            ]
          },
          "wsdl": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "content_type",
              "content"
            ],
            "properties": {
              "content_type": {
                "type": "string",
                "enum": [
                  "application/wsdl",
                  "application/wsdl+xml",
                  "text/xml",
                  "application/zip"
                ]
              },
              "content": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "DraftAPIList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DraftAPI"
            }
          }
        }
      },
      "DraftProduct": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "draft_product"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "draft_product": {
            "type": "object",
            "additionalProperties": true
          },
          "gateway_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "datapower-gateway",
                "datapower-api-gateway",
                "event-gateway"
              ]
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "DraftProductList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DraftProduct"
            }
          }
        }
      },
      "Entry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "entry"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "entry_type": {
            "type": "string",
            "enum": [
              "private_key",
              "public_certificate",
              "trusted_certificate"
            ]
          },
          "pem": {
            "type": "string"
          },
          "certificate_info": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "EntryList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Entry"
            }
          }
        }
      },
      "Extension": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "extension"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "public",
              "private"
            ]
          },
          "extension": {
            "$ref": "#/components/schemas/ExtensionDocument"
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ExtensionList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension"
            }
          }
        }
      },
      "GatewayExtension": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "gateway_extension"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "implementation": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "content_type",
              "content"
            ],
            "properties": {
              "content_type": {
                "type": "string",
                "enum": [
                  "application/zip"
                ]
              },
              "content": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "GatewayService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "gateway_service"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_type": {
            "type": "string"
          },
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "api_endpoint_base": {
            "type": "string"
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "sni": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "host": {
                  "type": "string"
                },
                "tls_server_profile_url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "ready"
            ]
          },
          "oauth_shared_secret": {
            "type": "string",
            "format": "password"
          },
          "visibility": {
            "$ref": "#/components/schemas/ResourceVisibility"
          },
          "owned": {
            "type": "boolean"
          },
          "configuration": {
            "type": "object"
          },
          "analytics_service_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "webhook_url": {
            "type": "string",
            "format": "uri"
          },
          "webhook_state": {
            "type": "string"
          },
          "cloud_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "gateway_extension_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "availability_zone_url": {
            "type": "string",
            "format": "uri"
          },
          "service_version": {
            "type": "string",
            "nullable": true
          },
          "communication_kind": {
            "type": "string",
            "enum": [
              "external",
              "internal_svc"
            ]
          },
          "communication_to_analytics_kind": {
            "type": "string",
            "enum": [
              "external",
              "internal_svc"
            ]
          },
          "communication_to_analytics_with_jwt": {
            "type": "boolean",
            "nullable": true
          },
          "gateway_processing_status": {
            "$ref": "#/components/schemas/SubscriberProcessingStatus"
          },
          "events": {
            "type": "object",
            "properties": {
              "sent_events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriberEvent"
                }
              },
              "queued_events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriberEvent"
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "GatewayServiceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GatewayService"
            }
          }
        }
      },
      "GlobalPolicy": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "global_policy"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "global_policy": {
            "$ref": "#/components/schemas/GlobalPolicyDocument"
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "global_policy_prehook_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "global_policy_posthook_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "global_policy_error_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "GlobalPolicyList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalPolicy"
            }
          }
        }
      },
      "GlobalPolicyError": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "global_policy_error"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "global_policy_url": {
            "type": "string",
            "format": "uri"
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "GlobalPolicyPosthook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "global_policy_posthook"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "global_policy_url": {
            "type": "string",
            "format": "uri"
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "GlobalPolicyPrehook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "global_policy_prehook"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "global_policy_url": {
            "type": "string",
            "format": "uri"
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "Group": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "group"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "org_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "portal_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "billing_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "GroupList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      },
      "Integration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "integration"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "integration_type": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "remote": {
            "type": "boolean"
          },
          "integration": {
            "$ref": "#/components/schemas/IntegrationDocument"
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "IntegrationList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration"
            }
          }
        }
      },
      "Invitation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "invitation"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "notify": {
            "type": "boolean"
          },
          "activation_link": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "InvitationList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invitation"
            }
          }
        }
      },
      "Job": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "job"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "ready",
              "claimed",
              "running",
              "blocked",
              "failed"
            ]
          },
          "activity": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "error": {
            "type": "string"
          },
          "path": {
            "type": "string",
            "enum": [
              "subscription-update",
              "subscription-delete",
              "bulk-subscription-update",
              "bulk-subscription-delete",
              "payment-method-delete",
              "payment-method-delete-consumer"
            ]
          },
          "body": {
            "type": "object",
            "additionalProperties": true
          },
          "generated_at": {
            "type": "string"
          },
          "processed_work": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "processed_at": {
            "type": "string",
            "format": "date-time"
          },
          "retries": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "JobList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Job"
            }
          }
        }
      },
      "Keystore": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "keystore"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "private_key_entry": {
            "type": "string",
            "format": "password"
          },
          "public_certificate_entry": {
            "$ref": "#/components/schemas/CertEntry"
          },
          "public_key_jwk": {
            "$ref": "#/components/schemas/PublicKeyJwk"
          },
          "trusted_certificate_entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertEntry"
            }
          },
          "keystore": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "tls_server_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "cloud_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "KeystoreList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keystore"
            }
          }
        }
      },
      "LogSpec": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "log_spec"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "specification": {
            "type": "string"
          },
          "info_message": {
            "type": "string"
          },
          "large_objects": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MailServer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "mail_server"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
          },
          "credentials": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "username": {
                "type": "string",
                "nullable": true
              },
              "password": {
                "type": "string",
                "format": "password",
                "nullable": true
              }
            }
          },
          "timeout": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "secure": {
            "type": "boolean"
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MailServerList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MailServer"
            }
          }
        }
      },
      "Member": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "member"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "inherited_role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MemberList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member"
            }
          }
        }
      },
      "MemberInvitation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "member_invitation"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "notify": {
            "type": "boolean"
          },
          "activation_link": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "org_type": {
            "type": "string"
          },
          "role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MemberInvitationList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberInvitation"
            }
          }
        }
      },
      "MyCatalogList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Catalog"
            }
          }
        }
      },
      "MyConsumerOrgList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsumerOrg"
            }
          }
        }
      },
      "MyOrgList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Org"
            }
          }
        }
      },
      "MyPermission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "my_permission"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope_url": {
            "type": "string",
            "format": "uri"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MyPermissionList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyPermission"
            }
          }
        }
      },
      "MySpaceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Space"
            }
          }
        }
      },
      "MyTask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "my_task"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "scope_url": {
            "type": "string",
            "format": "uri"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MyTaskList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyTask"
            }
          }
        }
      },
      "NotificationStyle": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "notification_style"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "allowed_html_tags": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "NotificationTemplate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "notification_template"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "notification_template_type": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "variables": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "body_html": {
            "type": "string"
          },
          "content_type": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "text",
                "html"
              ]
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "NotificationTemplateList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationTemplate"
            }
          }
        }
      },
      "OauthProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "oauth_provider"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "debug": {
            "type": "boolean"
          },
          "owned": {
            "type": "boolean"
          },
          "provider_type": {
            "type": "string",
            "enum": [
              "native",
              "third_party"
            ]
          },
          "scopes": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "grants": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "access_code",
                "application",
                "password",
                "implicit",
                "jwt"
              ]
            }
          },
          "gateway_version": {
            "type": "string",
            "enum": [
              "5000",
              "6000"
            ]
          },
          "advanced_scope": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "override_endpoint_from_api": {
                "type": "boolean"
              },
              "default_validator_endpoint": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "required": [
                  "endpoint"
                ],
                "properties": {
                  "endpoint": {
                    "type": "string"
                  },
                  "tls_client_profile_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  }
                }
              },
              "request_query": {
                "type": "string"
              },
              "request_headers_regex": {
                "type": "string"
              },
              "response_headers_regex": {
                "type": "string"
              }
            }
          },
          "native_provider": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "api": {
                "$ref": "#/components/schemas/OAI3",
                "nullable": true
              },
              "default_scopes": {
                "type": "string",
                "nullable": true
              },
              "authorize_path": {
                "type": "string"
              },
              "token_path": {
                "type": "string"
              },
              "token_secret": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  }
                }
              },
              "clients": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "confidential",
                    "public"
                  ]
                }
              },
              "access_code_ttl": {
                "type": "integer",
                "minimum": 1,
                "maximum": 600
              },
              "access_token_ttl": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "access_token_one_time_use": {
                "type": "boolean"
              },
              "maximum_consent_ttl": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "refresh_token": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "count": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "ttl": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "one_time_use": {
                    "type": "boolean"
                  }
                }
              },
              "revocation": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "native",
                      "third_party"
                    ]
                  },
                  "resource_owner_revocation_path": {
                    "type": "string"
                  },
                  "client_revocation_path": {
                    "type": "string"
                  },
                  "third_party_endpoint": {
                    "type": "object",
                    "additionalProperties": false,
                    "nullable": true,
                    "required": [
                      "endpoint"
                    ],
                    "properties": {
                      "endpoint": {
                        "type": "string"
                      },
                      "tls_client_profile_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                      }
                    }
                  },
                  "application_revocation": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "apprevoke_path": {
                        "type": "string"
                      }
                    }
                  },
                  "third_party_security": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "basic-auth"
                      ]
                    }
                  },
                  "basic_auth": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string",
                        "nullable": true
                      },
                      "request_headername": {
                        "type": "string"
                      }
                    }
                  },
                  "custom_headername_format": {
                    "type": "string"
                  },
                  "third_party_cache_type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "no-cache",
                        "protocol",
                        "time-to-live"
                      ]
                    }
                  },
                  "third_party_revocation_protocol": {
                    "type": "string",
                    "items": {
                      "type": "string",
                      "enum": [
                        "XML",
                        "JSON"
                      ]
                    }
                  },
                  "time_to_live": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cache_ttl": {
                        "type": "integer"
                      }
                    }
                  },
                  "third_party_fail_on_error": {
                    "type": "boolean",
                    "default": true
                  },
                  "owner_revocation": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "owner_revoke_path": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "token_introspection": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "introspection_path": {
                    "type": "string"
                  }
                }
              },
              "token_metadata": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "source": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "external_url",
                        "authentication_url"
                      ]
                    }
                  },
                  "external_endpoint": {
                    "type": "object",
                    "additionalProperties": false,
                    "nullable": true,
                    "required": [
                      "endpoint"
                    ],
                    "properties": {
                      "endpoint": {
                        "type": "string"
                      },
                      "tls_client_profile_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                      }
                    }
                  },
                  "header_name_token": {
                    "type": "string"
                  },
                  "header_name_payload": {
                    "type": "string"
                  }
                }
              },
              "openid_connect": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "discovery_path": {
                    "type": "string",
                    "nullable": true
                  },
                  "supported_response_types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "code_id_token",
                        "code_access_token",
                        "code_id_token_access_token"
                      ]
                    }
                  }
                }
              },
              "pkce": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "required": {
                    "type": "boolean"
                  },
                  "allow_plain": {
                    "type": "boolean"
                  }
                }
              },
              "advanced_scope_security": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "mode": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "basic-auth"
                      ]
                    }
                  },
                  "basic_auth": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "request_headername": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                }
              },
              "native_provider_5000": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "identity_extraction": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "basic",
                          "default_form",
                          "custom_form",
                          "redirect"
                        ]
                      },
                      "redirect_endpoint": {
                        "type": "string",
                        "nullable": true
                      },
                      "custom_form_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint"
                      }
                    }
                  },
                  "authentication": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "user_registry_url": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "authorization": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "default_form",
                          "custom_form",
                          "authenticated"
                        ]
                      },
                      "custom_form_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint"
                      }
                    }
                  },
                  "scope_validators": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "application_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint"
                      },
                      "owner_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint"
                      }
                    }
                  }
                }
              }
            }
          },
          "third_party_config": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "token_validation_requirement": {
                "type": "string",
                "enum": [
                  "connected",
                  "active",
                  "custom"
                ]
              },
              "authorize_endpoint": {
                "type": "string"
              },
              "token_endpoint": {
                "type": "string"
              },
              "introspection_endpoint": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "required": [
                  "endpoint"
                ],
                "properties": {
                  "endpoint": {
                    "type": "string"
                  },
                  "tls_client_profile_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  }
                }
              },
              "security": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "basic-auth"
                  ]
                }
              },
              "basic_auth": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "request_headername": {
                    "type": "string",
                    "nullable": true
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "custom_headername_format": {
                "type": "string"
              },
              "advanced_scope_security": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "mode": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "basic-auth"
                      ]
                    }
                  },
                  "basic_auth": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "request_headername": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                }
              },
              "auth_header_pass_thru": {
                "type": "boolean",
                "default": false
              },
              "introspect_cache_type": {
                "type": "string",
                "default": "no-cache",
                "enum": [
                  "no-cache",
                  "protocol",
                  "time-to-live"
                ]
              },
              "introspect_cache_ttl": {
                "type": "integer"
              }
            }
          },
          "visibility": {
            "$ref": "#/components/schemas/ResourceVisibility"
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "OauthProviderList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OauthProvider"
            }
          }
        }
      },
      "OauthState": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "oauth_state"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "realm": {
            "type": "string"
          },
          "user_registry_url": {
            "type": "string"
          },
          "registration_url": {
            "type": "string",
            "format": "uri"
          },
          "state": {
            "type": "string"
          },
          "response_type": {
            "type": "string",
            "enum": [
              "token",
              "code"
            ]
          },
          "redirect_uri": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "activation_token": {
            "type": "string"
          },
          "consumer_context": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "OauthStateList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OauthState"
            }
          }
        }
      },
      "Org": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "org"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "org_type": {
            "type": "string",
            "enum": [
              "admin",
              "provider"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "owner_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "portal_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "billing_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "group_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "OrgList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Org"
            }
          }
        }
      },
      "OrgSetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "org_setting"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "invitation_ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "custom_notification_templates_enabled": {
            "type": "boolean"
          },
          "email_sender": {
            "$ref": "#/components/schemas/EmailSender"
          },
          "atm_base_path": {
            "type": "string",
            "nullable": true
          },
          "runtime_api_opt_in_datagather_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PaymentMethod": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "payment_method"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "billing_url": {
            "type": "string",
            "format": "uri"
          },
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PaymentMethodList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          }
        }
      },
      "Permission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "permission"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "permission_type": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "role_default_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PermissionList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      "Policy": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "policy"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "public",
              "private"
            ]
          },
          "custom": {
            "type": "boolean"
          },
          "policy": {
            "$ref": "#/components/schemas/PolicyDocument"
          },
          "implementation": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "content_type",
              "content"
            ],
            "properties": {
              "content_type": {
                "type": "string",
                "enum": [
                  "application/zip"
                ]
              },
              "content": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "global_policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PolicyList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Policy"
            }
          }
        }
      },
      "PortalService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "portal_service"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "web_endpoint_base": {
            "type": "string",
            "format": "uri"
          },
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "endpoint_tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "ready"
            ]
          },
          "visibility": {
            "$ref": "#/components/schemas/ResourceVisibility"
          },
          "owned": {
            "type": "boolean"
          },
          "webhook_url": {
            "type": "string",
            "format": "uri"
          },
          "webhook_state": {
            "type": "string"
          },
          "catalog_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "availability_zone_url": {
            "type": "string",
            "format": "uri"
          },
          "service_version": {
            "type": "string",
            "nullable": true
          },
          "communication_kind": {
            "type": "string",
            "enum": [
              "external",
              "internal_svc"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PortalServiceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PortalService"
            }
          }
        }
      },
      "PrimaryEvent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "primary_event"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "event_type": {
            "type": "string",
            "enum": [
              "create",
              "update",
              "delete"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "queued",
              "snapshotting",
              "tombstone"
            ]
          },
          "gateway_payload": {
            "type": "object"
          },
          "consumer_payload": {
            "type": "object"
          },
          "generated_at": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          },
          "ids_in_gateway_payload": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ids_in_consumer_payload": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PrimaryEventList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrimaryEvent"
            }
          }
        }
      },
      "Product": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "product"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "staged",
              "published",
              "deprecated",
              "retired",
              "archived"
            ]
          },
          "product": {
            "type": "object",
            "additionalProperties": true
          },
          "catalog_product": {
            "type": "object",
            "additionalProperties": true
          },
          "state_pending": {
            "type": "string",
            "nullable": true,
            "enum": [
              "pending",
              "staged",
              "published",
              "deprecated",
              "retired",
              "archived"
            ]
          },
          "gateway_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "datapower-gateway",
                "datapower-api-gateway",
                "event-gateway"
              ]
            }
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "visibility": {
            "$ref": "#/components/schemas/ProductVisibility"
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "billing_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "superseded_by": {
            "$ref": "#/components/schemas/ProductPlanMapping"
          },
          "supersedes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPlanMapping"
            }
          },
          "task_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "specialization": {
            "$ref": "#/components/schemas/ProductSpecialization"
          },
          "subscription_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "billing_identifiers": {
            "description": "non-sensitive identifiers of billing system resources",
            "type": "object",
            "additionalProperties": true
          },
          "plans": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "title": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "apis": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              }
            }
          },
          "apis": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "approval_history": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "user": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                },
                "target_life_cycle": {
                  "type": "string",
                  "enum": [
                    "staged",
                    "published",
                    "deprecated",
                    "retired",
                    "archived",
                    "replace",
                    "supersede"
                  ]
                },
                "user_action": {
                  "type": "string",
                  "enum": [
                    "requested",
                    "approved",
                    "rejected",
                    "cancelled"
                  ]
                },
                "comment": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "display_text": {
                  "type": "string"
                }
              }
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ProductList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "RecentPublish": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "recent_publish"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "state": {
            "type": "string",
            "enum": [
              "stage",
              "publish"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "RecentPublishList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecentPublish"
            }
          }
        }
      },
      "RefreshToken": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "refresh_token"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "user_url": {
            "type": "string"
          },
          "grant_type": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "issued_at": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "access_token_jti": {
            "type": "string"
          },
          "third_party_rt": {
            "type": "string",
            "nullable": true
          },
          "third_party_rt_expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647,
            "nullable": true
          },
          "ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "RefreshTokenList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefreshToken"
            }
          }
        }
      },
      "Registration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "registration"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "client_type": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "registration_public_certificate": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cloud_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "RegistrationList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Registration"
            }
          }
        }
      },
      "Role": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "role"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "permission_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "inherited_permission_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "member_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "external_group_mapping": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true,
            "properties": {
              "user_registry_url": {
                "type": "string",
                "format": "uri"
              },
              "ldap_groups": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "user_group_filter_prefix": {
                "type": "string"
              },
              "user_group_filter_suffix": {
                "type": "string"
              }
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "RoleList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        }
      },
      "RoleDefault": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "role_default"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "role_default_type": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "permission_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "RoleDefaultList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDefault"
            }
          }
        }
      },
      "Service": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "service"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "service": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "tls_client_profile_url": {
                "type": "string",
                "format": "uri"
              },
              "timeout": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string",
                "format": "password"
              },
              "http_method": {
                "type": "string",
                "enum": [
                  "get",
                  "post",
                  "put",
                  "delete",
                  "patch",
                  "head",
                  "options"
                ]
              },
              "compression": {
                "type": "boolean"
              },
              "org_url": {
                "type": "string",
                "format": "uri"
              },
              "catalog_url": {
                "type": "string",
                "format": "uri"
              },
              "space_url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "service_schema": {
            "type": "object",
            "additionalProperties": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ServiceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service"
            }
          }
        }
      },
      "Skill": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "skill"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "skill_id": {
            "type": "string"
          },
          "skill_type": {
            "type": "string",
            "enum": [
              "primitive",
              "composite",
              "mapped",
              "imported",
              "other",
              "external",
              "primitive-template",
              "pre-built",
              "skill-flow"
            ]
          },
          "skill_subtype": {
            "type": "string",
            "enum": [
              "public",
              "private",
              "wo-identity"
            ]
          },
          "display_name": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "applications_info": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "description": {
            "type": "string"
          },
          "nlu": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "author": {
            "type": "string"
          },
          "rank": {
            "type": "integer"
          },
          "runtime_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "openapi_url": {
            "type": "string",
            "format": "uri"
          },
          "connection_state": {
            "type": "string",
            "enum": [
              "none",
              "not-connected",
              "connected"
            ]
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "stage",
              "publish"
            ]
          },
          "tsv_api_lang": {
            "type": "string"
          },
          "tsv_nlu_lang": {
            "type": "string"
          },
          "tenant_url": {
            "type": "string",
            "format": "uri"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string"
          },
          "skillOpenapi": {
            "type": "string"
          },
          "flowname": {
            "type": "string"
          },
          "flowvalue": {
            "type": "object"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "SkillList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skill"
            }
          }
        }
      },
      "Snapshot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "snapshot"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "in_progress",
              "ready",
              "deprecated"
            ]
          },
          "first_event_generated_at": {
            "type": "string"
          },
          "last_event_generated_at": {
            "type": "string"
          },
          "generated_at": {
            "type": "string"
          },
          "gateway_payload": {
            "type": "object"
          },
          "consumer_payload": {
            "type": "object"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "SnapshotList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Snapshot"
            }
          }
        }
      },
      "Space": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "space"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "owner_url": {
            "type": "string",
            "format": "uri"
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "task_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_api_user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "SpaceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Space"
            }
          }
        }
      },
      "SpaceSetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "space_setting"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "invitation_ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "custom_notification_templates_enabled": {
            "type": "boolean"
          },
          "allowed_product_visibility": {
            "$ref": "#/components/schemas/ProductVisibility"
          },
          "email_sender": {
            "$ref": "#/components/schemas/EmailSender"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "SubscriberEvent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "subscriber_event"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "event_type": {
            "type": "string",
            "enum": [
              "create",
              "update",
              "delete"
            ]
          },
          "payload_sent": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "generated_at": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "queued",
              "sent",
              "failed"
            ]
          },
          "retries": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "request_id": {
            "type": "string"
          },
          "ids_in_payload": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "SubscriberEventList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriberEvent"
            }
          }
        }
      },
      "Subscription": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "subscription"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "enabled",
              "rejected",
              "disabled"
            ]
          },
          "product_url": {
            "type": "string",
            "format": "uri"
          },
          "product": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "plan": {
            "type": "string"
          },
          "plan_title": {
            "type": "string"
          },
          "task_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "state_pending": {
            "type": "string",
            "nullable": true,
            "enum": [
              "enabled"
            ]
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "app_url": {
            "type": "string",
            "format": "uri"
          },
          "app": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              },
              "credentials": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "client_id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          },
          "billing_identifiers": {
            "description": "non-sensitive identifiers of billing system resources",
            "type": "object",
            "additionalProperties": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "SubscriptionList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          }
        }
      },
      "Task": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "task"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "task_type": {
            "type": "string",
            "enum": [
              "product_lifecycle",
              "subscription",
              "application_lifecycle",
              "consumer_onboarding"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "approved",
              "rejected",
              "cancelled"
            ]
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "originator": {
            "type": "string"
          },
          "originator_url": {
            "type": "string",
            "format": "uri"
          },
          "originator_username": {
            "type": "string"
          },
          "originator_name": {
            "type": "string"
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object"
                }
              ]
            }
          },
          "activity": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "app_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "subscription_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "TaskList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "TaskQueue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "task_queue"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "valid_after": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "retry",
              "synchronize",
              "snapshot",
              "reconfigure",
              "policy-upgrade",
              "heartbeat",
              "cleanup",
              "send",
              "initialize",
              "delete-expired-data",
              "system-maintenance"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "new",
              "claimed",
              "inprogress",
              "errored",
              "failed",
              "completed"
            ]
          },
          "target": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "owner": {
            "type": "string"
          },
          "iteration": {
            "type": "string"
          },
          "retry_count": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "generated_at": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "TaskQueueList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskQueue"
            }
          }
        }
      },
      "TLSClientProfile": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "tls_client_profile"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "protocols": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "tls_v1.0",
                "tls_v1.1",
                "tls_v1.2",
                "tls_v1.3"
              ]
            }
          },
          "ciphers": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TLS_AES_256_GCM_SHA384",
                "TLS_CHACHA20_POLY1305_SHA256",
                "TLS_AES_128_GCM_SHA256",
                "TLS_AES_128_CCM_SHA256",
                "TLS_AES_128_CCM_8_SHA256",
                "ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                "ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                "ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
                "ECDHE_RSA_WITH_AES_256_CBC_SHA384",
                "ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                "ECDHE_RSA_WITH_AES_256_CBC_SHA",
                "DHE_DSS_WITH_AES_256_GCM_SHA384",
                "DHE_RSA_WITH_AES_256_GCM_SHA384",
                "DHE_RSA_WITH_AES_256_CBC_SHA256",
                "DHE_DSS_WITH_AES_256_CBC_SHA256",
                "DHE_RSA_WITH_AES_256_CBC_SHA",
                "DHE_DSS_WITH_AES_256_CBC_SHA",
                "RSA_WITH_AES_256_GCM_SHA384",
                "RSA_WITH_AES_256_CBC_SHA256",
                "RSA_WITH_AES_256_CBC_SHA",
                "ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                "ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                "ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
                "ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                "ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                "ECDHE_RSA_WITH_AES_128_CBC_SHA",
                "DHE_DSS_WITH_AES_128_GCM_SHA256",
                "DHE_RSA_WITH_AES_128_GCM_SHA256",
                "DHE_RSA_WITH_AES_128_CBC_SHA256",
                "DHE_DSS_WITH_AES_128_CBC_SHA256",
                "DHE_RSA_WITH_AES_128_CBC_SHA",
                "DHE_DSS_WITH_AES_128_CBC_SHA",
                "RSA_WITH_AES_128_GCM_SHA256",
                "RSA_WITH_AES_128_CBC_SHA256",
                "RSA_WITH_AES_128_CBC_SHA",
                "ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA",
                "ECDHE_RSA_WITH_3DES_EDE_CBC_SHA",
                "DHE_RSA_WITH_3DES_EDE_CBC_SHA",
                "DHE_DSS_WITH_3DES_EDE_CBC_SHA",
                "RSA_WITH_3DES_EDE_CBC_SHA"
              ]
            },
            "nullable": true
          },
          "elliptic_curve_auto_negotiation": {
            "type": "boolean",
            "default": true
          },
          "elliptic_curve": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "sect163k1",
                "sect163r1",
                "sect163r2",
                "sect193r1",
                "sect193r2",
                "sect233k1",
                "sect233r1",
                "sect239k1",
                "sect283k1",
                "sect283r1",
                "sect409k1",
                "sect409r1",
                "sect571k1",
                "sect571r1",
                "secp160k1",
                "secp160r1",
                "secp160r2",
                "secp192k1",
                "secp192r1",
                "prime192v1",
                "secp224k1",
                "secp224r1",
                "secp256k1",
                "secp256r1",
                "prime256v1",
                "secp384r1",
                "secp521r1",
                "brainpoolP256r1",
                "brainpoolP384r1",
                "brainpoolP512r1"
              ]
            },
            "nullable": true
          },
          "insecure_server_connections": {
            "type": "boolean"
          },
          "server_name_indication": {
            "type": "boolean",
            "default": true
          },
          "owned": {
            "type": "boolean"
          },
          "keystore_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "truststore_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "webhook_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "visibility": {
            "$ref": "#/components/schemas/ResourceVisibility"
          },
          "configured_tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "mail_server_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "portal_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "analytics_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "cloud_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "integration_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "TLSClientProfileList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TLSClientProfile"
            }
          }
        }
      },
      "TLSServerProfile": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "tls_server_profile"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "protocols": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "tls_v1.0",
                "tls_v1.1",
                "tls_v1.2",
                "tls_v1.3"
              ]
            }
          },
          "ciphers": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TLS_AES_256_GCM_SHA384",
                "TLS_CHACHA20_POLY1305_SHA256",
                "TLS_AES_128_GCM_SHA256",
                "TLS_AES_128_CCM_SHA256",
                "TLS_AES_128_CCM_8_SHA256",
                "ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                "ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                "ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
                "ECDHE_RSA_WITH_AES_256_CBC_SHA384",
                "ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                "ECDHE_RSA_WITH_AES_256_CBC_SHA",
                "DHE_DSS_WITH_AES_256_GCM_SHA384",
                "DHE_RSA_WITH_AES_256_GCM_SHA384",
                "DHE_RSA_WITH_AES_256_CBC_SHA256",
                "DHE_DSS_WITH_AES_256_CBC_SHA256",
                "DHE_RSA_WITH_AES_256_CBC_SHA",
                "DHE_DSS_WITH_AES_256_CBC_SHA",
                "RSA_WITH_AES_256_GCM_SHA384",
                "RSA_WITH_AES_256_CBC_SHA256",
                "RSA_WITH_AES_256_CBC_SHA",
                "ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                "ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                "ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
                "ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                "ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                "ECDHE_RSA_WITH_AES_128_CBC_SHA",
                "DHE_DSS_WITH_AES_128_GCM_SHA256",
                "DHE_RSA_WITH_AES_128_GCM_SHA256",
                "DHE_RSA_WITH_AES_128_CBC_SHA256",
                "DHE_DSS_WITH_AES_128_CBC_SHA256",
                "DHE_RSA_WITH_AES_128_CBC_SHA",
                "DHE_DSS_WITH_AES_128_CBC_SHA",
                "RSA_WITH_AES_128_GCM_SHA256",
                "RSA_WITH_AES_128_CBC_SHA256",
                "RSA_WITH_AES_128_CBC_SHA",
                "ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA",
                "ECDHE_RSA_WITH_3DES_EDE_CBC_SHA",
                "DHE_RSA_WITH_3DES_EDE_CBC_SHA",
                "DHE_DSS_WITH_3DES_EDE_CBC_SHA",
                "RSA_WITH_3DES_EDE_CBC_SHA"
              ]
            },
            "nullable": true
          },
          "elliptic_curve": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "sect163k1",
                "sect163r1",
                "sect163r2",
                "sect193r1",
                "sect193r2",
                "sect233k1",
                "sect233r1",
                "sect239k1",
                "sect283k1",
                "sect283r1",
                "sect409k1",
                "sect409r1",
                "sect571k1",
                "sect571r1",
                "secp160k1",
                "secp160r1",
                "secp160r2",
                "secp192k1",
                "secp192r1",
                "secp224k1",
                "secp224r1",
                "secp256k1",
                "secp256r1",
                "secp384r1",
                "secp521r1",
                "brainpoolP256r1",
                "brainpoolP384r1",
                "brainpoolP512r1"
              ]
            },
            "nullable": true
          },
          "mutual_authentication": {
            "type": "string",
            "enum": [
              "require",
              "request",
              "none"
            ]
          },
          "limit_renegotiation": {
            "type": "boolean",
            "default": true
          },
          "keystore_url": {
            "type": "string",
            "format": "uri"
          },
          "truststore_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "TLSServerProfileList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TLSServerProfile"
            }
          }
        }
      },
      "Truststore": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "truststore"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "truststore": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "entry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_server_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "TruststoreList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Truststore"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "user"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "identity_provider": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "force_password_change": {
            "type": "boolean"
          },
          "reject_tokens_issued_before": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "last_login_at": {
            "type": "string",
            "format": "date-time"
          },
          "member_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "user_registry_url": {
            "type": "string",
            "format": "uri"
          },
          "hashed_password": {
            "type": "string"
          },
          "salt": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "UserList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "UserRegistry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "user_registry"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "registry_type": {
            "type": "string"
          },
          "user_managed": {
            "type": "boolean"
          },
          "user_registry_managed": {
            "type": "boolean"
          },
          "external_group_mapping_enabled": {
            "type": "boolean",
            "default": false
          },
          "onboarding": {
            "type": "string",
            "nullable": true,
            "enum": [
              "active",
              "suspended"
            ]
          },
          "case_sensitive": {
            "type": "boolean"
          },
          "email_required": {
            "type": "boolean",
            "default": false
          },
          "email_unique_if_exist": {
            "type": "boolean",
            "default": true
          },
          "identity_providers": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          },
          "visibility": {
            "$ref": "#/components/schemas/ResourceVisibility"
          },
          "configuration": {
            "type": "object",
            "additionalProperties": true
          },
          "endpoint": {
            "$ref": "#/components/schemas/SecuredEndpoint"
          },
          "owned": {
            "type": "boolean"
          },
          "configured_catalog_user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_api_user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "member_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "user_registry_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "activation_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "cloud_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "UserRegistryList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRegistry"
            }
          }
        }
      },
      "UserRegistrySetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "user_registry_setting"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "admin_user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "admin_user_registry_default_url": {
            "type": "string",
            "format": "uri"
          },
          "provider_user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "provider_user_registry_default_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "Webhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "webhook"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "online",
              "online_configured",
              "offline_configured",
              "offline_resync",
              "initializing",
              "online_pending",
              "online_throttled"
            ]
          },
          "state_change_reason": {
            "type": "string"
          },
          "state_change_history": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "state_from": {
                  "type": "string"
                },
                "state_to": {
                  "type": "string"
                },
                "state_change_reason": {
                  "type": "string"
                },
                "state_changed_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "tasks": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "iteration": {
                  "type": "string"
                },
                "retry_count": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "snapshot_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filter": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "level": {
            "type": "string",
            "enum": [
              "notification",
              "sync"
            ]
          },
          "authorization": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_url": {
            "type": "string",
            "format": "uri"
          },
          "portal_service_url": {
            "type": "string",
            "format": "uri"
          },
          "state_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "supported_webhook_features": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "feedback",
                "batch",
                "throttling",
                "api_protection_source",
                "external_oauth_mgmt",
                "policy_visibility",
                "product_replace_v2",
                "product_retire_optimized",
                "global_policy_error",
                "product_migrate_subscriptions",
                "execute_migration_target",
                "event_config_logs"
              ]
            }
          },
          "apic_version": {
            "type": "string"
          },
          "available_webhook_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "service_version": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "WebhookList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Webhook"
            }
          }
        }
      },
      "AuditPayload": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "typeURI": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "outcome": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "reason": {
            "type": "object",
            "properties": {
              "reasonCode": {
                "type": "string"
              },
              "reasonType": {
                "type": "string"
              }
            }
          },
          "eventTime": {
            "type": "string"
          },
          "initiator": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "typeURI": {
                "type": "string"
              }
            }
          },
          "target": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "typeURI": {
                "type": "string"
              }
            }
          },
          "observer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          },
          "requestPath": {
            "type": "string"
          },
          "requestData": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "url": {
                "type": "string"
              },
              "body": {
                "type": "object",
                "additionalProperties": true
              }
            }
          },
          "responseData": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "id": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "task_urls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "error": {
                "type": "string"
              }
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "AuditAttachmentPayload": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "timestamp",
          "cloud_name",
          "request_id",
          "method",
          "status_code",
          "operation",
          "resource"
        ],
        "properties": {
          "timestamp": {
            "type": "object",
            "properties": {
              "start": {
                "type": "string"
              },
              "end": {
                "type": "string"
              }
            }
          },
          "cloud_name": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "context": {
                "type": "string"
              },
              "idp_name": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "registration": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          }
        }
      },
      "Me": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "me"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "username": {
            "type": "string"
          },
          "identity_provider": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "force_password_change": {
            "type": "boolean"
          },
          "last_login_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object"
          }
        }
      },
      "WsdlServices": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "service": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "operations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "operation": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UserSearch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "username": {
            "type": "string"
          },
          "remote": {
            "type": "boolean"
          }
        }
      },
      "IdentityProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "registry_type": {
            "type": "string"
          },
          "user_managed": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          },
          "realm": {
            "type": "string"
          },
          "oidc_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "google",
              "github",
              "facebook",
              "linkedin",
              "windows_live",
              "slack",
              "twitter",
              "standard"
            ]
          }
        }
      },
      "IdentityProviderList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityProvider"
            }
          }
        }
      },
      "InvitationRegister": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "realm": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string",
                "format": "password"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              }
            }
          },
          "org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "catalog": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "space": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "consumer_org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          }
        }
      },
      "InvitationAccept": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "realm": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string",
                "format": "password"
              },
              "token": {
                "type": "string",
                "format": "password"
              },
              "token_secret": {
                "type": "string",
                "format": "password"
              }
            }
          },
          "org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "catalog": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "space": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "consumer_org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          }
        }
      },
      "MemberInvitationRegister": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          }
        }
      },
      "MemberRegisterResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "member": {
            "$ref": "#/components/schemas/Member"
          },
          "credentials": {
            "$ref": "#/components/schemas/TokenResponse"
          }
        }
      },
      "MemberInvitationAccept": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "token": {
            "type": "string",
            "format": "password"
          },
          "token_secret": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "MemberAcceptResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "member": {
            "$ref": "#/components/schemas/Member"
          },
          "credentials": {
            "$ref": "#/components/schemas/TokenResponse"
          }
        }
      },
      "ChangePassword": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "current_password": {
            "type": "string",
            "format": "password"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "ResetPassword": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "MailServerConfigured": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "configured": {
            "type": "boolean"
          }
        }
      },
      "JWKDefinition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "kid": {
            "type": "string"
          },
          "e": {
            "type": "string"
          },
          "n": {
            "type": "string"
          },
          "x5c": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "kty": {
            "type": "string"
          },
          "use": {
            "type": "string"
          },
          "alg": {
            "type": "string"
          },
          "iss": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          }
        }
      },
      "Oauth2CertsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JWKDefinition"
            }
          }
        }
      },
      "RequestPasswordReset": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "realm": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "TokenRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "grant_type"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "assertion": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "api_key": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "grant_type": {
            "type": "string",
            "enum": [
              "password",
              "client_credentials",
              "authorization_code",
              "urn:ietf:params:oauth:grant-type:jwt-bearer",
              "refresh_token",
              "api_key"
            ]
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "token_type",
          "expires_in"
        ],
        "properties": {
          "access_token": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "refresh_token": {
            "type": "string"
          },
          "refresh_expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          }
        }
      },
      "ToolkitCredentialsResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cloud_id"
        ],
        "properties": {
          "cloud_id": {
            "type": "string"
          },
          "toolkit": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              }
            }
          },
          "consumer_toolkit": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              }
            }
          },
          "governance": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              }
            }
          },
          "discovery": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              }
            }
          }
        }
      },
      "DesignerCredentialsResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "designer"
        ],
        "properties": {
          "cloud_id": {
            "type": "string"
          },
          "designer": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "manager_endpoint": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              }
            }
          }
        }
      },
      "CloudPublicInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cloud_id"
        ],
        "properties": {
          "cloud_id": {
            "type": "string"
          },
          "admin_endpoint": {
            "type": "string"
          },
          "provider_endpoint": {
            "type": "string"
          },
          "api_endpoint": {
            "type": "string"
          },
          "consumer_api_endpoint": {
            "type": "string"
          },
          "compliance_endpoint": {
            "type": "string"
          },
          "discovery_endpoint": {
            "type": "string"
          }
        }
      },
      "CloudAbout": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "product_version": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "version": {
                "type": "string"
              },
              "operator_build_date": {
                "type": "string",
                "format": "date-time"
              },
              "operator_build_tag": {
                "type": "string"
              },
              "operator_version": {
                "type": "string"
              }
            }
          },
          "cloud": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            }
          },
          "upgrade_history": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "apim": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "schema_upgrades": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "schema_version": {
                          "type": "string"
                        },
                        "target_schema_version": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  "data_upgrades": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "data_version": {
                          "type": "string"
                        },
                        "target_data_version": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              },
              "lur": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "schema_upgrades": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "schema_version": {
                          "type": "string"
                        },
                        "target_schema_version": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  "data_upgrades": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "data_version": {
                          "type": "string"
                        },
                        "target_data_version": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "OriginatedTask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "scope": {
            "type": "string"
          },
          "scope_url": {
            "type": "string",
            "format": "uri"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OriginatedTaskList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OriginatedTask"
            }
          }
        }
      },
      "IntrospectionRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "token_type_hint": {
            "type": "string",
            "enum": [
              "access_token"
            ]
          }
        }
      },
      "IntrospectionResponse": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "active"
        ],
        "properties": {
          "active": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "registration": {
            "type": "object",
            "properties": {
              "uri": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "realm": {
            "type": "string"
          },
          "context": {
            "type": "string"
          },
          "identity_provider": {
            "type": "string"
          },
          "user_registry_url": {
            "type": "string"
          },
          "grant_type": {
            "type": "string"
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "jti": {
            "type": "string"
          },
          "sub": {
            "type": "string"
          },
          "aud": {
            "type": "string"
          },
          "iss": {
            "type": "string"
          },
          "iat": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "exp": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "access_token": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          }
        }
      },
      "GatewayServiceConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cloud",
          "catalogs"
        ],
        "properties": {
          "cloud": {
            "type": "object",
            "additionalProperties": true
          },
          "catalogs": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      },
      "PortalServiceConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cloud",
          "catalogs"
        ],
        "properties": {
          "cloud": {
            "type": "object",
            "additionalProperties": true
          },
          "catalogs": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      },
      "CloudTasks": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "apim_node",
          "payload"
        ],
        "properties": {
          "apim_node": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          }
        }
      },
      "ProxyTokenInfoRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "scope_url": {
            "type": "string"
          },
          "analytics_service": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "availability_zone": {
            "type": "string"
          }
        }
      },
      "ProxyTokenInfoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "analytics_client": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "tls": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "cert": {
                    "type": "string"
                  },
                  "ca": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "user_permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GlobalPolicyDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "PolicyDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "ExtensionDocument": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "extension",
          "info"
        ],
        "properties": {
          "extension": {
            "type": "string",
            "enum": [
              "1.0.0"
            ]
          },
          "info": {
            "$ref": "#/components/schemas/InfoSection"
          },
          "properties": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "IntegrationDocument": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "integration",
          "info"
        ],
        "properties": {
          "integration": {
            "type": "string",
            "enum": [
              "1.0.0"
            ]
          },
          "integration_type": {
            "type": "string",
            "enum": [
              "billing",
              "gateway_service",
              "payment_method",
              "notification",
              "user_registry"
            ]
          },
          "info": {
            "$ref": "#/components/schemas/InfoSection"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          "secured_endpoint": {
            "$ref": "#/components/schemas/SecuredEndpoint"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "configuration_schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "DraftAPIDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "DraftProductDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "ProductDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "APIDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "Regenerate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "notify": {
            "type": "boolean"
          }
        }
      },
      "InfoSection": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "version"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "termsOfService": {
            "type": "string"
          },
          "contact": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              },
              "email": {
                "type": "string",
                "format": "email"
              }
            }
          },
          "license": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "x-ibm-languages": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "Draft": {
        "type": "object",
        "additionalProperties": false
      },
      "DraftList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "draft_apis": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DraftAPI"
            }
          },
          "draft_products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DraftProduct"
            }
          }
        }
      },
      "Search": {
        "type": "object",
        "additionalProperties": false
      },
      "SearchList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "api_type": {
                  "type": "string"
                },
                "oai_version": {
                  "type": "string",
                  "enum": [
                    "openapi2",
                    "openapi3"
                  ]
                }
              }
            }
          }
        }
      },
      "Join": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "ProductPlanMapping": {
        "type": "object",
        "additionalProperties": false,
        "nullable": true,
        "properties": {
          "product_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceTargetPairs"
            }
          }
        }
      },
      "MigrateSubscriptionSubset": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "subscription_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "product_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceTargetPairs"
            }
          }
        }
      },
      "SourceTargetPairs": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "source",
          "target"
        ],
        "properties": {
          "source": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      },
      "CloudTopology": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "cloud_name": {
            "type": "string"
          },
          "cloud_id": {
            "type": "string"
          },
          "counts": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "users": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "provider_orgs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "catalogs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "draft_products": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "draft_apis": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "apis": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "products": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "consumer_orgs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "subscriptions": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "consumer_apps": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "spaces": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              }
            }
          },
          "orgs": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "total_results": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TopologyProviderOrg"
                }
              },
              "url": {
                "type": "string"
              }
            }
          }
        }
      },
      "TopologyProviderOrg": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "org_type": {
            "type": "string"
          },
          "runtime_api_opt_in_datagather_enabled": {
            "type": "boolean"
          },
          "owner_url": {
            "type": "string"
          },
          "owner": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "email": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              }
            }
          },
          "counts": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "members": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "draft_products": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "draft_apis": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              }
            }
          },
          "catalogs": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "total_results": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TopologyCatalogs"
                }
              }
            }
          }
        }
      },
      "TopologyCatalogs": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "counts": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "members": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "apps": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "subscriptions": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "consumer_orgs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "products": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "apis": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "product_lifecycle_states": {
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "staged": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "published": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "deprecated": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "retired": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "archived": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  }
                }
              }
            }
          },
          "consumer_org_list_url": {
            "type": "string"
          },
          "gateway_service_types": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "total_results": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TopologyGatewayServices"
                }
              }
            }
          },
          "spaces": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "total_results": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TopologySpaces"
                }
              }
            }
          }
        }
      },
      "TopologySpaces": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "counts": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "products": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "apis": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              }
            }
          },
          "gateway_service_types": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "total_results": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TopologyGatewayServices"
                }
              }
            }
          }
        }
      },
      "TopologyGatewayServices": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "gateway_service_type": {
            "type": "string",
            "enum": [
              "datapower-gateway",
              "datapower-api-gateway",
              "event-gateway"
            ]
          }
        }
      },
      "TransferOwner": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "new_owner_associate_url": {
            "type": "string",
            "format": "uri"
          },
          "new_owner_member_url": {
            "type": "string",
            "format": "uri"
          },
          "new_owner_user_url": {
            "type": "string",
            "format": "uri"
          },
          "old_owner_new_role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "OauthRedirect": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "code": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "error_description": {
            "type": "string"
          },
          "error_uri": {
            "type": "string"
          }
        }
      },
      "Property": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "PropertyList": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "EmailSender": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "custom": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "NameValuePairs": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "ResourceVisibility": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "public",
              "private",
              "custom"
            ]
          },
          "group_urls": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_urls": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "ProductVisibility": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "view",
          "subscribe"
        ],
        "properties": {
          "view": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "public",
                  "authenticated",
                  "custom"
                ]
              },
              "enabled": {
                "type": "boolean"
              },
              "group_urls": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "org_urls": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "subscribe": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "authenticated",
                  "custom"
                ]
              },
              "enabled": {
                "type": "boolean"
              },
              "group_urls": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "org_urls": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "Visibility": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "view",
          "subscribe"
        ],
        "properties": {
          "view": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "public",
                  "authenticated",
                  "custom"
                ]
              },
              "enabled": {
                "type": "boolean"
              },
              "tags": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "orgs": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "subscribe": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "authenticated",
                  "custom"
                ]
              },
              "enabled": {
                "type": "boolean"
              },
              "tags": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "orgs": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "PrivateKeyEntry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pem": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "CertEntry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pem": {
            "type": "string"
          },
          "certificate_info": {
            "type": "string"
          }
        }
      },
      "UserRegistryExecute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "user_registry": {
            "$ref": "#/components/schemas/UserRegistry"
          }
        }
      },
      "UserRegistryExecuteResponse": {
        "type": "object",
        "additionalProperties": true
      },
      "TestConnectionCredentials": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "AuditEndpointTestConnection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "endpoint": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "UserRegistryTestConnection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "user_registry": {
            "$ref": "#/components/schemas/UserRegistry"
          },
          "credentials": {
            "$ref": "#/components/schemas/TestConnectionCredentials"
          }
        }
      },
      "ExportP12Pem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "export_password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "SendEmail": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "cc": {
            "type": "string"
          },
          "bcc": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "content_type": {
            "type": "string",
            "enum": [
              "text",
              "html"
            ]
          }
        }
      },
      "EmailToOwners": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "consumer_org_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "consumer_group_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "subject": {
            "type": "string",
            "minLength": 1
          },
          "body": {
            "type": "string",
            "minLength": 1
          },
          "body_html": {
            "type": "string"
          },
          "content_type": {
            "type": "string",
            "enum": [
              "text",
              "html",
              "html_and_text"
            ]
          }
        },
        "required": [
          "subject",
          "body",
          "content_type"
        ]
      },
      "EmailToOwnersResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "num_emails_sent": {
            "type": "integer"
          },
          "failed_emails": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "org_url": {
                  "type": "string",
                  "format": "uri"
                },
                "owner_email": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "EmailProviderOrgOwners": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "org_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "subject": {
            "type": "string",
            "minLength": 1
          },
          "body": {
            "type": "string",
            "minLength": 1
          },
          "body_html": {
            "type": "string"
          },
          "content_type": {
            "type": "string",
            "enum": [
              "text",
              "html",
              "html_and_text"
            ]
          }
        },
        "required": [
          "org_urls",
          "subject",
          "body",
          "content_type"
        ]
      },
      "EmailProviderOrgOwnersResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "num_emails_sent": {
            "type": "integer"
          },
          "failed_emails": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "org_url": {
                  "type": "string",
                  "format": "uri"
                },
                "owner_email": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "SyncRoles": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "access_token": {
            "type": "string"
          }
        },
        "required": [
          "access_token"
        ]
      },
      "MailServerSavedTestConnection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MailServerProvidedTestConnection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mail_server": {
            "$ref": "#/components/schemas/MailServer"
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ValidationResults": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "string",
            "enum": [
              "success",
              "warning",
              "error"
            ]
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SecuredEndpoint": {
        "type": "object",
        "additionalProperties": false,
        "nullable": true,
        "required": [
          "endpoint"
        ],
        "properties": {
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "IntrospectWsdlMultipart": {
        "type": "object",
        "properties": {
          "wsdl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wsdl"
            }
          }
        }
      },
      "DraftAPIMultipart": {
        "type": "object",
        "properties": {
          "openapi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApi2Definition"
            }
          },
          "wsdl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wsdl"
            }
          }
        }
      },
      "TargetServiceMultipart": {
        "type": "object",
        "properties": {
          "wsdl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wsdl"
            }
          }
        }
      },
      "DraftProductMultipart": {
        "type": "object",
        "required": [
          "product",
          "openapi"
        ],
        "properties": {
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDefinition"
            }
          },
          "visibility": {
            "$ref": "#/components/schemas/Visibility"
          },
          "openapi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApi2Definition"
            }
          },
          "wsdl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wsdl"
            }
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        }
      },
      "DraftProductPublishMultipart": {
        "type": "object",
        "required": [
          "product",
          "openapi"
        ],
        "properties": {
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDefinition"
            }
          },
          "openapi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApi2Definition"
            }
          },
          "wsdl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wsdl"
            }
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        }
      },
      "DraftProductPublish": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "draft_product_url"
        ],
        "properties": {
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "draft_product_url": {
            "type": "string",
            "format": "uri"
          },
          "visibility": {
            "$ref": "#/components/schemas/Visibility"
          }
        }
      },
      "GatewayExtensionMultipart": {
        "type": "object",
        "properties": {
          "implementation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Implementation"
            }
          }
        }
      },
      "ProductMultipart": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "product",
          "openapi"
        ],
        "properties": {
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDefinition"
            }
          },
          "openapi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApi2Definition"
            }
          },
          "wsdl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wsdl"
            }
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        }
      },
      "PolicyMultipart": {
        "type": "object",
        "properties": {
          "policy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyDefinition"
            }
          },
          "implementation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Implementation"
            }
          }
        }
      },
      "ProductDefinition": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "product": {
            "type": "string",
            "enum": [
              "1.0.0"
            ]
          },
          "info": {
            "type": "object",
            "additionalProperties": true,
            "required": [
              "name",
              "version"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            }
          }
        }
      },
      "OpenApi2Definition": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "swagger": {
            "type": "string",
            "enum": [
              "2.0.0"
            ]
          },
          "info": {
            "type": "object",
            "additionalProperties": true,
            "required": [
              "title",
              "version"
            ],
            "properties": {
              "title": {
                "type": "string"
              },
              "x-ibm-name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "x-ibm-summary": {
                "type": "string"
              }
            }
          }
        }
      },
      "Wsdl": {
        "type": "object",
        "additionalProperties": true
      },
      "Metadata": {
        "type": "object",
        "additionalProperties": true
      },
      "Implementation": {
        "type": "object",
        "additionalProperties": true
      },
      "PolicyDefinition": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "policy": {
            "type": "string",
            "enum": [
              "1.0.0"
            ]
          },
          "info": {
            "type": "object",
            "additionalProperties": true,
            "required": [
              "name",
              "version"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            }
          }
        }
      },
      "Analytics": {
        "type": "object",
        "additionalProperties": true
      },
      "OAI3": {
        "type": "object",
        "additionalProperties": true,
        "nullable": true
      },
      "ProductSpecialization": {
        "type": "object",
        "nullable": true,
        "properties": {
          "spaces": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "gateway_service_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "oauth_provider_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "task_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "APISpecialization": {
        "type": "object",
        "nullable": true,
        "properties": {
          "spaces": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "gateway_service_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "user_registry_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "oauth_provider_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "tls_client_profile_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "extension_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "policy_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "SubsystemService": {
        "type": "object",
        "additionalProperties": true
      },
      "SnapshotData": {
        "type": "object",
        "additionalProperties": true
      },
      "UpdateCredentialsResponse": {
        "type": "object",
        "additionalProperties": true
      },
      "SubsystemServiceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsystemService"
            }
          }
        }
      },
      "LastProcessedEvent": {
        "type": "object",
        "required": [
          "event_id"
        ],
        "additionalProperties": false,
        "properties": {
          "event_id": {
            "type": "string"
          }
        }
      },
      "AssemblyDebug": {
        "type": "object",
        "additionalProperties": true
      },
      "AssemblyDebugCreateRequest": {
        "type": "object",
        "properties": {
          "FilterByAPI": {
            "type": "string"
          }
        }
      },
      "AssemblyDebugCreateResponse": {
        "type": "object",
        "properties": {
          "CaptureId": {
            "type": "object"
          }
        }
      },
      "AssemblyDebugCapture": {
        "type": "object",
        "additionalProperties": true
      },
      "AssemblyDebugCaptureTransaction": {
        "type": "object",
        "additionalProperties": true
      },
      "SubscriberProcessingStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "service_state": {
            "type": "string",
            "enum": [
              "green",
              "orange",
              "red"
            ]
          },
          "service_up_to_date": {
            "type": "boolean"
          },
          "last_processed_event": {
            "type": "object",
            "properties": {
              "event_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "filter": {
                "type": "string"
              },
              "generated_at": {
                "type": "string"
              },
              "processed_at": {
                "type": "string"
              },
              "event_processing_time": {
                "type": "integer"
              },
              "elapsed_time_since_last_processed_event": {
                "type": "integer"
              }
            }
          },
          "number_of_outstanding_sent_events": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "last_sent_event": {
            "type": "object",
            "properties": {
              "event_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "sent_at": {
                "type": "string"
              },
              "generated_at": {
                "type": "string"
              }
            }
          },
          "number_of_outstanding_queued_events": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          }
        }
      },
      "InternalCache": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cache_type"
        ],
        "properties": {
          "cache_type": {
            "type": "string"
          },
          "delete_key": {
            "type": "string"
          },
          "clear_entries": {
            "type": "boolean"
          }
        }
      },
      "Error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "integer",
            "minimum": 400,
            "maximum": 599
          },
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PublicKeyJwk": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "kty": {
            "type": "string"
          },
          "n": {
            "type": "string"
          },
          "e": {
            "type": "string"
          },
          "alg": {
            "type": "string"
          },
          "kid": {
            "type": "string"
          },
          "use": {
            "type": "string"
          }
        }
      },
      "NotificationLanguage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "notification_language"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "variables": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "body_html": {
            "type": "string"
          },
          "content_type": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "text",
                "html"
              ]
            }
          },
          "notification_template_name": {
            "type": "string"
          },
          "notification_template_type": {
            "type": "string"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "notification_template_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "NotificationLanguageList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationLanguage"
            }
          }
        }
      },
      "AllowedProductPublishValidation": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          }
        }
      }
    },
    "responses": {
      "Error": {
        "description": "Unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "/oauth2/authorize",
            "scopes": {
              "api-analytics:view": "Create an Analytics object",
              "api-drafts:edit": "Clear the Draft objects, Create a Draft API object, Clear all Draft API objects in all collections, Clear the Draft API objects, Update the Draft API object by id, Delete the Draft API object by id, Update the Draft API object by name and version, Delete the Draft API object by name and version",
              "api-drafts:view": "List the Draft objects, List the Search objects, List all Draft API objects in all collections, List the Draft API objects, Get the Draft API object by id, Get the Draft API object by name and version",
              "app:manage:all": "Create a Application object, Clear the Application objects, Update the Application object by name or id, Delete the Application object by name or id, Create a Application Credential object, Update the Application Credential object by name or id, Delete the Application Credential object by name or id, Create a Subscription object, Clear the Subscription objects, Update the Subscription object by name or id, Delete the Subscription object by name or id",
              "app:view:all": "List the Application objects, Get the Application object by name or id, List the Application Credential objects, Get the Application Credential object by name or id, List the Subscription objects, Get the Subscription object by name or id",
              "approval:view": "List the Task objects, Get the Task object by name or id, Update the Task object by name or id",
              "child:create": "Create a Catalog object, Create a Space object",
              "child:manage": "Clear the Catalog objects, Update the Catalog object by name or id, Delete the Catalog object by name or id, Clear the Space objects, Update the Space object by name or id, Delete the Space object by name or id",
              "child:view": "List the Catalog objects, Get the Catalog object by name or id, List the Space objects, Get the Space object by name or id",
              "cloud:manage": "Update the Cloud Setting object, Update the User Registry Setting object, Update the Notification Style object, Create a Registration object, Clear the Registration objects, Update the Registration object by name or id, Delete the Registration object by name or id, Update the Webhook object by name or id",
              "cloud:view": "Get the Cloud Setting object, Get the User Registry Setting object, Get the Notification Style object, List all Notification Template objects in all collections, List all Role Default objects in all collections, List the Registration objects, Get the Registration object by name or id, List the Subsystem Service objects, List the Webhook objects, Get the Webhook object by name or id",
              "consumer-org:manage": "Clear the Activation objects, Delete the Activation object by name or id, Create a Consumer Organization object, Clear the Consumer Organization objects, Update the Consumer Organization object by name or id, Delete the Consumer Organization object by name or id, Create a Payment Method object, Update the Payment Method object by name or id, Delete the Payment Method object by name or id",
              "consumer-org:view": "List the Activation objects, Get the Activation object by name or id, List the Consumer Organization objects, Get the Consumer Organization object by name or id, List the Payment Method objects, Get the Payment Method object by name or id",
              "my:manage": "Create a API Key object, Delete the API Key object by name or id, Update the Me object, Delete the Me object",
              "my:view": "List the API Key objects, Get the API Key object by name or id, Get the Me object, List the My Permission objects, List the My Task objects, List the Originated Task objects, List the My Organization objects, List the My Catalog objects, List the My Space objects",
              "org:manage": "Update the Log Spec object, Create a User Registry object, Clear the User Registry objects, Update the User Registry object by name or id, Delete the User Registry object by name or id, Create a User object, Clear the User objects, Update the User object by name or id, Delete the User object by name or id, Update the Organization Setting object, Update the Organization object by name or id, Delete the Organization object by name or id, Create a Member Invitation object, Clear the Member Invitation objects, Update the Member Invitation object by name or id, Delete the Member Invitation object by name or id, Create a Member object, Clear the Member objects, Update the Member object by name or id, Delete the Member object by name or id, Create a Role object, Clear the Role objects, Update the Role object by name or id, Delete the Role object by name or id, Create a Availability Zone object, Clear the Availability Zone objects, Update the Availability Zone object by name or id, Delete the Availability Zone object by name or id, Create a Gateway Service object, Clear the Gateway Service objects, Update the Gateway Service object by name or id, Delete the Gateway Service object by name or id, Create a Policy object, Update the Policy object by id, Delete the Policy object by id, Create a Portal Service object, Clear the Portal Service objects, Update the Portal Service object by name or id, Delete the Portal Service object by name or id, Create a Analytics Service object, Clear the Analytics Service objects, Update the Analytics Service object by name or id, Delete the Analytics Service object by name or id, Create a Oauth Provider object, Clear the Oauth Provider objects, Update the Oauth Provider object by name or id, Delete the Oauth Provider object by name or id, Create a Mail Server object, Clear the Mail Server objects, Update the Mail Server object by name or id, Delete the Mail Server object by name or id, Create a Billing object, Clear the Billing objects, Update the Billing object by name or id, Delete the Billing object by name or id, Clear the Job objects, Delete the Job object by name or id, Create a TLS Server Profile object, Clear all TLS Server Profile objects in all collections, Clear the TLS Server Profile objects, Update the TLS Server Profile object by id, Delete the TLS Server Profile object by id, Update the TLS Server Profile object by name and version, Delete the TLS Server Profile object by name and version, Create a TLS Client Profile object, Clear all TLS Client Profile objects in all collections, Clear the TLS Client Profile objects, Update the TLS Client Profile object by id, Delete the TLS Client Profile object by id, Update the TLS Client Profile object by name and version, Delete the TLS Client Profile object by name and version, Create a Keystore object, Clear the Keystore objects, Update the Keystore object by name or id, Delete the Keystore object by name or id, Create a Truststore object, Clear the Truststore objects, Update the Truststore object by name or id, Delete the Truststore object by name or id, Create a Entry object, Clear the Entry objects, Update the Entry object by name or id, Delete the Entry object by name or id, Update the Catalog Setting object, Create a Configured Gateway Service object, Clear the Configured Gateway Service objects, Delete the Configured Gateway Service object by name or id, Create a Configured Catalog User Registry object, Delete the Configured Catalog User Registry object by name or id, Create a Configured API User Registry object, Clear the Configured API User Registry objects, Delete the Configured API User Registry object by name or id, Create a Configured TLS Client Profile object, Clear the Configured TLS Client Profile objects, Delete the Configured TLS Client Profile object by id, Delete the Configured TLS Client Profile object by name and version, Create a Configured Billing object, Clear the Configured Billing objects, Delete the Configured Billing object by name or id, Create a Configured Oauth Provider object, Clear the Configured Oauth Provider objects, Delete the Configured Oauth Provider object by name or id, Create a Application Type object, Clear the Application Type objects, Update the Application Type object by name or id, Delete the Application Type object by name or id, Augment the Configuration Property with additional name/value pairs, Clear the Configuration Property objects, Update the Configuration Property object, Delete the Configuration Property object, Create a Global Policy object, Clear all Global Policy objects in all collections, Clear the Global Policy objects, Update the Global Policy object by id, Delete the Global Policy object by id, Update the Global Policy object by name and version, Delete the Global Policy object by name and version, Create a Service object, Clear all Service objects in all collections, Update the Service object by id, Clear the Service objects, Delete the Service object by id, Update the Service object by name and version, Delete the Service object by name and version, Create the Global Policy Error object, Update the Global Policy Error object, Delete the Global Policy Error object, Create the Global Policy Prehook object, Update the Global Policy Prehook object, Delete the Global Policy Prehook object, Create the Global Policy Posthook object, Update the Global Policy Posthook object, Delete the Global Policy Posthook object, Update the Space Setting object, Update the Consumer Organization Setting object, Delete the Consumer Organization Setting object",
              "org:view": "Get the Log Spec object, List the User Registry objects, Get the User Registry object by name or id, List the User objects, Get the User object by name or id, List all Integration objects in all collections, Get the Organization Setting object, Get the Organization object by name or id, List the Associate objects, Get the Associate object by name or id, List the Member Invitation objects, Get the Member Invitation object by name or id, List the Member objects, Get the Member object by name or id, List the Role objects, Get the Role object by name or id, List the Availability Zone objects, Get the Availability Zone object by name or id, List the Gateway Service objects, Get the Gateway Service object by name or id, List all Policy objects in all collections, List the Policy objects, Get the Policy object by id, Get the Policy object by name and version, List all Extension objects in all collections, List the Extension objects, Get the Extension object by id, Get the Extension object by name and version, Create the Gateway Extension object, Get the Gateway Extension object, Update the Gateway Extension object, Delete the Gateway Extension object, List the Portal Service objects, Get the Portal Service object by name or id, List the Analytics Service objects, Get the Analytics Service object by name or id, List the Oauth Provider objects, Get the Oauth Provider object by name or id, List the Mail Server objects, Get the Mail Server object by name or id, List the Billing objects, Get the Billing object by name or id, List the Job objects, Get the Job object by name or id, List all TLS Server Profile objects in all collections, List the TLS Server Profile objects, Get the TLS Server Profile object by id, Get the TLS Server Profile object by name and version, List all TLS Client Profile objects in all collections, List the TLS Client Profile objects, Get the TLS Client Profile object by id, Get the TLS Client Profile object by name and version, List the Keystore objects, Get the Keystore object by name or id, List the Truststore objects, Get the Truststore object by name or id, List the Entry objects, Get the Entry object by name or id, Get the Catalog Setting object, List the Configured Gateway Service objects, Get the Configured Gateway Service object by name or id, List the Configured Catalog User Registry objects, Get the Configured Catalog User Registry object by name or id, List the Configured API User Registry objects, Get the Configured API User Registry object by name or id, List all Configured TLS Client Profile objects in all collections, Clear all Configured TLS Client Profile objects in all collections, List the Configured TLS Client Profile objects, Get the Configured TLS Client Profile object by id, Get the Configured TLS Client Profile object by name and version, List the Configured Billing objects, Get the Configured Billing object by name or id, List the Configured Oauth Provider objects, Get the Configured Oauth Provider object by name or id, List the Application Type objects, Get the Application Type object by name or id, List the Configuration Property objects, Get the Configuration Property object, List all Global Policy objects in all collections, List the Global Policy objects, Get the Global Policy object by id, Get the Global Policy object by name and version, List all Service objects in all collections, List the Service objects, Get the Service object by id, Get the Service object by name and version, Get the Global Policy Error object, Get the Global Policy Prehook object, Get the Global Policy Posthook object, Get the Space Setting object, Get the Consumer Organization Setting object, List the Primary Event objects, Get the Primary Event object by name or id, List the Subscriber Event objects, Get the Subscriber Event object by name or id, List the Task Queue objects, Get the Task Queue object by name or id",
              "product-drafts:edit": "Create a Draft Product object, Clear all Draft Product objects in all collections, Clear the Draft Product objects, Update the Draft Product object by id, Delete the Draft Product object by id, Update the Draft Product object by name and version, Delete the Draft Product object by name and version",
              "product-drafts:view": "List all Draft Product objects in all collections, List the Draft Product objects, Get the Draft Product object by id, Get the Draft Product object by name and version",
              "product:manage": "Clear all Product objects in all collections, Clear the Product objects, Update the Product object by id, Delete the Product object by id, Update the Product object by name and version, Delete the Product object by name and version, Update the API object by id, Update the API object by name and version",
              "product:view": "List all Product objects in all collections, List the Product objects, Get the Product object by id, Get the Product object by name and version, List all API objects in all collections, List the API objects, Get the API object by id, Get the API object by name and version",
              "provider-org:manage": "Create an Organization Invitation object, Clear the Organization Invitation objects, Update the Organization Invitation object by name or id, Delete the Organization Invitation object by name or id, Create a Group object, Clear the Group objects, Update the Group object by name or id, Delete the Group object by name or id",
              "provider-org:view": "List the Organization Invitation objects, Get the Organization Invitation object by name or id, List the Group objects, Get the Group object by name or id",
              "webhook:manage": "Create a Webhook object, Update the Webhook object by name or id, Delete the Webhook object by name or id",
              "webhook:view": "List the Webhook objects, Get the Webhook object by name or id, List the Snapshot objects, Get the Snapshot object by name or id"
            }
          },
          "password": {
            "tokenUrl": "/token",
            "refreshUrl": "/token",
            "scopes": {
              "api-analytics:view": "Create an Analytics object",
              "api-drafts:edit": "Clear the Draft objects, Create a Draft API object, Clear all Draft API objects in all collections, Clear the Draft API objects, Update the Draft API object by id, Delete the Draft API object by id, Update the Draft API object by name and version, Delete the Draft API object by name and version",
              "api-drafts:view": "List the Draft objects, List the Search objects, List all Draft API objects in all collections, List the Draft API objects, Get the Draft API object by id, Get the Draft API object by name and version",
              "app:manage:all": "Create a Application object, Clear the Application objects, Update the Application object by name or id, Delete the Application object by name or id, Create a Application Credential object, Update the Application Credential object by name or id, Delete the Application Credential object by name or id, Create a Subscription object, Clear the Subscription objects, Update the Subscription object by name or id, Delete the Subscription object by name or id",
              "app:view:all": "List the Application objects, Get the Application object by name or id, List the Application Credential objects, Get the Application Credential object by name or id, List the Subscription objects, Get the Subscription object by name or id",
              "approval:view": "List the Task objects, Get the Task object by name or id, Update the Task object by name or id",
              "child:create": "Create a Catalog object, Create a Space object",
              "child:manage": "Clear the Catalog objects, Update the Catalog object by name or id, Delete the Catalog object by name or id, Clear the Space objects, Update the Space object by name or id, Delete the Space object by name or id",
              "child:view": "List the Catalog objects, Get the Catalog object by name or id, List the Space objects, Get the Space object by name or id",
              "cloud:manage": "Update the Cloud Setting object, Update the User Registry Setting object, Update the Notification Style object, Create a Registration object, Clear the Registration objects, Update the Registration object by name or id, Delete the Registration object by name or id, Update the Webhook object by name or id",
              "cloud:view": "Get the Cloud Setting object, Get the User Registry Setting object, Get the Notification Style object, List all Notification Template objects in all collections, List all Role Default objects in all collections, List the Registration objects, Get the Registration object by name or id, List the Subsystem Service objects, List the Webhook objects, Get the Webhook object by name or id",
              "consumer-org:manage": "Clear the Activation objects, Delete the Activation object by name or id, Create a Consumer Organization object, Clear the Consumer Organization objects, Update the Consumer Organization object by name or id, Delete the Consumer Organization object by name or id, Create a Payment Method object, Update the Payment Method object by name or id, Delete the Payment Method object by name or id",
              "consumer-org:view": "List the Activation objects, Get the Activation object by name or id, List the Consumer Organization objects, Get the Consumer Organization object by name or id, List the Payment Method objects, Get the Payment Method object by name or id",
              "my:manage": "Create a API Key object, Delete the API Key object by name or id, Update the Me object, Delete the Me object",
              "my:view": "List the API Key objects, Get the API Key object by name or id, Get the Me object, List the My Permission objects, List the My Task objects, List the Originated Task objects, List the My Organization objects, List the My Catalog objects, List the My Space objects",
              "org:manage": "Update the Log Spec object, Create a User Registry object, Clear the User Registry objects, Update the User Registry object by name or id, Delete the User Registry object by name or id, Create a User object, Clear the User objects, Update the User object by name or id, Delete the User object by name or id, Update the Organization Setting object, Update the Organization object by name or id, Delete the Organization object by name or id, Create a Member Invitation object, Clear the Member Invitation objects, Update the Member Invitation object by name or id, Delete the Member Invitation object by name or id, Create a Member object, Clear the Member objects, Update the Member object by name or id, Delete the Member object by name or id, Create a Role object, Clear the Role objects, Update the Role object by name or id, Delete the Role object by name or id, Create a Availability Zone object, Clear the Availability Zone objects, Update the Availability Zone object by name or id, Delete the Availability Zone object by name or id, Create a Gateway Service object, Clear the Gateway Service objects, Update the Gateway Service object by name or id, Delete the Gateway Service object by name or id, Create a Policy object, Update the Policy object by id, Delete the Policy object by id, Create a Portal Service object, Clear the Portal Service objects, Update the Portal Service object by name or id, Delete the Portal Service object by name or id, Create a Analytics Service object, Clear the Analytics Service objects, Update the Analytics Service object by name or id, Delete the Analytics Service object by name or id, Create a Oauth Provider object, Clear the Oauth Provider objects, Update the Oauth Provider object by name or id, Delete the Oauth Provider object by name or id, Create a Mail Server object, Clear the Mail Server objects, Update the Mail Server object by name or id, Delete the Mail Server object by name or id, Create a Billing object, Clear the Billing objects, Update the Billing object by name or id, Delete the Billing object by name or id, Clear the Job objects, Delete the Job object by name or id, Create a TLS Server Profile object, Clear all TLS Server Profile objects in all collections, Clear the TLS Server Profile objects, Update the TLS Server Profile object by id, Delete the TLS Server Profile object by id, Update the TLS Server Profile object by name and version, Delete the TLS Server Profile object by name and version, Create a TLS Client Profile object, Clear all TLS Client Profile objects in all collections, Clear the TLS Client Profile objects, Update the TLS Client Profile object by id, Delete the TLS Client Profile object by id, Update the TLS Client Profile object by name and version, Delete the TLS Client Profile object by name and version, Create a Keystore object, Clear the Keystore objects, Update the Keystore object by name or id, Delete the Keystore object by name or id, Create a Truststore object, Clear the Truststore objects, Update the Truststore object by name or id, Delete the Truststore object by name or id, Create a Entry object, Clear the Entry objects, Update the Entry object by name or id, Delete the Entry object by name or id, Update the Catalog Setting object, Create a Configured Gateway Service object, Clear the Configured Gateway Service objects, Delete the Configured Gateway Service object by name or id, Create a Configured Catalog User Registry object, Delete the Configured Catalog User Registry object by name or id, Create a Configured API User Registry object, Clear the Configured API User Registry objects, Delete the Configured API User Registry object by name or id, Create a Configured TLS Client Profile object, Clear the Configured TLS Client Profile objects, Delete the Configured TLS Client Profile object by id, Delete the Configured TLS Client Profile object by name and version, Create a Configured Billing object, Clear the Configured Billing objects, Delete the Configured Billing object by name or id, Create a Configured Oauth Provider object, Clear the Configured Oauth Provider objects, Delete the Configured Oauth Provider object by name or id, Create a Application Type object, Clear the Application Type objects, Update the Application Type object by name or id, Delete the Application Type object by name or id, Augment the Configuration Property with additional name/value pairs, Clear the Configuration Property objects, Update the Configuration Property object, Delete the Configuration Property object, Create a Global Policy object, Clear all Global Policy objects in all collections, Clear the Global Policy objects, Update the Global Policy object by id, Delete the Global Policy object by id, Update the Global Policy object by name and version, Delete the Global Policy object by name and version, Create a Service object, Clear all Service objects in all collections, Update the Service object by id, Clear the Service objects, Delete the Service object by id, Update the Service object by name and version, Delete the Service object by name and version, Create the Global Policy Error object, Update the Global Policy Error object, Delete the Global Policy Error object, Create the Global Policy Prehook object, Update the Global Policy Prehook object, Delete the Global Policy Prehook object, Create the Global Policy Posthook object, Update the Global Policy Posthook object, Delete the Global Policy Posthook object, Update the Space Setting object, Update the Consumer Organization Setting object, Delete the Consumer Organization Setting object",
              "org:view": "Get the Log Spec object, List the User Registry objects, Get the User Registry object by name or id, List the User objects, Get the User object by name or id, List all Integration objects in all collections, Get the Organization Setting object, Get the Organization object by name or id, List the Associate objects, Get the Associate object by name or id, List the Member Invitation objects, Get the Member Invitation object by name or id, List the Member objects, Get the Member object by name or id, List the Role objects, Get the Role object by name or id, List the Availability Zone objects, Get the Availability Zone object by name or id, List the Gateway Service objects, Get the Gateway Service object by name or id, List all Policy objects in all collections, List the Policy objects, Get the Policy object by id, Get the Policy object by name and version, List all Extension objects in all collections, List the Extension objects, Get the Extension object by id, Get the Extension object by name and version, Create the Gateway Extension object, Get the Gateway Extension object, Update the Gateway Extension object, Delete the Gateway Extension object, List the Portal Service objects, Get the Portal Service object by name or id, List the Analytics Service objects, Get the Analytics Service object by name or id, List the Oauth Provider objects, Get the Oauth Provider object by name or id, List the Mail Server objects, Get the Mail Server object by name or id, List the Billing objects, Get the Billing object by name or id, List the Job objects, Get the Job object by name or id, List all TLS Server Profile objects in all collections, List the TLS Server Profile objects, Get the TLS Server Profile object by id, Get the TLS Server Profile object by name and version, List all TLS Client Profile objects in all collections, List the TLS Client Profile objects, Get the TLS Client Profile object by id, Get the TLS Client Profile object by name and version, List the Keystore objects, Get the Keystore object by name or id, List the Truststore objects, Get the Truststore object by name or id, List the Entry objects, Get the Entry object by name or id, Get the Catalog Setting object, List the Configured Gateway Service objects, Get the Configured Gateway Service object by name or id, List the Configured Catalog User Registry objects, Get the Configured Catalog User Registry object by name or id, List the Configured API User Registry objects, Get the Configured API User Registry object by name or id, List all Configured TLS Client Profile objects in all collections, Clear all Configured TLS Client Profile objects in all collections, List the Configured TLS Client Profile objects, Get the Configured TLS Client Profile object by id, Get the Configured TLS Client Profile object by name and version, List the Configured Billing objects, Get the Configured Billing object by name or id, List the Configured Oauth Provider objects, Get the Configured Oauth Provider object by name or id, List the Application Type objects, Get the Application Type object by name or id, List the Configuration Property objects, Get the Configuration Property object, List all Global Policy objects in all collections, List the Global Policy objects, Get the Global Policy object by id, Get the Global Policy object by name and version, List all Service objects in all collections, List the Service objects, Get the Service object by id, Get the Service object by name and version, Get the Global Policy Error object, Get the Global Policy Prehook object, Get the Global Policy Posthook object, Get the Space Setting object, Get the Consumer Organization Setting object, List the Primary Event objects, Get the Primary Event object by name or id, List the Subscriber Event objects, Get the Subscriber Event object by name or id, List the Task Queue objects, Get the Task Queue object by name or id",
              "product-drafts:edit": "Create a Draft Product object, Clear all Draft Product objects in all collections, Clear the Draft Product objects, Update the Draft Product object by id, Delete the Draft Product object by id, Update the Draft Product object by name and version, Delete the Draft Product object by name and version",
              "product-drafts:view": "List all Draft Product objects in all collections, List the Draft Product objects, Get the Draft Product object by id, Get the Draft Product object by name and version",
              "product:manage": "Clear all Product objects in all collections, Clear the Product objects, Update the Product object by id, Delete the Product object by id, Update the Product object by name and version, Delete the Product object by name and version, Update the API object by id, Update the API object by name and version",
              "product:view": "List all Product objects in all collections, List the Product objects, Get the Product object by id, Get the Product object by name and version, List all API objects in all collections, List the API objects, Get the API object by id, Get the API object by name and version",
              "provider-org:manage": "Create an Organization Invitation object, Clear the Organization Invitation objects, Update the Organization Invitation object by name or id, Delete the Organization Invitation object by name or id, Create a Group object, Clear the Group objects, Update the Group object by name or id, Delete the Group object by name or id",
              "provider-org:view": "List the Organization Invitation objects, Get the Organization Invitation object by name or id, List the Group objects, Get the Group object by name or id",
              "webhook:manage": "Create a Webhook object, Update the Webhook object by name or id, Delete the Webhook object by name or id",
              "webhook:view": "List the Webhook objects, Get the Webhook object by name or id, List the Snapshot objects, Get the Snapshot object by name or id"
            }
          },
          "clientCredentials": {
            "tokenUrl": "/token",
            "scopes": {
              "api-analytics:view": "Create an Analytics object",
              "api-drafts:edit": "Clear the Draft objects, Create a Draft API object, Clear all Draft API objects in all collections, Clear the Draft API objects, Update the Draft API object by id, Delete the Draft API object by id, Update the Draft API object by name and version, Delete the Draft API object by name and version",
              "api-drafts:view": "List the Draft objects, List the Search objects, List all Draft API objects in all collections, List the Draft API objects, Get the Draft API object by id, Get the Draft API object by name and version",
              "app:manage:all": "Create a Application object, Clear the Application objects, Update the Application object by name or id, Delete the Application object by name or id, Create a Application Credential object, Update the Application Credential object by name or id, Delete the Application Credential object by name or id, Create a Subscription object, Clear the Subscription objects, Update the Subscription object by name or id, Delete the Subscription object by name or id",
              "app:view:all": "List the Application objects, Get the Application object by name or id, List the Application Credential objects, Get the Application Credential object by name or id, List the Subscription objects, Get the Subscription object by name or id",
              "approval:view": "List the Task objects, Get the Task object by name or id, Update the Task object by name or id",
              "child:create": "Create a Catalog object, Create a Space object",
              "child:manage": "Clear the Catalog objects, Update the Catalog object by name or id, Delete the Catalog object by name or id, Clear the Space objects, Update the Space object by name or id, Delete the Space object by name or id",
              "child:view": "List the Catalog objects, Get the Catalog object by name or id, List the Space objects, Get the Space object by name or id",
              "cloud:manage": "Update the Cloud Setting object, Update the User Registry Setting object, Update the Notification Style object, Create a Registration object, Clear the Registration objects, Update the Registration object by name or id, Delete the Registration object by name or id, Update the Webhook object by name or id",
              "cloud:view": "Get the Cloud Setting object, Get the User Registry Setting object, Get the Notification Style object, List all Notification Template objects in all collections, List all Role Default objects in all collections, List the Registration objects, Get the Registration object by name or id, List the Subsystem Service objects, List the Webhook objects, Get the Webhook object by name or id",
              "consumer-org:manage": "Clear the Activation objects, Delete the Activation object by name or id, Create a Consumer Organization object, Clear the Consumer Organization objects, Update the Consumer Organization object by name or id, Delete the Consumer Organization object by name or id, Create a Payment Method object, Update the Payment Method object by name or id, Delete the Payment Method object by name or id",
              "consumer-org:view": "List the Activation objects, Get the Activation object by name or id, List the Consumer Organization objects, Get the Consumer Organization object by name or id, List the Payment Method objects, Get the Payment Method object by name or id",
              "my:manage": "Create a API Key object, Delete the API Key object by name or id, Update the Me object, Delete the Me object",
              "my:view": "List the API Key objects, Get the API Key object by name or id, Get the Me object, List the My Permission objects, List the My Task objects, List the Originated Task objects, List the My Organization objects, List the My Catalog objects, List the My Space objects",
              "org:manage": "Update the Log Spec object, Create a User Registry object, Clear the User Registry objects, Update the User Registry object by name or id, Delete the User Registry object by name or id, Create a User object, Clear the User objects, Update the User object by name or id, Delete the User object by name or id, Update the Organization Setting object, Update the Organization object by name or id, Delete the Organization object by name or id, Create a Member Invitation object, Clear the Member Invitation objects, Update the Member Invitation object by name or id, Delete the Member Invitation object by name or id, Create a Member object, Clear the Member objects, Update the Member object by name or id, Delete the Member object by name or id, Create a Role object, Clear the Role objects, Update the Role object by name or id, Delete the Role object by name or id, Create a Availability Zone object, Clear the Availability Zone objects, Update the Availability Zone object by name or id, Delete the Availability Zone object by name or id, Create a Gateway Service object, Clear the Gateway Service objects, Update the Gateway Service object by name or id, Delete the Gateway Service object by name or id, Create a Policy object, Update the Policy object by id, Delete the Policy object by id, Create a Portal Service object, Clear the Portal Service objects, Update the Portal Service object by name or id, Delete the Portal Service object by name or id, Create a Analytics Service object, Clear the Analytics Service objects, Update the Analytics Service object by name or id, Delete the Analytics Service object by name or id, Create a Oauth Provider object, Clear the Oauth Provider objects, Update the Oauth Provider object by name or id, Delete the Oauth Provider object by name or id, Create a Mail Server object, Clear the Mail Server objects, Update the Mail Server object by name or id, Delete the Mail Server object by name or id, Create a Billing object, Clear the Billing objects, Update the Billing object by name or id, Delete the Billing object by name or id, Clear the Job objects, Delete the Job object by name or id, Create a TLS Server Profile object, Clear all TLS Server Profile objects in all collections, Clear the TLS Server Profile objects, Update the TLS Server Profile object by id, Delete the TLS Server Profile object by id, Update the TLS Server Profile object by name and version, Delete the TLS Server Profile object by name and version, Create a TLS Client Profile object, Clear all TLS Client Profile objects in all collections, Clear the TLS Client Profile objects, Update the TLS Client Profile object by id, Delete the TLS Client Profile object by id, Update the TLS Client Profile object by name and version, Delete the TLS Client Profile object by name and version, Create a Keystore object, Clear the Keystore objects, Update the Keystore object by name or id, Delete the Keystore object by name or id, Create a Truststore object, Clear the Truststore objects, Update the Truststore object by name or id, Delete the Truststore object by name or id, Create a Entry object, Clear the Entry objects, Update the Entry object by name or id, Delete the Entry object by name or id, Update the Catalog Setting object, Create a Configured Gateway Service object, Clear the Configured Gateway Service objects, Delete the Configured Gateway Service object by name or id, Create a Configured Catalog User Registry object, Delete the Configured Catalog User Registry object by name or id, Create a Configured API User Registry object, Clear the Configured API User Registry objects, Delete the Configured API User Registry object by name or id, Create a Configured TLS Client Profile object, Clear the Configured TLS Client Profile objects, Delete the Configured TLS Client Profile object by id, Delete the Configured TLS Client Profile object by name and version, Create a Configured Billing object, Clear the Configured Billing objects, Delete the Configured Billing object by name or id, Create a Configured Oauth Provider object, Clear the Configured Oauth Provider objects, Delete the Configured Oauth Provider object by name or id, Create a Application Type object, Clear the Application Type objects, Update the Application Type object by name or id, Delete the Application Type object by name or id, Augment the Configuration Property with additional name/value pairs, Clear the Configuration Property objects, Update the Configuration Property object, Delete the Configuration Property object, Create a Global Policy object, Clear all Global Policy objects in all collections, Clear the Global Policy objects, Update the Global Policy object by id, Delete the Global Policy object by id, Update the Global Policy object by name and version, Delete the Global Policy object by name and version, Create a Service object, Clear all Service objects in all collections, Update the Service object by id, Clear the Service objects, Delete the Service object by id, Update the Service object by name and version, Delete the Service object by name and version, Create the Global Policy Error object, Update the Global Policy Error object, Delete the Global Policy Error object, Create the Global Policy Prehook object, Update the Global Policy Prehook object, Delete the Global Policy Prehook object, Create the Global Policy Posthook object, Update the Global Policy Posthook object, Delete the Global Policy Posthook object, Update the Space Setting object, Update the Consumer Organization Setting object, Delete the Consumer Organization Setting object",
              "org:view": "Get the Log Spec object, List the User Registry objects, Get the User Registry object by name or id, List the User objects, Get the User object by name or id, List all Integration objects in all collections, Get the Organization Setting object, Get the Organization object by name or id, List the Associate objects, Get the Associate object by name or id, List the Member Invitation objects, Get the Member Invitation object by name or id, List the Member objects, Get the Member object by name or id, List the Role objects, Get the Role object by name or id, List the Availability Zone objects, Get the Availability Zone object by name or id, List the Gateway Service objects, Get the Gateway Service object by name or id, List all Policy objects in all collections, List the Policy objects, Get the Policy object by id, Get the Policy object by name and version, List all Extension objects in all collections, List the Extension objects, Get the Extension object by id, Get the Extension object by name and version, Create the Gateway Extension object, Get the Gateway Extension object, Update the Gateway Extension object, Delete the Gateway Extension object, List the Portal Service objects, Get the Portal Service object by name or id, List the Analytics Service objects, Get the Analytics Service object by name or id, List the Oauth Provider objects, Get the Oauth Provider object by name or id, List the Mail Server objects, Get the Mail Server object by name or id, List the Billing objects, Get the Billing object by name or id, List the Job objects, Get the Job object by name or id, List all TLS Server Profile objects in all collections, List the TLS Server Profile objects, Get the TLS Server Profile object by id, Get the TLS Server Profile object by name and version, List all TLS Client Profile objects in all collections, List the TLS Client Profile objects, Get the TLS Client Profile object by id, Get the TLS Client Profile object by name and version, List the Keystore objects, Get the Keystore object by name or id, List the Truststore objects, Get the Truststore object by name or id, List the Entry objects, Get the Entry object by name or id, Get the Catalog Setting object, List the Configured Gateway Service objects, Get the Configured Gateway Service object by name or id, List the Configured Catalog User Registry objects, Get the Configured Catalog User Registry object by name or id, List the Configured API User Registry objects, Get the Configured API User Registry object by name or id, List all Configured TLS Client Profile objects in all collections, Clear all Configured TLS Client Profile objects in all collections, List the Configured TLS Client Profile objects, Get the Configured TLS Client Profile object by id, Get the Configured TLS Client Profile object by name and version, List the Configured Billing objects, Get the Configured Billing object by name or id, List the Configured Oauth Provider objects, Get the Configured Oauth Provider object by name or id, List the Application Type objects, Get the Application Type object by name or id, List the Configuration Property objects, Get the Configuration Property object, List all Global Policy objects in all collections, List the Global Policy objects, Get the Global Policy object by id, Get the Global Policy object by name and version, List all Service objects in all collections, List the Service objects, Get the Service object by id, Get the Service object by name and version, Get the Global Policy Error object, Get the Global Policy Prehook object, Get the Global Policy Posthook object, Get the Space Setting object, Get the Consumer Organization Setting object, List the Primary Event objects, Get the Primary Event object by name or id, List the Subscriber Event objects, Get the Subscriber Event object by name or id, List the Task Queue objects, Get the Task Queue object by name or id",
              "product-drafts:edit": "Create a Draft Product object, Clear all Draft Product objects in all collections, Clear the Draft Product objects, Update the Draft Product object by id, Delete the Draft Product object by id, Update the Draft Product object by name and version, Delete the Draft Product object by name and version",
              "product-drafts:view": "List all Draft Product objects in all collections, List the Draft Product objects, Get the Draft Product object by id, Get the Draft Product object by name and version",
              "product:manage": "Clear all Product objects in all collections, Clear the Product objects, Update the Product object by id, Delete the Product object by id, Update the Product object by name and version, Delete the Product object by name and version, Update the API object by id, Update the API object by name and version",
              "product:view": "List all Product objects in all collections, List the Product objects, Get the Product object by id, Get the Product object by name and version, List all API objects in all collections, List the API objects, Get the API object by id, Get the API object by name and version",
              "provider-org:manage": "Create an Organization Invitation object, Clear the Organization Invitation objects, Update the Organization Invitation object by name or id, Delete the Organization Invitation object by name or id, Create a Group object, Clear the Group objects, Update the Group object by name or id, Delete the Group object by name or id",
              "provider-org:view": "List the Organization Invitation objects, Get the Organization Invitation object by name or id, List the Group objects, Get the Group object by name or id",
              "webhook:manage": "Create a Webhook object, Update the Webhook object by name or id, Delete the Webhook object by name or id",
              "webhook:view": "List the Webhook objects, Get the Webhook object by name or id, List the Snapshot objects, Get the Snapshot object by name or id"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "/oauth2/authorize",
            "tokenUrl": "/token",
            "refreshUrl": "/token",
            "scopes": {
              "api-analytics:view": "Create an Analytics object",
              "api-drafts:edit": "Clear the Draft objects, Create a Draft API object, Clear all Draft API objects in all collections, Clear the Draft API objects, Update the Draft API object by id, Delete the Draft API object by id, Update the Draft API object by name and version, Delete the Draft API object by name and version",
              "api-drafts:view": "List the Draft objects, List the Search objects, List all Draft API objects in all collections, List the Draft API objects, Get the Draft API object by id, Get the Draft API object by name and version",
              "app:manage:all": "Create a Application object, Clear the Application objects, Update the Application object by name or id, Delete the Application object by name or id, Create a Application Credential object, Update the Application Credential object by name or id, Delete the Application Credential object by name or id, Create a Subscription object, Clear the Subscription objects, Update the Subscription object by name or id, Delete the Subscription object by name or id",
              "app:view:all": "List the Application objects, Get the Application object by name or id, List the Application Credential objects, Get the Application Credential object by name or id, List the Subscription objects, Get the Subscription object by name or id",
              "approval:view": "List the Task objects, Get the Task object by name or id, Update the Task object by name or id",
              "child:create": "Create a Catalog object, Create a Space object",
              "child:manage": "Clear the Catalog objects, Update the Catalog object by name or id, Delete the Catalog object by name or id, Clear the Space objects, Update the Space object by name or id, Delete the Space object by name or id",
              "child:view": "List the Catalog objects, Get the Catalog object by name or id, List the Space objects, Get the Space object by name or id",
              "cloud:manage": "Update the Cloud Setting object, Update the User Registry Setting object, Update the Notification Style object, Create a Registration object, Clear the Registration objects, Update the Registration object by name or id, Delete the Registration object by name or id, Update the Webhook object by name or id",
              "cloud:view": "Get the Cloud Setting object, Get the User Registry Setting object, Get the Notification Style object, List all Notification Template objects in all collections, List all Role Default objects in all collections, List the Registration objects, Get the Registration object by name or id, List the Subsystem Service objects, List the Webhook objects, Get the Webhook object by name or id",
              "consumer-org:manage": "Clear the Activation objects, Delete the Activation object by name or id, Create a Consumer Organization object, Clear the Consumer Organization objects, Update the Consumer Organization object by name or id, Delete the Consumer Organization object by name or id, Create a Payment Method object, Update the Payment Method object by name or id, Delete the Payment Method object by name or id",
              "consumer-org:view": "List the Activation objects, Get the Activation object by name or id, List the Consumer Organization objects, Get the Consumer Organization object by name or id, List the Payment Method objects, Get the Payment Method object by name or id",
              "my:manage": "Create a API Key object, Delete the API Key object by name or id, Update the Me object, Delete the Me object",
              "my:view": "List the API Key objects, Get the API Key object by name or id, Get the Me object, List the My Permission objects, List the My Task objects, List the Originated Task objects, List the My Organization objects, List the My Catalog objects, List the My Space objects",
              "org:manage": "Update the Log Spec object, Create a User Registry object, Clear the User Registry objects, Update the User Registry object by name or id, Delete the User Registry object by name or id, Create a User object, Clear the User objects, Update the User object by name or id, Delete the User object by name or id, Update the Organization Setting object, Update the Organization object by name or id, Delete the Organization object by name or id, Create a Member Invitation object, Clear the Member Invitation objects, Update the Member Invitation object by name or id, Delete the Member Invitation object by name or id, Create a Member object, Clear the Member objects, Update the Member object by name or id, Delete the Member object by name or id, Create a Role object, Clear the Role objects, Update the Role object by name or id, Delete the Role object by name or id, Create a Availability Zone object, Clear the Availability Zone objects, Update the Availability Zone object by name or id, Delete the Availability Zone object by name or id, Create a Gateway Service object, Clear the Gateway Service objects, Update the Gateway Service object by name or id, Delete the Gateway Service object by name or id, Create a Policy object, Update the Policy object by id, Delete the Policy object by id, Create a Portal Service object, Clear the Portal Service objects, Update the Portal Service object by name or id, Delete the Portal Service object by name or id, Create a Analytics Service object, Clear the Analytics Service objects, Update the Analytics Service object by name or id, Delete the Analytics Service object by name or id, Create a Oauth Provider object, Clear the Oauth Provider objects, Update the Oauth Provider object by name or id, Delete the Oauth Provider object by name or id, Create a Mail Server object, Clear the Mail Server objects, Update the Mail Server object by name or id, Delete the Mail Server object by name or id, Create a Billing object, Clear the Billing objects, Update the Billing object by name or id, Delete the Billing object by name or id, Clear the Job objects, Delete the Job object by name or id, Create a TLS Server Profile object, Clear all TLS Server Profile objects in all collections, Clear the TLS Server Profile objects, Update the TLS Server Profile object by id, Delete the TLS Server Profile object by id, Update the TLS Server Profile object by name and version, Delete the TLS Server Profile object by name and version, Create a TLS Client Profile object, Clear all TLS Client Profile objects in all collections, Clear the TLS Client Profile objects, Update the TLS Client Profile object by id, Delete the TLS Client Profile object by id, Update the TLS Client Profile object by name and version, Delete the TLS Client Profile object by name and version, Create a Keystore object, Clear the Keystore objects, Update the Keystore object by name or id, Delete the Keystore object by name or id, Create a Truststore object, Clear the Truststore objects, Update the Truststore object by name or id, Delete the Truststore object by name or id, Create a Entry object, Clear the Entry objects, Update the Entry object by name or id, Delete the Entry object by name or id, Update the Catalog Setting object, Create a Configured Gateway Service object, Clear the Configured Gateway Service objects, Delete the Configured Gateway Service object by name or id, Create a Configured Catalog User Registry object, Delete the Configured Catalog User Registry object by name or id, Create a Configured API User Registry object, Clear the Configured API User Registry objects, Delete the Configured API User Registry object by name or id, Create a Configured TLS Client Profile object, Clear the Configured TLS Client Profile objects, Delete the Configured TLS Client Profile object by id, Delete the Configured TLS Client Profile object by name and version, Create a Configured Billing object, Clear the Configured Billing objects, Delete the Configured Billing object by name or id, Create a Configured Oauth Provider object, Clear the Configured Oauth Provider objects, Delete the Configured Oauth Provider object by name or id, Create a Application Type object, Clear the Application Type objects, Update the Application Type object by name or id, Delete the Application Type object by name or id, Augment the Configuration Property with additional name/value pairs, Clear the Configuration Property objects, Update the Configuration Property object, Delete the Configuration Property object, Create a Global Policy object, Clear all Global Policy objects in all collections, Clear the Global Policy objects, Update the Global Policy object by id, Delete the Global Policy object by id, Update the Global Policy object by name and version, Delete the Global Policy object by name and version, Create a Service object, Clear all Service objects in all collections, Update the Service object by id, Clear the Service objects, Delete the Service object by id, Update the Service object by name and version, Delete the Service object by name and version, Create the Global Policy Error object, Update the Global Policy Error object, Delete the Global Policy Error object, Create the Global Policy Prehook object, Update the Global Policy Prehook object, Delete the Global Policy Prehook object, Create the Global Policy Posthook object, Update the Global Policy Posthook object, Delete the Global Policy Posthook object, Update the Space Setting object, Update the Consumer Organization Setting object, Delete the Consumer Organization Setting object",
              "org:view": "Get the Log Spec object, List the User Registry objects, Get the User Registry object by name or id, List the User objects, Get the User object by name or id, List all Integration objects in all collections, Get the Organization Setting object, Get the Organization object by name or id, List the Associate objects, Get the Associate object by name or id, List the Member Invitation objects, Get the Member Invitation object by name or id, List the Member objects, Get the Member object by name or id, List the Role objects, Get the Role object by name or id, List the Availability Zone objects, Get the Availability Zone object by name or id, List the Gateway Service objects, Get the Gateway Service object by name or id, List all Policy objects in all collections, List the Policy objects, Get the Policy object by id, Get the Policy object by name and version, List all Extension objects in all collections, List the Extension objects, Get the Extension object by id, Get the Extension object by name and version, Create the Gateway Extension object, Get the Gateway Extension object, Update the Gateway Extension object, Delete the Gateway Extension object, List the Portal Service objects, Get the Portal Service object by name or id, List the Analytics Service objects, Get the Analytics Service object by name or id, List the Oauth Provider objects, Get the Oauth Provider object by name or id, List the Mail Server objects, Get the Mail Server object by name or id, List the Billing objects, Get the Billing object by name or id, List the Job objects, Get the Job object by name or id, List all TLS Server Profile objects in all collections, List the TLS Server Profile objects, Get the TLS Server Profile object by id, Get the TLS Server Profile object by name and version, List all TLS Client Profile objects in all collections, List the TLS Client Profile objects, Get the TLS Client Profile object by id, Get the TLS Client Profile object by name and version, List the Keystore objects, Get the Keystore object by name or id, List the Truststore objects, Get the Truststore object by name or id, List the Entry objects, Get the Entry object by name or id, Get the Catalog Setting object, List the Configured Gateway Service objects, Get the Configured Gateway Service object by name or id, List the Configured Catalog User Registry objects, Get the Configured Catalog User Registry object by name or id, List the Configured API User Registry objects, Get the Configured API User Registry object by name or id, List all Configured TLS Client Profile objects in all collections, Clear all Configured TLS Client Profile objects in all collections, List the Configured TLS Client Profile objects, Get the Configured TLS Client Profile object by id, Get the Configured TLS Client Profile object by name and version, List the Configured Billing objects, Get the Configured Billing object by name or id, List the Configured Oauth Provider objects, Get the Configured Oauth Provider object by name or id, List the Application Type objects, Get the Application Type object by name or id, List the Configuration Property objects, Get the Configuration Property object, List all Global Policy objects in all collections, List the Global Policy objects, Get the Global Policy object by id, Get the Global Policy object by name and version, List all Service objects in all collections, List the Service objects, Get the Service object by id, Get the Service object by name and version, Get the Global Policy Error object, Get the Global Policy Prehook object, Get the Global Policy Posthook object, Get the Space Setting object, Get the Consumer Organization Setting object, List the Primary Event objects, Get the Primary Event object by name or id, List the Subscriber Event objects, Get the Subscriber Event object by name or id, List the Task Queue objects, Get the Task Queue object by name or id",
              "product-drafts:edit": "Create a Draft Product object, Clear all Draft Product objects in all collections, Clear the Draft Product objects, Update the Draft Product object by id, Delete the Draft Product object by id, Update the Draft Product object by name and version, Delete the Draft Product object by name and version",
              "product-drafts:view": "List all Draft Product objects in all collections, List the Draft Product objects, Get the Draft Product object by id, Get the Draft Product object by name and version",
              "product:manage": "Clear all Product objects in all collections, Clear the Product objects, Update the Product object by id, Delete the Product object by id, Update the Product object by name and version, Delete the Product object by name and version, Update the API object by id, Update the API object by name and version",
              "product:view": "List all Product objects in all collections, List the Product objects, Get the Product object by id, Get the Product object by name and version, List all API objects in all collections, List the API objects, Get the API object by id, Get the API object by name and version",
              "provider-org:manage": "Create an Organization Invitation object, Clear the Organization Invitation objects, Update the Organization Invitation object by name or id, Delete the Organization Invitation object by name or id, Create a Group object, Clear the Group objects, Update the Group object by name or id, Delete the Group object by name or id",
              "provider-org:view": "List the Organization Invitation objects, Get the Organization Invitation object by name or id, List the Group objects, Get the Group object by name or id",
              "webhook:manage": "Create a Webhook object, Update the Webhook object by name or id, Delete the Webhook object by name or id",
              "webhook:view": "List the Webhook objects, Get the Webhook object by name or id, List the Snapshot objects, Get the Snapshot object by name or id"
            }
          }
        }
      }
    }
  },
  "x-ibm-configuration": {
    "testable": false
  }
},
{
  "openapi": "3.0.0",
  "info": {
    "x-ibm-name": "apim",
    "version": "2.0.0",
    "title": "IBM API Connect Platform - Provider API",
    "description": "This API provides operations for accessing API provider capability.",
    "termsOfService": "https://www.ibm.com/legal",
    "contact": {
      "name": "IBM",
      "url": "https://www.ibm.com",
      "email": "help@ibm.com"
    },
    "license": {
      "name": "tbd",
      "url": "https://tbd.com"
    }
  },
  "servers": [
    {
      "url": "https://apimserver.example.com/api",
      "description": "APIM base path"
    }
  ],
  "paths": {
    "/orgs/{org}/user-registries": {
      "description": "The collection of User Registry operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a user registry.",
        "description": "Creates a user registry.\n\n          Required fields:\n          - integration_url\n          \n          Fields not allowed:\n          - owned\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "user_registry_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistry"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistry"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      },
      "get": {
        "summary": "Lists user registries.",
        "description": "Returns the list of user registries belonging to a provider organization.",
        "operationId": "user_registry_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      },
      "delete": {
        "summary": "Clears user registries.",
        "description": "Deletes all user registries belonging to a provider organization.",
        "operationId": "user_registry_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}": {
      "description": "User Registry object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        }
      ],
      "get": {
        "summary": "Returns a user registry.",
        "description": "Returns a user registry.",
        "operationId": "user_registry_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      },
      "patch": {
        "summary": "Updates a user registry.",
        "description": "Updates a user registry.\n\n          Fields not allowed:\n          - owned\n          - registry_type\n          - user_registry_managed\n          - correlation_data\n          - integration_url\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "user_registry_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistry"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      },
      "delete": {
        "summary": "Deletes a user registry.",
        "description": "Deletes a user registry.",
        "operationId": "user_registry_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}/execute": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        }
      ],
      "post": {
        "summary": "Execute a User Registry operation",
        "description": "Execute a User Registry operation",
        "operationId": "user_registry_executeById",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/operation"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryExecuteResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryExecuteResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}/test-connection": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        }
      ],
      "post": {
        "summary": "Test a User Registry connection",
        "description": "Test a User Registry connection",
        "operationId": "user_registry_testConnectionById",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestConnectionCredentials"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TestConnectionCredentials"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/orgs/{org}/user-registries/execute": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Execute a User Registry operation",
        "description": "Execute a User Registry operation",
        "operationId": "user_registry_execute",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/operation"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistryExecute"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistryExecute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryExecuteResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryExecuteResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/orgs/{org}/user-registries/test-connection": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Test a User Registry connection",
        "description": "Test a User Registry connection",
        "operationId": "user_registry_testConnection",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistryTestConnection"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistryTestConnection"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}/search": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        }
      ],
      "post": {
        "summary": "Search for users in the user registry",
        "description": "Search for users in the user registry",
        "operationId": "user_registry_search",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}/users": {
      "description": "The collection of User operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        }
      ],
      "post": {
        "summary": "Creates a user.",
        "description": "Creates a user entry in a user registry. For user registries that are defined as <i>user managed</i>, a user record is also created in the backing (usually remote) user directory.\n\n          Required fields:\n          - username\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - user_registry_url\n",
        "operationId": "user_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      },
      "get": {
        "summary": "Lists users.",
        "description": "Returns a user entry from a user registry. The user entry returned comes from the API Connect configuration, rather than a from backing (remote) user directory.",
        "operationId": "user_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      },
      "delete": {
        "summary": "Clears users.",
        "description": "Removes all user entries from a user registry. For user registries that are defined as <i>user managed</i>, user records are also removed from the backing (usually remote) user directory.",
        "operationId": "user_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}/users/{user}": {
      "description": "User object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        },
        {
          "$ref": "#/components/parameters/user"
        }
      ],
      "get": {
        "summary": "Returns a user.",
        "description": "Deletes a user entry from a user registry. For user registries that are defined as <i>user managed</i>, the user record is also deleted in the backing (usually remote) user directory.",
        "operationId": "user_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      },
      "patch": {
        "summary": "Updates a user.",
        "description": "Updates a user entry. To change a user password, see the </tt>reset-password</tt> operation.\n\n          Fields not allowed:\n          - identity_provider\n          - username\n          - salt\n          - correlation_data\n          - force_password_change\n          - last_login_at\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - user_registry_url\n",
        "operationId": "user_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      },
      "delete": {
        "summary": "Deletes a user.",
        "description": "Deletes a user entry from a user registry. For user registries that are defined as <i>user managed</i>, the user record is also deleted in the backing (usually remote) user directory.",
        "operationId": "user_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/request-password-reset": {
      "post": {
        "summary": "Send reset password link",
        "description": "Send reset password link",
        "operationId": "user_requestPasswordReset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPasswordReset"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/RequestPasswordReset"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/user-registries/{org}/{user-registry}/users/{user}/reset-password": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/user-registry"
        },
        {
          "$ref": "#/components/parameters/user"
        }
      ],
      "post": {
        "summary": "Reset password",
        "description": "Reset password",
        "operationId": "user_resetPassword",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/cloud/admin/search/user": {
      "post": {
        "summary": "Search for users in the admin realm",
        "description": "Search for users in the admin realm",
        "operationId": "user_searchAdmin",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/cloud/provider/search/user": {
      "post": {
        "summary": "Search for users in the provider realm",
        "description": "Search for users in the provider realm",
        "operationId": "user_searchProvider",
        "security": [
          {
            "oauth": [
              "provider-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/cloud/admin/identity-providers": {
      "get": {
        "summary": "List Identity Providers in the admin realm",
        "description": "List Identity Providers in the admin realm",
        "operationId": "user_registry_identityProviderListAdmin",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/cloud/provider/identity-providers": {
      "get": {
        "summary": "List Identity Providers in the provider realm",
        "description": "List Identity Providers in the provider realm",
        "operationId": "user_registry_identityProviderListProvider",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/token": {
      "post": {
        "summary": "Generate a token",
        "description": "Generate a token",
        "operationId": "oauth2_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: Access Token (User Scope)"
        ]
      }
    },
    "/oauth2/redirect": {
      "get": {
        "summary": "Authorization provider redirect endpoint",
        "description": "Authorization provider redirect endpoint",
        "operationId": "oauth2_redirect_get",
        "parameters": [
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/code"
          },
          {
            "$ref": "#/components/parameters/error"
          },
          {
            "$ref": "#/components/parameters/error_description"
          },
          {
            "$ref": "#/components/parameters/error_uri"
          },
          {
            "$ref": "#/components/parameters/oauth_token"
          },
          {
            "$ref": "#/components/parameters/oauth_verifier"
          }
        ],
        "responses": {
          "302": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Oauth2 Action",
          "Resource: OAuth2 Redirect"
        ]
      },
      "post": {
        "summary": "Authorization provider redirect endpoint",
        "description": "Authorization provider redirect endpoint",
        "operationId": "oauth2_redirect_post",
        "parameters": [
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/code"
          },
          {
            "$ref": "#/components/parameters/error"
          },
          {
            "$ref": "#/components/parameters/error_description"
          },
          {
            "$ref": "#/components/parameters/error_uri"
          },
          {
            "$ref": "#/components/parameters/oauth_token"
          },
          {
            "$ref": "#/components/parameters/oauth_verifier"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OauthRedirect"
              }
            }
          }
        },
        "responses": {
          "302": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Oauth2 Action",
          "Resource: OAuth2 Redirect"
        ]
      }
    },
    "/oauth2/authorize": {
      "get": {
        "summary": "APIC authorization endpoint",
        "description": "APIC authorize endpoint",
        "operationId": "oauth2_authorize",
        "parameters": [
          {
            "$ref": "#/components/parameters/client_id"
          },
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/realm"
          },
          {
            "$ref": "#/components/parameters/redirect_uri"
          },
          {
            "$ref": "#/components/parameters/response_type"
          },
          {
            "$ref": "#/components/parameters/token"
          },
          {
            "$ref": "#/components/parameters/name"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/invitation_scope"
          }
        ],
        "responses": {
          "302": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: Oauth2 Authorization Request"
        ]
      }
    },
    "/orgs/{org}/settings/notification-style": {
      "description": "Notification Style object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the Notification Style object",
        "description": "Get the Notification Style object",
        "operationId": "notification_style_singletonGetOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Org Settings",
          "Resource: Notification Style (Org Scope)"
        ]
      },
      "put": {
        "summary": "Update the Notification Style object",
        "description": "Update the Notification Style object\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "notification_style_singletonUpdateOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationStyle"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationStyle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Org Settings",
          "Resource: Notification Style (Org Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-style": {
      "description": "Notification Style object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the Notification Style object",
        "description": "Get the Notification Style object",
        "operationId": "notification_style_singletonGetCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Style (Catalog Scope)"
        ]
      },
      "put": {
        "summary": "Update the Notification Style object",
        "description": "Update the Notification Style object\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "notification_style_singletonUpdateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationStyle"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationStyle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Style (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-style/consumer": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Notification Styles get operations",
        "description": "Notification Styles get operations",
        "operationId": "notification_style_singletonGetConsumerOrgCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Style (Catalog Scope)"
        ]
      },
      "put": {
        "summary": "Notification Styles update operations",
        "description": "Notification Styles update operations",
        "operationId": "notification_style_singletonUpdateConsumerOrgCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationStyle"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationStyle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStyle"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Style (Catalog Scope)"
        ]
      }
    },
    "/cloud/api-keys": {
      "description": "The collection of API Key operations",
      "post": {
        "summary": "Create a API Key object",
        "description": "Create a API Key object\n          \n          Required fields:\n          - client_type\n          - description\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "api_key_create",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKey"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/APIKey"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: API Key"
        ]
      },
      "get": {
        "summary": "List the API Key objects",
        "description": "List the API Key objects",
        "operationId": "api_key_list",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: API Key"
        ]
      }
    },
    "/cloud/api-keys/{api-key}": {
      "description": "API Key object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/api-key"
        }
      ],
      "get": {
        "summary": "Get the API Key object by name or id",
        "description": "Get the API Key object by name or id",
        "operationId": "api_key_get",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: API Key"
        ]
      },
      "delete": {
        "summary": "Delete the API Key object by name or id",
        "description": "Delete the API Key object by name or id",
        "operationId": "api_key_del",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: API Key"
        ]
      }
    },
    "/orgs/{org}/settings": {
      "description": "Organization Setting object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Returns provider organization settings.",
        "description": "Returns the settings for a provider organization.",
        "operationId": "org_setting_singletonGet",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OrgSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Organization Setting"
        ]
      },
      "put": {
        "summary": "Updates provider organization settings.",
        "description": "Updates the settings for a provider organization.\n\n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "org_setting_singletonUpdate",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrgSetting"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/OrgSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OrgSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Organization Setting"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates": {
      "description": "Notification Template operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Lists provider notification templates.",
        "description": "Returns the list of all notification templates for a provider organization.",
        "operationId": "notification_template_listAllOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (All Subcollections)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/provider": {
      "description": "The collection of Notification Template operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Lists provider notification templates.",
        "description": "Returns the list of all provider notification templates set at the provider organization level.",
        "operationId": "notification_template_listProviderSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Provider Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/provider/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Returns a provider notification template.",
        "description": "Returns a provider notification template, set at the provider organization level.",
        "operationId": "notification_template_getProviderSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Provider Subcollection)"
        ]
      },
      "patch": {
        "summary": "Updates a provider notification template.",
        "description": "Updates a provider notification template set at the provider organization level.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateProviderSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Provider Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/provider/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listProviderSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Provider Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/provider/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getProviderSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Provider Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateProviderSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Provider Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/catalog": {
      "description": "The collection of Notification Template operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Lists catalog notification templates.",
        "description": "Returns the list of all catalog notification templates set at the provider organization level.",
        "operationId": "notification_template_listCatalogSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Catalog Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/catalog/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Returns a catalog notification template.",
        "description": "Returns a catalog notification template, set at the provider organization level.",
        "operationId": "notification_template_getCatalogSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Catalog Subcollection)"
        ]
      },
      "patch": {
        "summary": "Updates a catalog notification template.",
        "description": "Updates a catalog notification template set at the provider organization level.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateCatalogSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Catalog Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/catalog/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listCatalogSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Catalog Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/catalog/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getCatalogSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Catalog Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateCatalogSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Catalog Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/space": {
      "description": "The collection of Notification Template operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Lists space notification templates.",
        "description": "Returns the list of all space notification templates set at the provider organization level.",
        "operationId": "notification_template_listSpaceSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Space Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/space/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Returns a space notification template.",
        "description": "Returns a space notification template, set at the provider organization level.",
        "operationId": "notification_template_getSpaceSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Space Subcollection)"
        ]
      },
      "patch": {
        "summary": "Updates a space notification template.",
        "description": "Updates a space notification template set at the provider organization level.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateSpaceSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Space Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/space/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listSpaceSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Space Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/space/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getSpaceSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Space Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateSpaceSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Space Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/consumer": {
      "description": "The collection of Notification Template operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Lists consumer notification templates.",
        "description": "Returns the list of all consumer notification templates set at the provider organization level.",
        "operationId": "notification_template_listConsumerSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/consumer/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Returns a consumer notification template.",
        "description": "Returns a consumer notification template, set at the provider organization level.",
        "operationId": "notification_template_getConsumerSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Consumer Subcollection)"
        ]
      },
      "patch": {
        "summary": "Updates a consumer notification template.",
        "description": "Updates a consumer notification template set at the provider organization level.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateConsumerSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/consumer/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listConsumerSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/orgs/{org}/settings/notification-templates/consumer/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getConsumerSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Consumer Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateConsumerSubcollectionOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Settings",
          "Resource: Notification Template (Org Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/orgs/{org}": {
      "description": "Organization object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Returns a provider organization.",
        "description": "Returns a provider organization.",
        "operationId": "org_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      },
      "patch": {
        "summary": "Updates a provider organization.",
        "description": "Updates a provider organization.\n\n          Fields not allowed:\n          - name\n          - org_type\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "org_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Org"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Org"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      },
      "delete": {
        "summary": "Deletes a provider organization.",
        "description": "Deletes a provider organization.",
        "operationId": "org_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      }
    },
    "/orgs/{org}/transfer-owner": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Transfer owner to an associate",
        "description": "Transfer owner to an associate",
        "operationId": "org_transferOwner",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cascade"
          },
          {
            "$ref": "#/components/parameters/delete_old_owner"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      }
    },
    "/orgs/{org}/search/user": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Search provider users from an organization.",
        "description": "Search provider users from an organization.",
        "operationId": "user_searchProviderOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      }
    },
    "/orgs/{org}/associates": {
      "description": "The collection of Associate operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Lists associates.",
        "description": "Returns a list of associates of the given provider org.",
        "operationId": "associate_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Associate (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/associates/{associate}": {
      "description": "Associate object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/associate"
        }
      ],
      "get": {
        "summary": "Returns an associate.",
        "description": "Returns an associate of the given provider org.",
        "operationId": "associate_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Associate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Associate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Associate (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations": {
      "description": "The collection of Member Invitation operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a provider organization member invitation.",
        "description": "Creates a provider organization member invitation.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "member_invitation_createOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      },
      "get": {
        "summary": "Lists provider organization member invitations.",
        "description": "Returns the list of member invitations for a provider organization.",
        "operationId": "member_invitation_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Clears provider organization member invitations.",
        "description": "Removes all member invitations for a provider organization.",
        "operationId": "member_invitation_clearOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations/{member-invitation}": {
      "description": "Member Invitation object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "get": {
        "summary": "Returns a provider organization member invitation.",
        "description": "Returns a provider organization member invitation.",
        "operationId": "member_invitation_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a provider organization member invitation.",
        "description": "Updates a member invitation to a provider organization.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "member_invitation_updateOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a provider organization member invitation.",
        "description": "Deletes a provider organization member invitation.",
        "operationId": "member_invitation_delOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations/{member-invitation}/regenerate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Regenerate the Member Invitation",
        "description": "Regenerate the Member Invitation",
        "operationId": "member_invitation_regenerateOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations/{member-invitation}/register": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Register using the Member Invitation",
        "description": "Register using the Member Invitation",
        "operationId": "member_invitation_registerOrgScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationRegister"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations/{member-invitation}/accept": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Accept using the Member Invitation",
        "description": "Accept using the Member Invitation",
        "operationId": "member_invitation_acceptOrgScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationAccept"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationAccept"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/members": {
      "description": "The collection of Member operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a provider organization member.",
        "description": "Adds a member to a provider organization.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n          - user_registry_url\n",
        "operationId": "member_createOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      },
      "get": {
        "summary": "Lists provider organization members.",
        "description": "Returns the list of members of a provider organization.",
        "operationId": "member_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Clears provider organization members.",
        "description": "Removes all members from a provider organization.",
        "operationId": "member_clearOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/members/{member}": {
      "description": "Member object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member"
        }
      ],
      "get": {
        "summary": "Returns a provider organization member.",
        "description": "Returns a member of a provider organization.",
        "operationId": "member_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a provider organization member.",
        "description": "Updates a member of a provider organization.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n          - user_registry_url\n",
        "operationId": "member_updateOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a provider organization member.",
        "description": "Removes a member from a provider organization.",
        "operationId": "member_delOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cascade"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      }
    },
    "/cloud/permissions": {
      "description": "Permission operations across all collections",
      "get": {
        "summary": "Lists cloud-level permissions.",
        "description": "Returns the overall list of permissions configured at the cloud level.",
        "operationId": "permission_listAll",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (All Subcollections)"
        ]
      }
    },
    "/cloud/permissions/org": {
      "description": "The collection of Permission operations",
      "get": {
        "summary": "Lists cloud-level oorganization permissions.",
        "description": "Returns the list of organization permissions defined at the cloud level.",
        "operationId": "permission_listOrgSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Org Subcollection)"
        ]
      }
    },
    "/cloud/permissions/org/{permission}": {
      "description": "Permission object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/permission"
        }
      ],
      "get": {
        "summary": "Returns an organization permission.",
        "description": "Returns an organization permissions instance defined at the cloud level.",
        "operationId": "permission_getOrgSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Org Subcollection)"
        ]
      }
    },
    "/cloud/permissions/cloud": {
      "description": "The collection of Permission operations",
      "get": {
        "summary": "Lists cloud-level cloud permissions.",
        "description": "Returns the list of cloud permissions defined at the cloud level.",
        "operationId": "permission_listCloudSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Cloud Subcollection)"
        ]
      }
    },
    "/cloud/permissions/cloud/{permission}": {
      "description": "Permission object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/permission"
        }
      ],
      "get": {
        "summary": "Returns a cloud permission.",
        "description": "Returns a cloud permissions instance defined at the cloud level.",
        "operationId": "permission_getCloudSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Cloud Subcollection)"
        ]
      }
    },
    "/cloud/permissions/provider": {
      "description": "The collection of Permission operations",
      "get": {
        "summary": "Lists cloud-level provider permissions.",
        "description": "Returns the list of provider permissions defined at the cloud level.",
        "operationId": "permission_listProviderSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Provider Subcollection)"
        ]
      }
    },
    "/cloud/permissions/provider/{permission}": {
      "description": "Permission object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/permission"
        }
      ],
      "get": {
        "summary": "Returns a provider permission.",
        "description": "Returns a provider permissions instance defined at the cloud level.",
        "operationId": "permission_getProviderSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Provider Subcollection)"
        ]
      }
    },
    "/cloud/permissions/consumer": {
      "description": "The collection of Permission operations",
      "get": {
        "summary": "Lists cloud-level consumer permissions.",
        "description": "Returns the list of consumer permissions defined at the cloud level.",
        "operationId": "permission_listConsumerSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Consumer Subcollection)"
        ]
      }
    },
    "/cloud/permissions/consumer/{permission}": {
      "description": "Permission object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/permission"
        }
      ],
      "get": {
        "summary": "Returns a consumer permission.",
        "description": "Returns a consumer permissions instance defined at the cloud level.",
        "operationId": "permission_getConsumerSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Consumer Subcollection)"
        ]
      }
    },
    "/cloud/permissions/deployment": {
      "description": "The collection of Permission operations",
      "get": {
        "summary": "Lists cloud-level deployment permissions.",
        "description": "Returns the list of deployment permissions defined at the cloud level.",
        "operationId": "permission_listDeploymentSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Deployment Subcollection)"
        ]
      }
    },
    "/cloud/permissions/deployment/{permission}": {
      "description": "Permission object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/permission"
        }
      ],
      "get": {
        "summary": "Returns a deployment permission.",
        "description": "Returns a deployment permissions instance defined at the cloud level.",
        "operationId": "permission_getDeploymentSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Deployment Subcollection)"
        ]
      }
    },
    "/orgs/{org}/roles": {
      "description": "The collection of Role operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a provider organization role.",
        "description": "Adds a role to a provider organization.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "role_createOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      },
      "get": {
        "summary": "Lists provider organization roles.",
        "description": "Returns the list of roles for a provider organization.",
        "operationId": "role_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Clears provider organization roles.",
        "description": "Removes all roles from a provider organization.",
        "operationId": "role_clearOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/roles/{role}": {
      "description": "Role object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/role"
        }
      ],
      "get": {
        "summary": "Returns a provider organization role.",
        "description": "Returns a role from a provider organization.",
        "operationId": "role_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a provider organization role.",
        "description": "Updates a role in a provider organization.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "role_updateOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a provider organization role.",
        "description": "Removes a role from a provider organization.",
        "operationId": "role_delOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/gateway-services": {
      "description": "The collection of Gateway Service operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Lists gateway services.",
        "description": "Returns the list of gateway services.",
        "operationId": "gateway_service_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayServiceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayServiceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Service (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/gateway-services/{gateway-service}": {
      "description": "Gateway Service object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/gateway-service"
        }
      ],
      "get": {
        "summary": "Returns a gateway service.",
        "description": "Returns the given gateway service.",
        "operationId": "gateway_service_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Gateway Service (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/portal-services": {
      "description": "The collection of Portal Service operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Lists portal services.",
        "description": "Returns the list of portal services belonging to a provider orgsnization.",
        "operationId": "portal_service_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalServiceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PortalServiceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Portal Service (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/portal-services/{portal-service}": {
      "description": "Portal Service object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/portal-service"
        }
      ],
      "get": {
        "summary": "Returns a portal service.",
        "description": "Returns a portal service belonging to a provider orgsnization.",
        "operationId": "portal_service_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PortalService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Portal Service (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/oauth-providers": {
      "description": "The collection of Oauth Provider operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates an OAuth provider.",
        "description": "Creates an OAuth provider resource.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "oauth_provider_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OauthProvider"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/OauthProvider"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Oauth Provider"
        ]
      },
      "get": {
        "summary": "Lists OAuth providers.",
        "description": "Returns the list of all OAuth provider resources.",
        "operationId": "oauth_provider_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProviderList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProviderList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Oauth Provider"
        ]
      },
      "delete": {
        "summary": "Clears OAuth providers.",
        "description": "Deletes all OAuth provider resources.",
        "operationId": "oauth_provider_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Oauth Provider"
        ]
      }
    },
    "/orgs/{org}/oauth-providers/{oauth-provider}": {
      "description": "Oauth Provider object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/oauth-provider"
        }
      ],
      "get": {
        "summary": "Returns an OAuth provider.",
        "description": "Returns an OAuth provider resource.",
        "operationId": "oauth_provider_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Oauth Provider"
        ]
      },
      "patch": {
        "summary": "Creates an OAuth provider.",
        "description": "Updates an OAuth provider resource.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "oauth_provider_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OauthProvider"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/OauthProvider"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Oauth Provider"
        ]
      },
      "delete": {
        "summary": "Deletes an OAuth provider.",
        "description": "Deletes an OAuth provider resource.",
        "operationId": "oauth_provider_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Oauth Provider"
        ]
      }
    },
    "/orgs/{org}/billings": {
      "description": "The collection of Billing operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Create a Billing object",
        "description": "Create a Billing object\n          \n          Required fields:\n          - integration_url\n          \n          Fields not allowed:\n          - job_queue_status\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "billing_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billing"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Billing"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Billing"
        ]
      },
      "get": {
        "summary": "List the Billing objects",
        "description": "List the Billing objects",
        "operationId": "billing_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/BillingList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Billing"
        ]
      },
      "delete": {
        "summary": "Clear the Billing objects",
        "description": "Clear the Billing objects",
        "operationId": "billing_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Billing"
        ]
      }
    },
    "/orgs/{org}/billings/{billing}": {
      "description": "Billing object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/billing"
        }
      ],
      "get": {
        "summary": "Get the Billing object by name or id",
        "description": "Get the Billing object by name or id",
        "operationId": "billing_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Billing"
        ]
      },
      "patch": {
        "summary": "Update the Billing object by name or id",
        "description": "Update the Billing object by name or id\n          \n          Fields not allowed to be null:\n          - integration_url\n          \n          Fields not allowed:\n          - job_queue_status\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "billing_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Billing"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Billing"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Billing"
        ]
      },
      "delete": {
        "summary": "Delete the Billing object by name or id",
        "description": "Delete the Billing object by name or id",
        "operationId": "billing_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Billing"
        ]
      }
    },
    "/orgs/{org}/billings/{billing}/jobs": {
      "description": "The collection of Job operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/billing"
        }
      ],
      "get": {
        "summary": "List the Job objects",
        "description": "List the Job objects",
        "operationId": "job_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/JobList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Job"
        ]
      },
      "delete": {
        "summary": "Clear the Job objects",
        "description": "Clear the Job objects",
        "operationId": "job_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Job"
        ]
      }
    },
    "/orgs/{org}/billings/{billing}/jobs/{job}": {
      "description": "Job object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/billing"
        },
        {
          "$ref": "#/components/parameters/job"
        }
      ],
      "get": {
        "summary": "Get the Job object by name or id",
        "description": "Get the Job object by name or id",
        "operationId": "job_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Job"
        ]
      },
      "delete": {
        "summary": "Delete the Job object by name or id",
        "description": "Delete the Job object by name or id",
        "operationId": "job_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Job"
        ]
      }
    },
    "/orgs/{org}/billings/{billing}/jobs/{job}/retry": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/billing"
        },
        {
          "$ref": "#/components/parameters/job"
        }
      ],
      "post": {
        "summary": "Re-attempt blocked or failed job",
        "description": "Re-attempt blocked or failed job",
        "operationId": "job_retry",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Job"
        ]
      }
    },
    "/orgs/{org}/tls-client-profiles": {
      "description": "TLS Client Profile operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a TLS client profile.",
        "description": "Creates a TLS client profile.\n\n          Fields not allowed:\n          - owned\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "tls_client_profile_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TLSClientProfile"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TLSClientProfile"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "get": {
        "summary": "Lists TLS client profiles.",
        "description": "Returns the list of all TLS client profiles belonging to a provider organization.",
        "operationId": "tls_client_profile_listAll",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfileList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfileList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "delete": {
        "summary": "Clears TLS client profiles.",
        "description": "Removes all TLS client profiles belonging to a provider organization.",
        "operationId": "tls_client_profile_clearAll",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          },
          {
            "$ref": "#/components/parameters/cascade"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      }
    },
    "/orgs/{org}/tls-client-profiles/{tls-client-profile-name}": {
      "description": "The collection of TLS Client Profile operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/tls-client-profile-name"
        }
      ],
      "get": {
        "summary": "Lists TLS client profile versions.",
        "description": "Returns all versions of the named TLS client profile belonging to a provider organization.",
        "operationId": "tls_client_profile_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfileList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfileList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "delete": {
        "summary": "Clears TLS client profile versions.",
        "description": "Removes all versions of the named TLS client profile belonging to a provider organization.",
        "operationId": "tls_client_profile_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      }
    },
    "/orgs/{org}/tls-client-profiles/{tls-client-profile-id}": {
      "description": "TLS Client Profile object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/tls-client-profile-id"
        }
      ],
      "get": {
        "summary": "Returns a TLS client profile.",
        "description": "Returns a TLS client profile belonging to a provider organization.",
        "operationId": "tls_client_profile_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "patch": {
        "summary": "Updates a TLS client profile.",
        "description": "Updates a TLS client profile.\n\n          Fields not allowed:\n          - owned\n          \n          Fields not allowed to be null:\n          - ciphers\n          - protocols\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "tls_client_profile_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TLSClientProfile"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TLSClientProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "delete": {
        "summary": "Deletes a TLS client profile.",
        "description": "Deletes a TLS client profile belonging to a provider organization.",
        "operationId": "tls_client_profile_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      }
    },
    "/orgs/{org}/tls-client-profiles/{tls-client-profile-name}/{tls-client-profile-version}": {
      "description": "TLS Client Profile object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/tls-client-profile-name"
        },
        {
          "$ref": "#/components/parameters/tls-client-profile-version"
        }
      ],
      "get": {
        "summary": "Returns a TLS client profile.",
        "description": "Returns a TLS client profile belonging to a provider organization.",
        "operationId": "tls_client_profile_getByNameVersion",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "patch": {
        "summary": "Updates a TLS client profile.",
        "description": "Updates a TLS client profile.\n\n          Fields not allowed:\n          - owned\n          \n          Fields not allowed to be null:\n          - ciphers\n          - protocols\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "tls_client_profile_updateByNameVersion",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TLSClientProfile"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TLSClientProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      },
      "delete": {
        "summary": "Delete a TLS Client Profile",
        "description": "Delete a TLS Client Profile",
        "operationId": "tls_client_profile_delByNameVersion",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: TLS Client Profile by Id"
        ]
      }
    },
    "/orgs/{org}/keystores": {
      "description": "The collection of Keystore operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a keystore.",
        "description": "Creates a keystore belonging to a provider organization.\n\n          Required fields:\n          - keystore\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "keystore_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Keystore"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Keystore"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Keystore"
        ]
      },
      "get": {
        "summary": "Lists keystores.",
        "description": "Lists all keystores belonging to a provider organization.",
        "operationId": "keystore_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeystoreList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/KeystoreList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Keystore"
        ]
      },
      "delete": {
        "summary": "Clears keystores.",
        "description": "Removes all keystores belonging to a provider organization.",
        "operationId": "keystore_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Keystore"
        ]
      }
    },
    "/orgs/{org}/keystores/{keystore}": {
      "description": "Keystore object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/keystore"
        }
      ],
      "get": {
        "summary": "Returns a keystore.",
        "description": "Returns a keystores belonging to a provider organization.",
        "operationId": "keystore_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Keystore"
        ]
      },
      "patch": {
        "summary": "Updates a keystore.",
        "description": "Updates a keystore belonging to a provider organization.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "keystore_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Keystore"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Keystore"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Keystore"
        ]
      },
      "delete": {
        "summary": "Deletes a keystore.",
        "description": "Deletes a keystore belonging to a provider organization.",
        "operationId": "keystore_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Keystore"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Keystore"
        ]
      }
    },
    "/orgs/{org}/truststores": {
      "description": "The collection of Truststore operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a trust store.",
        "description": "Creates a trust store.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "truststore_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Truststore"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Truststore"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Truststore"
        ]
      },
      "get": {
        "summary": "Lists trust stores.",
        "description": "Returns the list of all trust stores belonging to a provider organization.",
        "operationId": "truststore_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruststoreList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TruststoreList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Truststore"
        ]
      },
      "delete": {
        "summary": "Clears trust stores.",
        "description": "Removes all trust stores belonging to a provider organization.",
        "operationId": "truststore_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Truststore"
        ]
      }
    },
    "/orgs/{org}/truststores/{truststore}": {
      "description": "Truststore object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/truststore"
        }
      ],
      "get": {
        "summary": "Returns a trust store.",
        "description": "Returns a trust store.",
        "operationId": "truststore_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Truststore"
        ]
      },
      "patch": {
        "summary": "Updates a trust store.",
        "description": "Updates a trust store.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "truststore_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Truststore"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Truststore"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Truststore"
        ]
      },
      "delete": {
        "summary": "Deletes a trust store.",
        "description": "Deletes a trust store.",
        "operationId": "truststore_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Truststore"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Truststore"
        ]
      }
    },
    "/orgs/{org}/truststores/{truststore}/entries": {
      "description": "The collection of Entry operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/truststore"
        }
      ],
      "post": {
        "summary": "Creates a trust store entry.",
        "description": "Adds an entry to a trust store.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "entry_createTruststoreScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Entry"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Entry"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Entry (Truststore Scope)"
        ]
      },
      "get": {
        "summary": "Lists trust store entries.",
        "description": "Returns the list of entries from a trust store.",
        "operationId": "entry_listTruststoreScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntryList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/EntryList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Entry (Truststore Scope)"
        ]
      },
      "delete": {
        "summary": "Clears trust store entries.",
        "description": "Deletes all entries from a trust store.",
        "operationId": "entry_clearTruststoreScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Entry (Truststore Scope)"
        ]
      }
    },
    "/orgs/{org}/truststores/{truststore}/entries/{entry}": {
      "description": "Entry object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/truststore"
        },
        {
          "$ref": "#/components/parameters/entry"
        }
      ],
      "get": {
        "summary": "Returns a trust store entry.",
        "description": "Returns the given entry from a trust store.",
        "operationId": "entry_getTruststoreScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Entry (Truststore Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a trust store entry.",
        "description": "Updates the given entry in a trust store.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "entry_updateTruststoreScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Entry"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Entry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Entry (Truststore Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a trust store entry.",
        "description": "Deletes the given entry from a trust store.",
        "operationId": "entry_delTruststoreScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Entry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Entry (Truststore Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings": {
      "description": "Catalog Setting object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Returns catalog settings.",
        "description": "Returns the settings for a catalog.",
        "operationId": "catalog_setting_singletonGet",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Catalog Setting"
        ]
      },
      "put": {
        "summary": "Updates catalog settings.",
        "description": "Updates the settings for a catalog.\n\n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "catalog_setting_singletonUpdate",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/force"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogSetting"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/CatalogSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Catalog Setting"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/allowed-product-publish-validations": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "List of allowed product publish validations",
        "description": "List of allowed product publish validations",
        "operationId": "catalog_setting_allowedProductPublishValidation",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowedProductPublishValidation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AllowedProductPublishValidation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Catalog Setting"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services": {
      "description": "The collection of Configured Gateway Service operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Creates a configured gateway service.",
        "description": "Adds the gateway service to the list of configured gateway services for a catalog.\n\n          Required fields:\n          - gateway_service_url\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - availability_zone_url\n",
        "operationId": "configured_gateway_service_createCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredGatewayService"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredGatewayService"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayService"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Gateway Service (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Lists configured gateway services.",
        "description": "Returns the list of configured gateway services for a catalog.",
        "operationId": "configured_gateway_service_listCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayServiceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayServiceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Gateway Service (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears configured gateway services.",
        "description": "Removes all gateway services from the list of configured gateway services for a catalog.",
        "operationId": "configured_gateway_service_clearCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Gateway Service (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}": {
      "description": "Configured Gateway Service object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "get": {
        "summary": "Returns a configured gateway service.",
        "description": "Returns the given gateway service from the list of configured gateway services for a catalog.",
        "operationId": "configured_gateway_service_getCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Gateway Service (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a configured gateway service.",
        "description": "Removes the given gateway service from the list of configured gateway services for a catalog.",
        "operationId": "configured_gateway_service_delCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Gateway Service (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/download-logs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "get": {
        "summary": "Get the Configured Gateway Service download logs",
        "description": "Get the Configured Gateway Service download logs",
        "operationId": "configured_gateway_service_downloadLogsCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Gateway Service (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services": {
      "description": "The collection of Configured Gateway Service operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Creates a configured gateway service.",
        "description": "Adds the gateway service to the list of configured gateway services for a space.\n\n          Required fields:\n          - gateway_service_url\n          \n          Fields not allowed:\n          - space_urls\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - availability_zone_url\n",
        "operationId": "configured_gateway_service_createSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredGatewayService"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredGatewayService"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayService"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured Gateway Service (Space Scope)"
        ]
      },
      "get": {
        "summary": "Lists configured gateway services.",
        "description": "Returns the list of configured gateway services for a space.",
        "operationId": "configured_gateway_service_listSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayServiceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayServiceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured Gateway Service (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears configured gateway services.",
        "description": "Removes all gateway services from the list of configured gateway services for a space.",
        "operationId": "configured_gateway_service_clearSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured Gateway Service (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}": {
      "description": "Configured Gateway Service object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "get": {
        "summary": "Returns a configured gateway service.",
        "description": "Returns the given gateway service from the list of configured gateway services for a space.",
        "operationId": "configured_gateway_service_getSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured Gateway Service (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a configured gateway service.",
        "description": "Removes the given gateway service from the list of configured gateway services for a space.",
        "operationId": "configured_gateway_service_delSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredGatewayService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured Gateway Service (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/download-logs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "get": {
        "summary": "Get the Configured Gateway Service download logs",
        "description": "Get the Configured Gateway Service download logs",
        "operationId": "configured_gateway_service_downloadLogsSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured Gateway Service (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-catalog-user-registries": {
      "description": "The collection of Configured Catalog User Registry operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Creates a catalog user registry.",
        "description": "Adds a user registry to the list of catalog user registries for a catalog.\n\n          Required fields:\n          - user_registry_url\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - user_registry_url\n",
        "operationId": "configured_catalog_user_registry_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredCatalogUserRegistry"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredCatalogUserRegistry"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredCatalogUserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredCatalogUserRegistry"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Catalog User Registry"
        ]
      },
      "get": {
        "summary": "Lists catalog user registries.",
        "description": "Returns the list of configured catalog user registries for a catalog.",
        "operationId": "configured_catalog_user_registry_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredCatalogUserRegistryList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredCatalogUserRegistryList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Catalog User Registry"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-catalog-user-registries/{configured-catalog-user-registry}": {
      "description": "Configured Catalog User Registry object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-catalog-user-registry"
        }
      ],
      "get": {
        "summary": "Returns a catalog user registry.",
        "description": "Returns the given configured catalog user registry for a catalog.",
        "operationId": "configured_catalog_user_registry_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredCatalogUserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredCatalogUserRegistry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Catalog User Registry"
        ]
      },
      "delete": {
        "summary": "Deletes a catalog user registry.",
        "description": "Removes a user registry from the list of catalog user registries for a catalog.",
        "operationId": "configured_catalog_user_registry_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredCatalogUserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredCatalogUserRegistry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Catalog User Registry"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-catalog-user-registries/{configured-catalog-user-registry}/search": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-catalog-user-registry"
        }
      ],
      "post": {
        "summary": "Search for users in the catalog user registry",
        "description": "Search for users in the catalog user registry",
        "operationId": "configured_catalog_user_registry_search",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-api-user-registries": {
      "description": "The collection of Configured API User Registry operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Creates an API user registry.",
        "description": "Adds a user registry to the list of configured API user registries for a catalog.\n\n          Required fields:\n          - user_registry_url\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - user_registry_url\n",
        "operationId": "configured_api_user_registry_createCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured API User Registry (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Lists API user registries.",
        "description": "Returns the list of configured API user registries for a catalog.",
        "operationId": "configured_api_user_registry_listCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistryList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistryList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured API User Registry (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears API user registries from a catalog.",
        "description": "Removes all configured API user registries from a catalog.",
        "operationId": "configured_api_user_registry_clearCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured API User Registry (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-api-user-registries/{configured-api-user-registry}": {
      "description": "Configured API User Registry object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-api-user-registry"
        }
      ],
      "get": {
        "summary": "Returnns an API user registry.",
        "description": "Returns the given configured API user registry for a catalog.",
        "operationId": "configured_api_user_registry_getCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured API User Registry (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes an API user registry.",
        "description": "Removes a user registry from the list of configured API user registries for a catalog.",
        "operationId": "configured_api_user_registry_delCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured API User Registry (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-api-user-registries": {
      "description": "The collection of Configured API User Registry operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Creates an API user registry.",
        "description": "Adds a user registry to the list of configured API user registries for a space.\n\n          Required fields:\n          - user_registry_url\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - user_registry_url\n",
        "operationId": "configured_api_user_registry_createSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured API User Registry (Space Scope)"
        ]
      },
      "get": {
        "summary": "Lists API user registries.",
        "description": "Returns the list of configured API user registries for a space.",
        "operationId": "configured_api_user_registry_listSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistryList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistryList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured API User Registry (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears API user registries from a space.",
        "description": "Removes all configured API user registries from a space.",
        "operationId": "configured_api_user_registry_clearSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured API User Registry (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-api-user-registries/{configured-api-user-registry}": {
      "description": "Configured API User Registry object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-api-user-registry"
        }
      ],
      "get": {
        "summary": "Returns an API user registry.",
        "description": "Returns the given configured API user registry for a space.",
        "operationId": "configured_api_user_registry_getSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured API User Registry (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes an API user registry.",
        "description": "Removes a user registry from the list of configured API user registries for a space.",
        "operationId": "configured_api_user_registry_delSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured API User Registry (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-tls-client-profiles": {
      "description": "Configured TLS Client Profile operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Creates a configured TLS client profile.",
        "description": "Adds a TLS client profile to the list of configured TLS client profiles for a catalog.\n\n          Required fields:\n          - tls_client_profile_url\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "configured_tls_client_profile_createCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured TLS Client Profile by Id (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Lists TLS client profiles.",
        "description": "Returns the list of configured TLS client profiles for a catalog.",
        "operationId": "configured_tls_client_profile_listAllCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfileList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfileList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured TLS Client Profile by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears TLS client profiles.",
        "description": "Removes all TLS client profiles from the list of configured TLS client profiles for a catalog.",
        "operationId": "configured_tls_client_profile_clearAllCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured TLS Client Profile by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-tls-client-profiles/{configured-tls-client-profile-name}": {
      "description": "The collection of Configured TLS Client Profile operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-tls-client-profile-name"
        }
      ],
      "get": {
        "summary": "Lists TLS client profiles.",
        "description": "Returns all versions of the named TLS client profile from the list of configured TLS client profiles for a catalog.",
        "operationId": "configured_tls_client_profile_listCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfileList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfileList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured TLS Client Profile by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears TLS client profiles.",
        "description": "Removes all versions of the named TLS client profile from the list of configured TLS client profiles for a catalog.",
        "operationId": "configured_tls_client_profile_clearCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured TLS Client Profile by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-tls-client-profiles/{configured-tls-client-profile-id}": {
      "description": "Configured TLS Client Profile object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-tls-client-profile-id"
        }
      ],
      "get": {
        "summary": "Returns a TLS client profile.",
        "description": "Returns the given TLS client profile from the list of configured TLS client profiles for a catalog.",
        "operationId": "configured_tls_client_profile_getCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured TLS Client Profile by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a TLS client profile.",
        "description": "Removes the given TLS client profile from the list of configured TLS client profiles for a catalog.",
        "operationId": "configured_tls_client_profile_delCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured TLS Client Profile by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-tls-client-profiles/{configured-tls-client-profile-name}/{configured-tls-client-profile-version}": {
      "description": "Configured TLS Client Profile object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-tls-client-profile-name"
        },
        {
          "$ref": "#/components/parameters/configured-tls-client-profile-version"
        }
      ],
      "get": {
        "summary": "Returns a TLS client profile.",
        "description": "Returns the given TLS client profile from the list of configured TLS client profiles for a catalog.",
        "operationId": "configured_tls_client_profile_getByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured TLS Client Profile by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Delete a Configured TLS Client Profile",
        "description": "Delete a Configured TLS Client Profile",
        "operationId": "configured_tls_client_profile_delByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured TLS Client Profile by Id (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-tls-client-profiles": {
      "description": "Configured TLS Client Profile operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Creates a configured TLS client profile.",
        "description": "Adds a TLS client profile to the list of configured TLS client profiles for a space.\n\n          Required fields:\n          - tls_client_profile_url\n          \n          Fields not allowed:\n          - space_urls\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "configured_tls_client_profile_createSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured TLS Client Profile by Id (Space Scope)"
        ]
      },
      "get": {
        "summary": "Lists TLS client profiles.",
        "description": "Returns the list of configured TLS client profiles for a space.",
        "operationId": "configured_tls_client_profile_listAllSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfileList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfileList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured TLS Client Profile by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears TLS client profiles.",
        "description": "Removes all TLS client profiles from the list of configured TLS client profiles for a space.",
        "operationId": "configured_tls_client_profile_clearAllSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured TLS Client Profile by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-tls-client-profiles/{configured-tls-client-profile-name}": {
      "description": "The collection of Configured TLS Client Profile operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-tls-client-profile-name"
        }
      ],
      "get": {
        "summary": "Lists TLS client profiles.",
        "description": "Returns all versions of the named TLS client profile from the list of configured TLS client profiles for a space.",
        "operationId": "configured_tls_client_profile_listSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfileList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfileList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured TLS Client Profile by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears TLS client profiles.",
        "description": "Removes all versions of the named TLS client profile from the list of configured TLS client profiles for a space.",
        "operationId": "configured_tls_client_profile_clearSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured TLS Client Profile by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-tls-client-profiles/{configured-tls-client-profile-id}": {
      "description": "Configured TLS Client Profile object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-tls-client-profile-id"
        }
      ],
      "get": {
        "summary": "Returns a TLS client profile.",
        "description": "Returns the given TLS client profile from the list of configured TLS client profiles for a space.",
        "operationId": "configured_tls_client_profile_getSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured TLS Client Profile by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a TLS client profile.",
        "description": "Removes the given TLS client profile from the list of configured TLS client profiles for a space.",
        "operationId": "configured_tls_client_profile_delSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured TLS Client Profile by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-tls-client-profiles/{configured-tls-client-profile-name}/{configured-tls-client-profile-version}": {
      "description": "Configured TLS Client Profile object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-tls-client-profile-name"
        },
        {
          "$ref": "#/components/parameters/configured-tls-client-profile-version"
        }
      ],
      "get": {
        "summary": "Returns a TLS client profile.",
        "description": "Returns the given TLS client profile from the list of configured TLS client profiles for a space.",
        "operationId": "configured_tls_client_profile_getByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured TLS Client Profile by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Delete a Configured TLS Client Profile",
        "description": "Delete a Configured TLS Client Profile",
        "operationId": "configured_tls_client_profile_delByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured TLS Client Profile by Id (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-billings": {
      "description": "The collection of Configured Billing operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Create a Configured Billing object",
        "description": "Create a Configured Billing object\n          \n          Required fields:\n          - billing_url\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "configured_billing_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredBilling"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredBilling"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredBilling"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredBilling"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Billing"
        ]
      },
      "get": {
        "summary": "List the Configured Billing objects",
        "description": "List the Configured Billing objects",
        "operationId": "configured_billing_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredBillingList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredBillingList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Billing"
        ]
      },
      "delete": {
        "summary": "Clear the Configured Billing objects",
        "description": "Clear the Configured Billing objects",
        "operationId": "configured_billing_clear",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Billing"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-billings/{configured-billing}": {
      "description": "Configured Billing object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-billing"
        }
      ],
      "get": {
        "summary": "Get the Configured Billing object by name or id",
        "description": "Get the Configured Billing object by name or id",
        "operationId": "configured_billing_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredBilling"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredBilling"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Billing"
        ]
      },
      "delete": {
        "summary": "Delete the Configured Billing object by name or id",
        "description": "Delete the Configured Billing object by name or id",
        "operationId": "configured_billing_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredBilling"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredBilling"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Billing"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-oauth-providers": {
      "description": "The collection of Configured Oauth Provider operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Creates a configured OAuth provider.",
        "description": "Adds an OAuth provider to the list of configured OAuth providers for a catalog.\n\n          Required fields:\n          - oauth_provider_url\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "configured_oauth_provider_createCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredOauthProvider"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredOauthProvider"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProvider"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Oauth Provider (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Lists configured OAuth providers.",
        "description": "Returns the list of configured OAuth providers for a catalog.",
        "operationId": "configured_oauth_provider_listCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProviderList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProviderList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Oauth Provider (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears configured OAuth providers.",
        "description": "Removes all OAuth providers from the list of configured OAuth providers for a catalog.",
        "operationId": "configured_oauth_provider_clearCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Oauth Provider (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-oauth-providers/{configured-oauth-provider}": {
      "description": "Configured Oauth Provider object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-oauth-provider"
        }
      ],
      "get": {
        "summary": "Returns a configured OAuth provider.",
        "description": "Returns the given OAuth provider from the list of configured OAuth providers for a catalog.",
        "operationId": "configured_oauth_provider_getCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProvider"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Oauth Provider (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a configured OAuth provider.",
        "description": "Removes an OAuth provider from the list of configured OAuth providers for a catalog.",
        "operationId": "configured_oauth_provider_delCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProvider"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configured Oauth Provider (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-oauth-providers": {
      "description": "The collection of Configured Oauth Provider operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Creates a configured OAuth provider.",
        "description": "Adds an OAuth provider to the list of configured OAuth providers for a space.\n\n          Required fields:\n          - oauth_provider_url\n          \n          Fields not allowed:\n          - space_urls\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "configured_oauth_provider_createSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredOauthProvider"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguredOauthProvider"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProvider"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured Oauth Provider (Space Scope)"
        ]
      },
      "get": {
        "summary": "Lists configured OAuth providers.",
        "description": "Returns the list of configured OAuth providers for a space.",
        "operationId": "configured_oauth_provider_listSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProviderList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProviderList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured Oauth Provider (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clear the Configured Oauth Provider objects",
        "description": "Removes all OAuth providers from the list of configured OAuth providers for a catalog.",
        "operationId": "configured_oauth_provider_clearSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured Oauth Provider (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-oauth-providers/{configured-oauth-provider}": {
      "description": "Configured Oauth Provider object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-oauth-provider"
        }
      ],
      "get": {
        "summary": "Returns a configured OAuth provider.",
        "description": "Returns the given OAuth provider from the list of configured OAuth providers for a space.",
        "operationId": "configured_oauth_provider_getSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProvider"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured Oauth Provider (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Delete the Configured Oauth Provider object by name or id",
        "description": "Removes an OAuth provider from the list of configured OAuth providers for a space.",
        "operationId": "configured_oauth_provider_delSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProvider"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredOauthProvider"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Configured Oauth Provider (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-templates": {
      "description": "Notification Template operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists catalog notification templates.",
        "description": "Returns the list of all notification templates for a catalog.",
        "operationId": "notification_template_listAllCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (All Subcollections)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-templates/catalog": {
      "description": "The collection of Notification Template operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists catalog notification templates.",
        "description": "Returns the list of all catalog notification templates set at the catalog level.",
        "operationId": "notification_template_listCatalogSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Catalog Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-templates/catalog/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Returns a catalog notification template.",
        "description": "Returns a catalog notification template, set at the catalog level.",
        "operationId": "notification_template_getCatalogSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Catalog Subcollection)"
        ]
      },
      "patch": {
        "summary": "Updates a catalog notification template.",
        "description": "Returns the list of all catalog notification templates set at the catalog level.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateCatalogSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Catalog Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-templates/catalog/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listCatalogSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Catalog Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-templates/catalog/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getCatalogSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Catalog Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateCatalogSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Catalog Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-templates/space": {
      "description": "The collection of Notification Template operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists space notification templates.",
        "description": "Returns the list of all provider notification templates set at the provider organization level.",
        "operationId": "notification_template_listSpaceSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Space Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-templates/space/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Returns a space notification template.",
        "description": "Returns a space notification template, set at the catalog level.",
        "operationId": "notification_template_getSpaceSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Space Subcollection)"
        ]
      },
      "patch": {
        "summary": "Updates a space notification template.",
        "description": "Updates a space notification template set at the catalog level.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateSpaceSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Space Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-templates/space/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listSpaceSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Space Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-templates/space/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getSpaceSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Space Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateSpaceSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Space Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-templates/consumer": {
      "description": "The collection of Notification Template operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists consumer notification templates.",
        "description": "Returns the list of all consumer notification templates set at the catalog level.",
        "operationId": "notification_template_listConsumerSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-templates/consumer/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Returns a consumer notification template.",
        "description": "Returns a consumer notification template, set at the catalog level.",
        "operationId": "notification_template_getConsumerSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Consumer Subcollection)"
        ]
      },
      "patch": {
        "summary": "Updates a consumer notification template.",
        "description": "Updates a consumer notification template set at the catalog level.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateConsumerSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-templates/consumer/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listConsumerSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/settings/notification-templates/consumer/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getConsumerSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Consumer Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateConsumerSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Notification Template (Catalog Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/role-defaults": {
      "description": "Role Default operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists catalog role defaults.",
        "description": "Returns the list of all role defaults for a catalog.",
        "operationId": "role_default_listAllCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Role Default (Catalog Scope) (All Subcollections)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/role-defaults/consumer": {
      "description": "The collection of Role Default operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists consumer organization role defaults.",
        "description": "Returns the list of consumer organization role defaults in a catalog.",
        "operationId": "role_default_listConsumerSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Role Default (Catalog Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/role-defaults/consumer/{role-default}": {
      "description": "Role Default object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/role-default"
        }
      ],
      "get": {
        "summary": "Returns a consumer organization role default.",
        "description": "Returns a consumer organization role default for a catalog.",
        "operationId": "role_default_getConsumerSubcollectionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Role Default (Catalog Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/properties": {
      "description": "The collection of Configuration Property operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "patch": {
        "summary": "Creates a catalog property.",
        "description": "Updates the catalog properties in a catalog.",
        "operationId": "property_mapCreateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NameValuePairs"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NameValuePairs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameValuePairs"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NameValuePairs"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configuration Property (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Lists catalog properties.",
        "description": "Returns the list of catalog properties for a catalog.",
        "operationId": "property_mapListCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configuration Property (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears catalog properties.",
        "description": "Removes all catalog properties from a catalog.",
        "operationId": "property_mapClearCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configuration Property (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/properties/{property-name}": {
      "description": "Configuration Property object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/property-name"
        }
      ],
      "get": {
        "summary": "Returns a catalog property.",
        "description": "Returns a catalog property from a catalog.",
        "operationId": "property_mapGetCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configuration Property (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a catalog property.",
        "description": "Updates a catalog property in a catalog.",
        "operationId": "property_mapUpdateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configuration Property (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a catalog property.",
        "description": "Removes a catalog property from a catalog.",
        "operationId": "property_mapDelCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Property"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Settings",
          "Resource: Configuration Property (Catalog Scope)"
        ]
      }
    },
    "/orgs/{org}/catalogs": {
      "description": "The collection of Catalog operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a catalog.",
        "description": "Creates a catalog belonging to a provider org.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "catalog_create",
        "security": [
          {
            "oauth": [
              "child:create"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Catalog"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Catalog"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog"
        ]
      },
      "get": {
        "summary": "Lists catalogs.",
        "description": "Returns a list of catalogs belonging to the given provider org.",
        "operationId": "catalog_list",
        "security": [
          {
            "oauth": [
              "child:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog"
        ]
      },
      "delete": {
        "summary": "Clears the catalogs in a provider organization.",
        "description": "Removes all catalogs belonging to a provider organization.",
        "operationId": "catalog_clear",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog"
        ]
      }
    },
    "/catalogs/{org}/{catalog}": {
      "description": "Catalog object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Returns a catalog.",
        "description": "Returns a catalog. The catalog's CatalogSettings provides more information.",
        "operationId": "catalog_get",
        "security": [
          {
            "oauth": [
              "child:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog"
        ]
      },
      "patch": {
        "summary": "Modifies a catalog.",
        "description": "Modifies a catalog object. Catalog settings are subordinate to the catalog itself; see also the operation to update the settings for a catalog.\n\n          Fields not allowed:\n          - name\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "catalog_update",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Catalog"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Catalog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog"
        ]
      },
      "delete": {
        "summary": "Deletes a catalog.",
        "description": "Removes a catalog.",
        "operationId": "catalog_del",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/transfer-owner": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Transfer owner to an associate",
        "description": "Transfer owner to an associate",
        "operationId": "catalog_transferOwner",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cascade"
          },
          {
            "$ref": "#/components/parameters/delete_old_owner"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Catalog"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/email-to-owners": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Send email to owners of consumer organizations",
        "description": "Send email to owners of consumer organizations, given consumer org and consumer group urls. For consumer group, email owners of all consumer orgs in the group.",
        "operationId": "catalog_emailToOwners",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/knowledge-center/api-connect/platform-apis/catalog#email-to-owners"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailToOwners"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/EmailToOwners"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailToOwnersResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/EmailToOwnersResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/stage-draft-product": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Stage a draft product",
        "description": "Stage a draft product",
        "operationId": "catalog_stageDraftProduct",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gateway_services"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductPublish"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductPublish"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/publish-draft-product": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Publish a draft product by url reference",
        "description": "Publish a draft product by url reference",
        "operationId": "catalog_publishDraftProduct",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gateway_services"
          },
          {
            "$ref": "#/components/parameters/migrate_subscriptions"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductPublish"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductPublish"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/stage": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Stage the product",
        "description": "Stage the product",
        "operationId": "catalog_stage",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gateway_services"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductPublishMultipart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/publish": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Publish the product",
        "description": "Publish the product",
        "operationId": "catalog_publish",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gateway_services"
          },
          {
            "$ref": "#/components/parameters/migrate_subscriptions"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductPublishMultipart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/lifecycle/duplicate-apis": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "List of apis with duplicate base paths",
        "description": "List of apis with duplicate base paths",
        "operationId": "api_listDuplicates",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/scope"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog"
        ]
      }
    },
    "/orgs/{org}/catalog-invitations": {
      "description": "The collection of Catalog Invitation operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a catalog invitation.",
        "description": "Creates a catalog owner invitation.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "invitation_createCatalogScope",
        "security": [
          {
            "oauth": [
              "child:create"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog Invitation (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Lists catalog invitations.",
        "description": "Returns the list of all catalog owner invitations.",
        "operationId": "invitation_listCatalogScope",
        "security": [
          {
            "oauth": [
              "child:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog Invitation (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears catalog invitations.",
        "description": "Removes all catalog owner invitations.",
        "operationId": "invitation_clearCatalogScope",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog Invitation (Catalog Scope)"
        ]
      }
    },
    "/orgs/{org}/catalog-invitations/{invitation}": {
      "description": "Catalog Invitation object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "get": {
        "summary": "Returns a catalog invitation.",
        "description": "Returns a catalog owner invitation.",
        "operationId": "invitation_getCatalogScope",
        "security": [
          {
            "oauth": [
              "child:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog Invitation (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a catalog invitation.",
        "description": "Updates a catalog owner invitation.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "invitation_updateCatalogScope",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog Invitation (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a catalog invitation.",
        "description": "Deletes a catalog owner invitation.",
        "operationId": "invitation_delCatalogScope",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog Invitation (Catalog Scope)"
        ]
      }
    },
    "/orgs/{org}/catalog-invitations/{invitation}/regenerate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "post": {
        "summary": "Regenerate the Catalog Invitation",
        "description": "Regenerate the Catalog Invitation",
        "operationId": "invitation_regenerateCatalogScope",
        "security": [
          {
            "oauth": [
              "child:create"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog Invitation (Catalog Scope)"
        ]
      }
    },
    "/orgs/{org}/catalog-invitations/{invitation}/register": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "post": {
        "summary": "Register using the Catalog Invitation",
        "description": "Register using the Catalog Invitation",
        "operationId": "invitation_registerCatalogScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationRegister"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/InvitationRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog Invitation (Catalog Scope)"
        ]
      }
    },
    "/orgs/{org}/catalog-invitations/{invitation}/accept": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "post": {
        "summary": "Accept using the Catalog Invitation",
        "description": "Accept using the Catalog Invitation",
        "operationId": "invitation_acceptCatalogScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationAccept"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/InvitationAccept"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Catalog Invitation (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/member-invitations": {
      "description": "The collection of Member Invitation operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Creates a catalog member invitation.",
        "description": "Creates a catalog member invitation.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "member_invitation_createCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member Invitation (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Lists catalog member invitations.",
        "description": "Returns the list of member invitations for a catalog.",
        "operationId": "member_invitation_listCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member Invitation (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears catalog member invitations.",
        "description": "Removes all member invitations for a catalog.",
        "operationId": "member_invitation_clearCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member Invitation (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/member-invitations/{member-invitation}": {
      "description": "Member Invitation object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "get": {
        "summary": "Returns a catalog member invitation.",
        "description": "Returns a catalog member invitation.",
        "operationId": "member_invitation_getCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member Invitation (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a catalog member invitation.",
        "description": "Updates a member invitation to a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "member_invitation_updateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member Invitation (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a catalog member invitation.",
        "description": "Deletes a catalog member invitation.",
        "operationId": "member_invitation_delCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member Invitation (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/member-invitations/{member-invitation}/regenerate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Regenerate the Member Invitation",
        "description": "Regenerate the Member Invitation",
        "operationId": "member_invitation_regenerateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member Invitation (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/member-invitations/{member-invitation}/register": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Register using the Member Invitation",
        "description": "Register using the Member Invitation",
        "operationId": "member_invitation_registerCatalogScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationRegister"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member Invitation (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/member-invitations/{member-invitation}/accept": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Accept using the Member Invitation",
        "description": "Accept using the Member Invitation",
        "operationId": "member_invitation_acceptCatalogScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationAccept"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationAccept"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member Invitation (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/members": {
      "description": "The collection of Member operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Creates a catalog member.",
        "description": "Adds a member to a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n          - user_registry_url\n",
        "operationId": "member_createCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Lists catalog members.",
        "description": "Returns the list of members of a catalog.",
        "operationId": "member_listCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears catalog members.",
        "description": "Removes all members from a catalog.",
        "operationId": "member_clearCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/members/{member}": {
      "description": "Member object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/member"
        }
      ],
      "get": {
        "summary": "Returns a catalog member.",
        "description": "Returns a member of a catalog.",
        "operationId": "member_getCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a catalog member.",
        "description": "Updates a member of a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n          - user_registry_url\n",
        "operationId": "member_updateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a catalog member.",
        "description": "Removes a member from a catalog.",
        "operationId": "member_delCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cascade"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Member (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/tasks": {
      "description": "The collection of Task operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists catalog tasks.",
        "description": "Returns the list of tasks (approval requests) for a catalog.",
        "operationId": "task_listCatalogScope",
        "security": [
          {
            "oauth": [
              "approval:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TaskList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Task (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/tasks/{task}": {
      "description": "Task object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task"
        }
      ],
      "get": {
        "summary": "Returns a catalog task.",
        "description": "Returns a catalog task (approval request).",
        "operationId": "task_getCatalogScope",
        "security": [
          {
            "oauth": [
              "approval:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Task (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a catalog task.",
        "description": "Updates a catalog task (approval request).\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "task_updateCatalogScope",
        "security": [
          {
            "oauth": [
              "approval:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Task (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/roles": {
      "description": "The collection of Role operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists catalog roles.",
        "description": "Returns the list of roles for a catalog.",
        "operationId": "role_listCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Role (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/roles/{role}": {
      "description": "Role object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/role"
        }
      ],
      "get": {
        "summary": "Returns a catalog role.",
        "description": "Returns a role from a catalog.",
        "operationId": "role_getCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Role (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a catalog role.",
        "description": "Updates a role in a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "role_updateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Management",
          "Resource: Role (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/global-policies": {
      "description": "Global Policy operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "post": {
        "summary": "Creates a global policy.",
        "description": "Adds a global policy to a configured gateway service for a catalog.\n\n          Required fields:\n          - global_policy\n          \n          Fields not allowed:\n          - user_registry_urls\n          - tls_client_profile_urls\n          - policy_urls\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_createCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicy"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicy"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy by Id (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Lists global policies.",
        "description": "Returns the list of global policies from a configured gateway service for a catalog.",
        "operationId": "global_policy_listAllCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears global policies.",
        "description": "Removes all global policies from a configured gateway service for a catalog.",
        "operationId": "global_policy_clearAllCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/global-policies/{global-policy-name}": {
      "description": "The collection of Global Policy operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/global-policy-name"
        }
      ],
      "get": {
        "summary": "Lists global policy versions.",
        "description": "Returns all versions of the named global policy from a configured gateway service for a catalog.",
        "operationId": "global_policy_listCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears global policy versions.",
        "description": "Removes all versions of the named global policy from a configured gateway service for a catalog.",
        "operationId": "global_policy_clearCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/global-policies/{global-policy-id}": {
      "description": "Global Policy object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/global-policy-id"
        }
      ],
      "get": {
        "summary": "Returns a global policy.",
        "description": "Returns the given global policy from a configured gateway service for a catalog.",
        "operationId": "global_policy_getCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy by Id (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a global policy.",
        "description": "Updates the given global policy for a configured gateway service for a catalog.\n\n          Fields not allowed to be null:\n          - global_policy\n          \n          Fields not allowed:\n          - user_registry_urls\n          - tls_client_profile_urls\n          - policy_urls\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_updateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicy"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a global policy.",
        "description": "Removes the given global policy from a configured gateway service for a catalog.",
        "operationId": "global_policy_delCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/global-policies/{global-policy-name}/{global-policy-version}": {
      "description": "Global Policy object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/global-policy-name"
        },
        {
          "$ref": "#/components/parameters/global-policy-version"
        }
      ],
      "get": {
        "summary": "Returns a global policy.",
        "description": "Returns the given global policy from a configured gateway service for a catalog.",
        "operationId": "global_policy_getByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy by Id (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a global policy.",
        "description": "Updates the given global policy for a configured gateway service for a catalog.\n\n          Fields not allowed to be null:\n          - global_policy\n          \n          Fields not allowed:\n          - user_registry_urls\n          - tls_client_profile_urls\n          - policy_urls\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_updateByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicy"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Delete a Global Policy",
        "description": "Delete a Global Policy",
        "operationId": "global_policy_delByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/global-policies/{global-policy-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/global-policy-id"
        }
      ],
      "get": {
        "summary": "Get the Global Policy document",
        "description": "Get the Global Policy document",
        "operationId": "global_policy_getDocumentCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/global-policies/{global-policy-name}/{global-policy-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/global-policy-name"
        },
        {
          "$ref": "#/components/parameters/global-policy-version"
        }
      ],
      "get": {
        "summary": "Get the Global Policy document by name and version",
        "description": "Get the Global Policy document by name and version",
        "operationId": "global_policy_getDocumentByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/global-policies": {
      "description": "Global Policy operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "post": {
        "summary": "Creates a global policy.",
        "description": "Adds a global policy to a configured gateway service for a space.\n\n          Required fields:\n          - global_policy\n          \n          Fields not allowed:\n          - user_registry_urls\n          - tls_client_profile_urls\n          - policy_urls\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_createSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicy"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicy"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy by Id (Space Scope)"
        ]
      },
      "get": {
        "summary": "Lists global policies.",
        "description": "Returns the list of global policies from a configured gateway service for a space.",
        "operationId": "global_policy_listAllSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears global policies.",
        "description": "Removes all global policies from a configured gateway service for a space.",
        "operationId": "global_policy_clearAllSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/global-policies/{global-policy-name}": {
      "description": "The collection of Global Policy operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/global-policy-name"
        }
      ],
      "get": {
        "summary": "Lists global policy versions.",
        "description": "Returns all versions of the named global policy from a configured gateway service for a space.",
        "operationId": "global_policy_listSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears global policy versions.",
        "description": "Removes all versions of the named global policy from a configured gateway service for a space.",
        "operationId": "global_policy_clearSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/global-policies/{global-policy-id}": {
      "description": "Global Policy object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/global-policy-id"
        }
      ],
      "get": {
        "summary": "Returns a global policy.",
        "description": "Returns the given global policy from a configured gateway service for a space.",
        "operationId": "global_policy_getSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy by Id (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a global policy.",
        "description": "Updates the given global policy for a configured gateway service for a space.\n\n          Fields not allowed to be null:\n          - global_policy\n          \n          Fields not allowed:\n          - user_registry_urls\n          - tls_client_profile_urls\n          - policy_urls\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_updateSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicy"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a global policy.",
        "description": "Removes the given global policy from a configured gateway service for a space.",
        "operationId": "global_policy_delSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/global-policies/{global-policy-name}/{global-policy-version}": {
      "description": "Global Policy object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/global-policy-name"
        },
        {
          "$ref": "#/components/parameters/global-policy-version"
        }
      ],
      "get": {
        "summary": "Returns a global policy.",
        "description": "Returns the given global policy from a configured gateway service for a space.",
        "operationId": "global_policy_getByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy by Id (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a global policy.",
        "description": "Updates the given global policy for a configured gateway service for a space.\n\n          Fields not allowed to be null:\n          - global_policy\n          \n          Fields not allowed:\n          - user_registry_urls\n          - tls_client_profile_urls\n          - policy_urls\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_updateByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicy"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Delete a Global Policy",
        "description": "Delete a Global Policy",
        "operationId": "global_policy_delByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/global-policies/{global-policy-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/global-policy-id"
        }
      ],
      "get": {
        "summary": "Get the Global Policy document",
        "description": "Get the Global Policy document",
        "operationId": "global_policy_getDocumentSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/global-policies/{global-policy-name}/{global-policy-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/global-policy-name"
        },
        {
          "$ref": "#/components/parameters/global-policy-version"
        }
      ],
      "get": {
        "summary": "Get the Global Policy document by name and version",
        "description": "Get the Global Policy document by name and version",
        "operationId": "global_policy_getDocumentByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy by Id (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/policies": {
      "description": "Policy operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "post": {
        "summary": "Creates a policy.",
        "description": "Adds a policy to a configured gateway service for a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "policy_createCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PolicyMultipart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Lists policies.",
        "description": "Returns the list of policies from a configured gateway service for a catalog.",
        "operationId": "policy_listAllCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears policies.",
        "description": "Removes all policies from a configured gateway service for a catalog.",
        "operationId": "policy_clearAllCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/policies/{policy-name}": {
      "description": "The collection of Policy operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-name"
        }
      ],
      "get": {
        "summary": "Lists policies.",
        "description": "Returns the list of versions of the named policy from a configured gateway service for a catalog.",
        "operationId": "policy_listCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears policy versions.",
        "description": "Removes all versions of the named policy from a configured gateway service for a catalog.",
        "operationId": "policy_clearCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/policies/{policy-id}": {
      "description": "Policy object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-id"
        }
      ],
      "get": {
        "summary": "Returns a policy.",
        "description": "Returns a policy from a configured gateway service for a catalog.",
        "operationId": "policy_getCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a policy.",
        "description": "Updates a policy in a configured gateway service for a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "policy_updateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PolicyMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a policy.",
        "description": "Removes a policy from a configured gateway service for a catalog.",
        "operationId": "policy_delCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/policies/{policy-name}/{policy-version}": {
      "description": "Policy object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-name"
        },
        {
          "$ref": "#/components/parameters/policy-version"
        }
      ],
      "get": {
        "summary": "Returns a policy.",
        "description": "Returns a policy from a configured gateway service for a catalog.",
        "operationId": "policy_getByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Lists policies.",
        "description": "Updates a policy in a configured gateway service for a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "policy_updateByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PolicyMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Delete a Policy",
        "description": "Delete a Policy",
        "operationId": "policy_delByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/policies/{policy-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-id"
        }
      ],
      "get": {
        "summary": "Get the Policy document",
        "description": "Get the Policy document",
        "operationId": "policy_getDocumentCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/policies/{policy-name}/{policy-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-name"
        },
        {
          "$ref": "#/components/parameters/policy-version"
        }
      ],
      "get": {
        "summary": "Get the Policy document by name and version",
        "description": "Get the Policy document by name and version",
        "operationId": "policy_getDocumentByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/policies/{policy-id}/implementation": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-id"
        }
      ],
      "get": {
        "summary": "Get the Policy implementation document",
        "description": "Get the Policy implementation document",
        "operationId": "policy_getImplementationCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Implementation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Implementation"
                }
              },
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/policies/{policy-name}/{policy-version}/implementation": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-name"
        },
        {
          "$ref": "#/components/parameters/policy-version"
        }
      ],
      "get": {
        "summary": "Get the Policy implementation document by name and version",
        "description": "Get the Policy implementation document by name and version",
        "operationId": "policy_getImplementationByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Implementation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Implementation"
                }
              },
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Policy by Id (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/policies": {
      "description": "Policy operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "post": {
        "summary": "Creates a policy.",
        "description": "Adds a policy to a configured gateway service for a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "policy_createSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PolicyMultipart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      },
      "get": {
        "summary": "Lists policies.",
        "description": "Returns the list of policies from a configured gateway service for a space.",
        "operationId": "policy_listAllSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears policies.",
        "description": "Removes all policies from a configured gateway service for a space.",
        "operationId": "policy_clearAllSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/policies/{policy-name}": {
      "description": "The collection of Policy operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-name"
        }
      ],
      "get": {
        "summary": "Lists policies.",
        "description": "Returns the list of versions of the named policy from a configured gateway service for a space.",
        "operationId": "policy_listSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears policy versions.",
        "description": "Removes all versions of the named policy from a configured gateway service for a space.",
        "operationId": "policy_clearSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/policies/{policy-id}": {
      "description": "Policy object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-id"
        }
      ],
      "get": {
        "summary": "Returns a policy.",
        "description": "Returns a policy from a configured gateway service for a space.",
        "operationId": "policy_getSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a policy.",
        "description": "Updates a policy in a configured gateway service for a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "policy_updateSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PolicyMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a policy.",
        "description": "Removes a policy from a configured gateway service for a space.",
        "operationId": "policy_delSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/policies/{policy-name}/{policy-version}": {
      "description": "Policy object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-name"
        },
        {
          "$ref": "#/components/parameters/policy-version"
        }
      ],
      "get": {
        "summary": "Returns a policy.",
        "description": "Returns a policy from a configured gateway service for a space.",
        "operationId": "policy_getByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a policy.",
        "description": "Updates a policy in a configured gateway service for a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "policy_updateByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PolicyMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Delete a Policy",
        "description": "Delete a Policy",
        "operationId": "policy_delByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/policies/{policy-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-id"
        }
      ],
      "get": {
        "summary": "Get the Policy document",
        "description": "Get the Policy document",
        "operationId": "policy_getDocumentSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/policies/{policy-name}/{policy-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-name"
        },
        {
          "$ref": "#/components/parameters/policy-version"
        }
      ],
      "get": {
        "summary": "Get the Policy document by name and version",
        "description": "Get the Policy document by name and version",
        "operationId": "policy_getDocumentByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/policies/{policy-id}/implementation": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-id"
        }
      ],
      "get": {
        "summary": "Get the Policy implementation document",
        "description": "Get the Policy implementation document",
        "operationId": "policy_getImplementationSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Implementation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Implementation"
                }
              },
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/policies/{policy-name}/{policy-version}/implementation": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/policy-name"
        },
        {
          "$ref": "#/components/parameters/policy-version"
        }
      ],
      "get": {
        "summary": "Get the Policy implementation document by name and version",
        "description": "Get the Policy implementation document by name and version",
        "operationId": "policy_getImplementationByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Implementation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Implementation"
                }
              },
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Policy by Id (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/extensions": {
      "description": "Extension operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "post": {
        "summary": "Creates a gateway extension.",
        "description": "Adds a gateway extension to the set of configured gateway services for a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "extension_createCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Extension"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Extension"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Extension by Id (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Lists gateway extensions.",
        "description": "Returns the list of gateway extensions for the set of configured gateway services for a catalog.",
        "operationId": "extension_listAllCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Extension by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears gateway extensions.",
        "description": "Removes all gateway extensions from the set of configured gateway services for a catalog.",
        "operationId": "extension_clearAllCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Extension by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/extensions/{extension-name}": {
      "description": "The collection of Extension operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-name"
        }
      ],
      "get": {
        "summary": "Lists gateway extension versions.",
        "description": "Returns all versions of the named gateway extension for the set of configured gateway services for a catalog.",
        "operationId": "extension_listCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Extension by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears gateway extensions.",
        "description": "Removes all versions of the named gateway extension from the set of configured gateway services for a catalog.",
        "operationId": "extension_clearCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Extension by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/extensions/{extension-id}": {
      "description": "Extension object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-id"
        }
      ],
      "get": {
        "summary": "Returns a gateway extension.",
        "description": "Returns the given gateway extension from the set of configured gateway services for a catalog.",
        "operationId": "extension_getCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Extension by Id (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Lists gateway extension versions.",
        "description": "Updates the given gateway extension in the set of configured gateway services for a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "extension_updateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Extension"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Extension"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Extension by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a gateway extension.",
        "description": "Removes the given gateway extension from the set of configured gateway services for a catalog.",
        "operationId": "extension_delCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Extension by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/extensions/{extension-name}/{extension-version}": {
      "description": "Extension object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-name"
        },
        {
          "$ref": "#/components/parameters/extension-version"
        }
      ],
      "get": {
        "summary": "Returns a gateway extension.",
        "description": "Returns the given gateway extension from the set of configured gateway services for a catalog.",
        "operationId": "extension_getByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Extension by Id (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Lists gateway extension versions.",
        "description": "Updates the given gateway extension in the set of configured gateway services for a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "extension_updateByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Extension"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Extension"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Extension by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Delete a Extension",
        "description": "Delete a Extension",
        "operationId": "extension_delByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Extension by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/extensions/{extension-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-id"
        }
      ],
      "get": {
        "summary": "Get the Extension document",
        "description": "Get the Extension document",
        "operationId": "extension_getDocumentCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Extension by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/extensions/{extension-name}/{extension-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-name"
        },
        {
          "$ref": "#/components/parameters/extension-version"
        }
      ],
      "get": {
        "summary": "Get the Extension document by name and version",
        "description": "Get the Extension document by name and version",
        "operationId": "extension_getDocumentByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Extension by Id (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/extensions": {
      "description": "Extension operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "post": {
        "summary": "Creates a gateway extension.",
        "description": "Adds a gateway extension to the set of configured gateway services for a catalog, as accessed through a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "extension_createSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Extension"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Extension"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Extension by Id (Space Scope)"
        ]
      },
      "get": {
        "summary": "Lists gateway extensions.",
        "description": "Returns the list of gateway extensions for the set of configured gateway services for a catalog, as accessed through a space.",
        "operationId": "extension_listAllSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Extension by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears gateway extensions.",
        "description": "Removes all gateway extensions from the set of configured gateway services for a catalog, as accessed through a space.",
        "operationId": "extension_clearAllSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Extension by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/extensions/{extension-name}": {
      "description": "The collection of Extension operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-name"
        }
      ],
      "get": {
        "summary": "Lists gateway extension versions.",
        "description": "Returns all versions of the named gateway extension for the set of configured gateway services for a catalog, as accessed through a space.",
        "operationId": "extension_listSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Extension by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears gateway extensions.",
        "description": "Removes all versions of the named gateway extension from the set of configured gateway services for a catalog, as accessed through a space.",
        "operationId": "extension_clearSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Extension by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/extensions/{extension-id}": {
      "description": "Extension object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-id"
        }
      ],
      "get": {
        "summary": "Returns a gateway extension document.",
        "description": "Returns the given gateway extension from the set of configured gateway services for a catalog, as accessed through a space.",
        "operationId": "extension_getSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Extension by Id (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Lists gateway extension versions.",
        "description": "Updates the given gateway extension in the set of configured gateway services for a catalog, as accessed through a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "extension_updateSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Extension"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Extension"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Extension by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a gateway extension.",
        "description": "Removes the given gateway extension from the set of configured gateway services for a catalog, as accessed through a space.",
        "operationId": "extension_delSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Extension by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/extensions/{extension-name}/{extension-version}": {
      "description": "Extension object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-name"
        },
        {
          "$ref": "#/components/parameters/extension-version"
        }
      ],
      "get": {
        "summary": "Returns a gateway extension.",
        "description": "Returns the given gateway extension from the set of configured gateway services for a catalog, as accessed through a space.",
        "operationId": "extension_getByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Extension by Id (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Lists gateway extension versions.",
        "description": "Updates the given gateway extension in the set of configured gateway services for a catalog, as accessed through a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "extension_updateByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Extension"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Extension"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Extension by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Delete a Extension",
        "description": "Delete a Extension",
        "operationId": "extension_delByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Extension by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/extensions/{extension-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-id"
        }
      ],
      "get": {
        "summary": "Get the Extension document",
        "description": "Get the Extension document",
        "operationId": "extension_getDocumentSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Extension by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/extensions/{extension-name}/{extension-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/extension-name"
        },
        {
          "$ref": "#/components/parameters/extension-version"
        }
      ],
      "get": {
        "summary": "Get the Extension document by name and version",
        "description": "Get the Extension document by name and version",
        "operationId": "extension_getDocumentByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Extension by Id (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/subscriptions": {
      "description": "The collection of Subscription operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "List the Subscription objects",
        "description": "List the Subscription objects",
        "operationId": "subscription_listCatalogScope",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/product_url"
          },
          {
            "$ref": "#/components/parameters/consumer_org_url"
          },
          {
            "$ref": "#/components/parameters/plan"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resource",
          "Resource: Subscription (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/subscriptions": {
      "description": "The collection of Subscription operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "List the Subscription objects",
        "description": "List the Subscription objects",
        "operationId": "subscription_listSpaceScope",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/product_url"
          },
          {
            "$ref": "#/components/parameters/consumer_org_url"
          },
          {
            "$ref": "#/components/parameters/plan"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resource",
          "Resource: Subscription (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/credentials": {
      "description": "The collection of Credential operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "List the Credential objects",
        "description": "List the Credential objects",
        "operationId": "credential_listCatalogScope",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resource",
          "Resource: Credential (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/credentials": {
      "description": "The collection of Credential operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "List the Credential objects",
        "description": "List the Credential objects",
        "operationId": "credential_listSpaceScope",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resource",
          "Resource: Credential (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/services": {
      "description": "Service operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "post": {
        "summary": "Creates a service.",
        "description": "Add a service to a configured gateway service for a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "service_createSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Service by Id"
        ]
      },
      "get": {
        "summary": "Lists services.",
        "description": "Returns the list of services from a configured gateway service for a space.",
        "operationId": "service_listAllSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Service by Id"
        ]
      },
      "delete": {
        "summary": "Clears services.",
        "description": "Removes all services from a configured gateway service for a space.",
        "operationId": "service_clearAllSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Service by Id"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/services/{service-name}": {
      "description": "The collection of Service operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/service-name"
        }
      ],
      "get": {
        "summary": "Lists services.",
        "description": "Returns all versions of the named service from a configured gateway service for a space.",
        "operationId": "service_listSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Service by Id"
        ]
      },
      "delete": {
        "summary": "Clears services.",
        "description": "Removes all versions of the named service from a configured gateway service for a space.",
        "operationId": "service_clearSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Service by Id"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/services/{service-id}": {
      "description": "Service object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/service-id"
        }
      ],
      "get": {
        "summary": "Returns a service.",
        "description": "Returns a service from a configured gateway service for a space.",
        "operationId": "service_getSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Service by Id"
        ]
      },
      "patch": {
        "summary": "Updates a service.",
        "description": "Updates a service for a configured gateway service for a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "service_updateSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Service by Id"
        ]
      },
      "delete": {
        "summary": "Deletes a service.",
        "description": "Remove a service from a configured gateway service for a space.",
        "operationId": "service_delSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Service by Id"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/services/{service-name}/{service-version}": {
      "description": "Service object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/service-name"
        },
        {
          "$ref": "#/components/parameters/service-version"
        }
      ],
      "get": {
        "summary": "Returns a service.",
        "description": "Returns a service from a configured gateway service for a space.",
        "operationId": "service_getByNameVersionSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Service by Id"
        ]
      },
      "patch": {
        "summary": "Updates a service.",
        "description": "Updates a service for a configured gateway service for a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "service_updateByNameVersionSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Service by Id"
        ]
      },
      "delete": {
        "summary": "Delete a Service",
        "description": "Delete a Service",
        "operationId": "service_delByNameVersionSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Service by Id"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/global-policy-error": {
      "description": "Global Policy Error object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "post": {
        "summary": "Create the Global Policy Error object",
        "description": "Create the Global Policy Error object\n          \n          Required fields:\n          - global_policy_url\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_error_singletonCreateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyError"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyError"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy Error (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Get the Global Policy Error object",
        "description": "Get the Global Policy Error object",
        "operationId": "global_policy_error_singletonGetCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy Error (Catalog Scope)"
        ]
      },
      "put": {
        "summary": "Update the Global Policy Error object",
        "description": "Update the Global Policy Error object\n          \n          Fields not allowed to be null:\n          - global_policy_url\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_error_singletonUpdateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyError"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyError"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy Error (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Delete the Global Policy Error object",
        "description": "Delete the Global Policy Error object",
        "operationId": "global_policy_error_singletonDelCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy Error (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/global-policy-error": {
      "description": "Global Policy Error object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "post": {
        "summary": "Create the Global Policy Error object",
        "description": "Create the Global Policy Error object\n          \n          Required fields:\n          - global_policy_url\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_error_singletonCreateSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyError"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyError"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy Error (Space Scope)"
        ]
      },
      "get": {
        "summary": "Get the Global Policy Error object",
        "description": "Get the Global Policy Error object",
        "operationId": "global_policy_error_singletonGetSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy Error (Space Scope)"
        ]
      },
      "put": {
        "summary": "Update the Global Policy Error object",
        "description": "Update the Global Policy Error object\n          \n          Fields not allowed to be null:\n          - global_policy_url\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_error_singletonUpdateSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyError"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyError"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy Error (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Delete the Global Policy Error object",
        "description": "Delete the Global Policy Error object",
        "operationId": "global_policy_error_singletonDelSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyError"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy Error (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/global-policy-prehook": {
      "description": "Global Policy Prehook object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "post": {
        "summary": "Creates a prehook global policy.",
        "description": "Adds the given global policy pre-flow hook on a configured gateway service for a catalog.\n\n          Required fields:\n          - global_policy_url\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_prehook_singletonCreateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPrehook"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPrehook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy Prehook (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Returns a prehook global policy.",
        "description": "Returns the global policy pre-flow hook for a configured gateway service for a catalog.",
        "operationId": "global_policy_prehook_singletonGetCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy Prehook (Catalog Scope)"
        ]
      },
      "put": {
        "summary": "Updates a prehook global policy.",
        "description": "Updates the global policy pre-flow hook for a configured gateway service for a catalog.\n\n          Fields not allowed to be null:\n          - global_policy_url\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_prehook_singletonUpdateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPrehook"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPrehook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy Prehook (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a prehook global policy.",
        "description": "Removes the given global policy pre-flow hook from a configured gateway service for a catalog.",
        "operationId": "global_policy_prehook_singletonDelCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy Prehook (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/global-policy-prehook": {
      "description": "Global Policy Prehook object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "post": {
        "summary": "Creates a prehook global policy.",
        "description": "Adds the given global policy pre-flow hook on a configured gateway service for a space.\n\n          Required fields:\n          - global_policy_url\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_prehook_singletonCreateSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPrehook"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPrehook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy Prehook (Space Scope)"
        ]
      },
      "get": {
        "summary": "Returns a prehook global policy.",
        "description": "Returns the global policy pre-flow hook for a configured gateway service for a space.",
        "operationId": "global_policy_prehook_singletonGetSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy Prehook (Space Scope)"
        ]
      },
      "put": {
        "summary": "Updates a prehook global policy.",
        "description": "Updates the global policy pre-flow hook for a configured gateway service for a space.\n\n          Fields not allowed to be null:\n          - global_policy_url\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_prehook_singletonUpdateSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPrehook"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPrehook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy Prehook (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a prehook global policy.",
        "description": "Removes the given global policy pre-flow hook from a configured gateway service for a space.",
        "operationId": "global_policy_prehook_singletonDelSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPrehook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy Prehook (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/global-policy-posthook": {
      "description": "Global Policy Posthook object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "post": {
        "summary": "Creates a posthook global policy.",
        "description": "Adds the given global policy post-flow hook on a configured gateway service for a catalog.\n\n          Required fields:\n          - global_policy_url\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_posthook_singletonCreateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPosthook"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPosthook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy Posthook (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Returns a posthook global policy.",
        "description": "Returns the global policy post-flow hook for a configured gateway service for a catalog.",
        "operationId": "global_policy_posthook_singletonGetCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy Posthook (Catalog Scope)"
        ]
      },
      "put": {
        "summary": "Updates a posthook global policy.",
        "description": "Updates the global policy post-flow hook for a configured gateway service for a catalog.\n\n          Fields not allowed to be null:\n          - global_policy_url\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_posthook_singletonUpdateCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPosthook"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPosthook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy Posthook (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a posthook global policy.",
        "description": "Removes the given global policy post-flow hook from a configured gateway service for a catalog.",
        "operationId": "global_policy_posthook_singletonDelCatalogScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Global Policy Posthook (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/configured-gateway-services/{configured-gateway-service}/global-policy-posthook": {
      "description": "Global Policy Posthook object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "post": {
        "summary": "Creates a posthook global policy.",
        "description": "Adds the given global policy post-flow hook on a configured gateway service for a space.\n\n          Required fields:\n          - global_policy_url\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_posthook_singletonCreateSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPosthook"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPosthook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy Posthook (Space Scope)"
        ]
      },
      "get": {
        "summary": "Returns a posthook global policy.",
        "description": "Returns the global policy post-flow hook for a configured gateway service for a space.",
        "operationId": "global_policy_posthook_singletonGetSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy Posthook (Space Scope)"
        ]
      },
      "put": {
        "summary": "Updates a posthook global policy.",
        "description": "Updates the global policy post-flow hook for a configured gateway service for a space.\n\n          Fields not allowed to be null:\n          - global_policy_url\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "global_policy_posthook_singletonUpdateSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPosthook"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalPolicyPosthook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy Posthook (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a posthook global policy.",
        "description": "Removes the given global policy post-flow hook from a configured gateway service for a space.",
        "operationId": "global_policy_posthook_singletonDelSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalPolicyPosthook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Global Policy Posthook (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/analytics-services": {
      "description": "The collection of Analytics Service operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "List the Analytics Service objects",
        "description": "List the Analytics Service objects",
        "operationId": "analytics_service_listCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsServiceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsServiceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Analytics Service (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/analytics-services/{analytics-service}": {
      "description": "Analytics Service object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the Analytics Service object by name or id",
        "description": "Get the Analytics Service object by name or id",
        "operationId": "analytics_service_getCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Analytics Service (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/analytics-services/{analytics-service}/analytics": {
      "description": "The collection of Analytics operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "post": {
        "summary": "Create an Analytics object",
        "description": "Create an Analytics object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "analytics_createCatalogScope",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Analytics"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Analytics"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Analytics"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Analytics"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Catalog Resources",
          "Resource: Analytics (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/analytics-services": {
      "description": "The collection of Analytics Service operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "List the Analytics Service objects",
        "description": "List the Analytics Service objects",
        "operationId": "analytics_service_listSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsServiceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsServiceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Analytics Service (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/analytics-services/{analytics-service}": {
      "description": "Analytics Service object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the Analytics Service object by name or id",
        "description": "Get the Analytics Service object by name or id",
        "operationId": "analytics_service_getSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Analytics Service (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/analytics-services/{analytics-service}/analytics": {
      "description": "The collection of Analytics operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "post": {
        "summary": "Create an Analytics object",
        "description": "Create an Analytics object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "analytics_createSpaceScope",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Analytics"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Analytics"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Analytics"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Analytics"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Resources",
          "Resource: Analytics (Space Scope)"
        ]
      }
    },
    "/orgs/{org}/analytics-services": {
      "description": "The collection of Analytics Service operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "List the Analytics Service objects",
        "description": "List the Analytics Service objects",
        "operationId": "analytics_service_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsServiceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsServiceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Analytics Service (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/analytics-services/{analytics-service}": {
      "description": "Analytics Service object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the Analytics Service object by name or id",
        "description": "Get the Analytics Service object by name or id",
        "operationId": "analytics_service_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsService"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Analytics Service (Org Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/settings": {
      "description": "Space Setting object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Returns space settings.",
        "description": "Returns the settings for a space.",
        "operationId": "space_setting_singletonGet",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Space Setting"
        ]
      },
      "put": {
        "summary": "Updates space settings.",
        "description": "Updates the settings for a space.\n\n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "space_setting_singletonUpdate",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceSetting"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/SpaceSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Space Setting"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/settings/notification-templates": {
      "description": "Notification Template operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Lists space notification templates.",
        "description": "Returns the list of all notification templates for a space.",
        "operationId": "notification_template_listAllSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Notification Template (Space Scope) (All Subcollections)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/settings/notification-templates/space": {
      "description": "The collection of Notification Template operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Lists space notification templates.",
        "description": "Returns the list of all space notification templates set at the space organization level.",
        "operationId": "notification_template_listSpaceSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Notification Template (Space Scope) (Space Subcollection)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/settings/notification-templates/space/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Returns a space notification template.",
        "description": "Returns a space notification template, set at the space level.",
        "operationId": "notification_template_getSpaceSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Notification Template (Space Scope) (Space Subcollection)"
        ]
      },
      "patch": {
        "summary": "Updates a space notification template.",
        "description": "Updates a space notification template set at the space level.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateSpaceSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Notification Template (Space Scope) (Space Subcollection)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/settings/notification-templates/space/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listSpaceSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Notification Template (Space Scope) (Space Subcollection)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/settings/notification-templates/space/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getSpaceSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Notification Template (Space Scope) (Space Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateSpaceSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Notification Template (Space Scope) (Space Subcollection)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/settings/notification-templates/consumer": {
      "description": "The collection of Notification Template operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Lists consumer notification templates.",
        "description": "Returns the list of all consumer notification templates set at the space level.",
        "operationId": "notification_template_listConsumerSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Notification Template (Space Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/settings/notification-templates/consumer/{notification-template}": {
      "description": "Notification Template object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "Returns a consumer notification template.",
        "description": "Returns a consumer notification template, set at the space level.",
        "operationId": "notification_template_getConsumerSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Notification Template (Space Scope) (Consumer Subcollection)"
        ]
      },
      "patch": {
        "summary": "Updates a consumer notification template.",
        "description": "Updates a consumer notification template set at the space level.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "notification_template_updateConsumerSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTemplate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Notification Template (Space Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/settings/notification-templates/consumer/{notification-template}/notification-languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        }
      ],
      "get": {
        "summary": "List the Notification language objects",
        "description": "List the Notification language objects",
        "operationId": "notification_language_listConsumerSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguageList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Notification Template (Space Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/settings/notification-templates/consumer/{notification-template}/notification-languages/{notification-language}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/notification-template"
        },
        {
          "$ref": "#/components/parameters/notification-language"
        }
      ],
      "get": {
        "summary": "Get the Notification template language by name or id",
        "description": "Get the Notification template language by name or id",
        "operationId": "notification_language_getConsumerSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Notification Template (Space Scope) (Consumer Subcollection)"
        ]
      },
      "patch": {
        "summary": "Update the Notification template language object",
        "description": "Update the Notification template language object",
        "operationId": "notification_language_updateConsumerSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/NotificationLanguage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationLanguage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Notification Template (Space Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/role-defaults": {
      "description": "Role Default operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Lists space role defaults.",
        "description": "Returns the list of all role defaults for a space.",
        "operationId": "role_default_listAllSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Role Default (Space Scope) (All Subcollections)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/role-defaults/consumer": {
      "description": "The collection of Role Default operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Lists consumer organization role defaults.",
        "description": "Returns the list of consumer organization role defaults in a space.",
        "operationId": "role_default_listConsumerSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefaultList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Role Default (Space Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/role-defaults/consumer/{role-default}": {
      "description": "Role Default object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/role-default"
        }
      ],
      "get": {
        "summary": "Returns a consumer organization role default.",
        "description": "Returns a consumer organization role default for a space.",
        "operationId": "role_default_getConsumerSubcollectionSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefault"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Settings",
          "Resource: Role Default (Space Scope) (Consumer Subcollection)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/spaces": {
      "description": "The collection of Space operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Creates a space.",
        "description": "Creates a space in a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "space_create",
        "security": [
          {
            "oauth": [
              "child:create"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space"
        ]
      },
      "get": {
        "summary": "Lists spaces.",
        "description": "Returns the list of spaces in a catalog.",
        "operationId": "space_list",
        "security": [
          {
            "oauth": [
              "child:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space"
        ]
      },
      "delete": {
        "summary": "Clears spaces.",
        "description": "Deletes all spaces from a catalog.",
        "operationId": "space_clear",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}": {
      "description": "Space object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Returns a space.",
        "description": "Returns a space in a catalog.",
        "operationId": "space_get",
        "security": [
          {
            "oauth": [
              "child:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space"
        ]
      },
      "patch": {
        "summary": "Updates a space.",
        "description": "Updates a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "space_update",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space"
        ]
      },
      "delete": {
        "summary": "Deletes a space.",
        "description": "Deletes a spaces from a catalog.",
        "operationId": "space_del",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/transfer-owner": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Transfer owner to an associate",
        "description": "Transfer owner to an associate",
        "operationId": "space_transferOwner",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cascade"
          },
          {
            "$ref": "#/components/parameters/delete_old_owner"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/email-to-owners": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Send email to owners of consumer organizations",
        "description": "Send email to owners of consumer organizations, given consumer org and consumer group urls. For consumer group, email owners of all consumer orgs in the group.",
        "operationId": "space_emailToOwners",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/knowledge-center/api-connect/platform-apis/space#email-to-owners"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailToOwners"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/EmailToOwners"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailToOwnersResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/EmailToOwnersResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/stage-draft-product": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Stage a draft product",
        "description": "Stage a draft product",
        "operationId": "space_stageDraftProductSpaceSubcollection",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gateway_services"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductPublish"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductPublish"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/publish-draft-product": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Publish a draft product by url reference",
        "description": "Publish a draft product by url reference",
        "operationId": "space_publishDraftProductSpaceSubcollection",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gateway_services"
          },
          {
            "$ref": "#/components/parameters/migrate_subscriptions"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductPublish"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductPublish"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/stage": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Stage the product",
        "description": "Stage the product",
        "operationId": "space_stageSpaceSubcollection",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gateway_services"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductPublishMultipart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/publish": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Publish the product",
        "description": "Publish the product",
        "operationId": "space_publishSpaceSubcollection",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/gateway_services"
          },
          {
            "$ref": "#/components/parameters/migrate_subscriptions"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductPublishMultipart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/space-invitations": {
      "description": "The collection of Space Invitation operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Creates a space invitation.",
        "description": "Creates a space owner invitation in the context of a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "invitation_createSpaceScope",
        "security": [
          {
            "oauth": [
              "child:create"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space Invitation (Space Scope)"
        ]
      },
      "get": {
        "summary": "Lists space invitations.",
        "description": "Returns the list of all space owner invitations in the context of a catalog.",
        "operationId": "invitation_listSpaceScope",
        "security": [
          {
            "oauth": [
              "child:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space Invitation (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears space invitations.",
        "description": "Removes all space owner invitations.",
        "operationId": "invitation_clearSpaceScope",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space Invitation (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/space-invitations/{invitation}": {
      "description": "Space Invitation object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "get": {
        "summary": "Returns a space invitation.",
        "description": "Returns a space owner invitation.",
        "operationId": "invitation_getSpaceScope",
        "security": [
          {
            "oauth": [
              "child:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space Invitation (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a space invitation.",
        "description": "Updates a space owner invitation.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "invitation_updateSpaceScope",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space Invitation (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a space invitation.",
        "description": "Deletes a space owner invitation.",
        "operationId": "invitation_delSpaceScope",
        "security": [
          {
            "oauth": [
              "child:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space Invitation (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/space-invitations/{invitation}/regenerate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "post": {
        "summary": "Regenerate the Space Invitation",
        "description": "Regenerate the Space Invitation",
        "operationId": "invitation_regenerateSpaceScope",
        "security": [
          {
            "oauth": [
              "child:create"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space Invitation (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/space-invitations/{invitation}/register": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "post": {
        "summary": "Register using the Space Invitation",
        "description": "Register using the Space Invitation",
        "operationId": "invitation_registerSpaceScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationRegister"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/InvitationRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space Invitation (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/space-invitations/{invitation}/accept": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "post": {
        "summary": "Accept using the Space Invitation",
        "description": "Accept using the Space Invitation",
        "operationId": "invitation_acceptSpaceScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationAccept"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/InvitationAccept"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Space Invitation (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/roles": {
      "description": "The collection of Role operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Lists space roles.",
        "description": "Returns the list of roles for a space.",
        "operationId": "role_listSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Role (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/roles/{role}": {
      "description": "Role object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/role"
        }
      ],
      "get": {
        "summary": "Returns a space role.",
        "description": "Returns a role from a space.",
        "operationId": "role_getSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Role (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a space role.",
        "description": "Updates a role in a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "role_updateSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Role (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/member-invitations": {
      "description": "The collection of Member Invitation operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Creates a space member invitation.",
        "description": "Creates a space member invitation.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "member_invitation_createSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member Invitation (Space Scope)"
        ]
      },
      "get": {
        "summary": "Lists space member invitations.",
        "description": "Returns the list of member invitations for a space.",
        "operationId": "member_invitation_listSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member Invitation (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears space member invitations.",
        "description": "Removes all member invitations for a space.",
        "operationId": "member_invitation_clearSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member Invitation (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/member-invitations/{member-invitation}": {
      "description": "Member Invitation object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "get": {
        "summary": "Returns a space member invitation.",
        "description": "Returns a space member invitation.",
        "operationId": "member_invitation_getSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member Invitation (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a space member invitation.",
        "description": "Updates a member invitation to a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "member_invitation_updateSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member Invitation (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a space member invitation.",
        "description": "Deletes a space organization member invitation.",
        "operationId": "member_invitation_delSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member Invitation (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/member-invitations/{member-invitation}/regenerate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Regenerate the Member Invitation",
        "description": "Regenerate the Member Invitation",
        "operationId": "member_invitation_regenerateSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member Invitation (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/member-invitations/{member-invitation}/register": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Register using the Member Invitation",
        "description": "Register using the Member Invitation",
        "operationId": "member_invitation_registerSpaceScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationRegister"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member Invitation (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/member-invitations/{member-invitation}/accept": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Accept using the Member Invitation",
        "description": "Accept using the Member Invitation",
        "operationId": "member_invitation_acceptSpaceScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationAccept"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationAccept"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member Invitation (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/members": {
      "description": "The collection of Member operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Creates a space member.",
        "description": "Adds a member to a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n          - user_registry_url\n",
        "operationId": "member_createSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member (Space Scope)"
        ]
      },
      "get": {
        "summary": "Lists space members.",
        "description": "Returns the list of members of a space.",
        "operationId": "member_listSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears space members.",
        "description": "Removes all members from a space.",
        "operationId": "member_clearSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/members/{member}": {
      "description": "Member object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/member"
        }
      ],
      "get": {
        "summary": "Returns a space member.",
        "description": "Returns a member of a space.",
        "operationId": "member_getSpaceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a space member.",
        "description": "Updates a member of a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n          - user_registry_url\n",
        "operationId": "member_updateSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a space member.",
        "description": "Removes a member from a space.",
        "operationId": "member_delSpaceScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cascade"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Member (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/tasks": {
      "description": "The collection of Task operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Lists space tasks.",
        "description": "Returns the list of tasks (approval requests) for a space.",
        "operationId": "task_listSpaceScope",
        "security": [
          {
            "oauth": [
              "approval:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TaskList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Task (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/tasks/{task}": {
      "description": "Task object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/task"
        }
      ],
      "get": {
        "summary": "Returns a space task.",
        "description": "Returns a space task (approval request).",
        "operationId": "task_getSpaceScope",
        "security": [
          {
            "oauth": [
              "approval:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Task (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a space task.",
        "description": "Updates a space task (approval request).\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "task_updateSpaceScope",
        "security": [
          {
            "oauth": [
              "approval:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Space Management",
          "Resource: Task (Space Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/apps": {
      "description": "The collection of Application operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists consumer apps.",
        "description": "Returns a list of apps belonging to the given consumer org in a catalog.",
        "operationId": "app_listCatalogScope",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AppList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/apps": {
      "description": "The collection of Application operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Lists consumer apps.",
        "description": "Returns a list of apps belonging in the given catalog as accessed through the given space.",
        "operationId": "app_listSpaceScope",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AppList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application (Space Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/settings": {
      "description": "Consumer Organization Setting object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "get": {
        "summary": "Returns consumer organization settings.",
        "description": "Returns the settings for the given consumer organization in a catalog.",
        "operationId": "consumer_org_setting_singletonGet",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Setting"
        ]
      },
      "put": {
        "summary": "Updates consumer organization settings.",
        "description": "Updates the settings for the given consumer organization in a catalog.\n\n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "consumer_org_setting_singletonUpdate",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerOrgSetting"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerOrgSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Setting"
        ]
      },
      "delete": {
        "summary": "Deletes consumer organization settings.",
        "description": "Deletes the settings from the given consumer organization in a catalog.",
        "operationId": "consumer_org_setting_singletonDel",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Setting"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/settings": {
      "description": "Consumer Organization Setting object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "get": {
        "summary": "Returns consumer organization settings.",
        "description": "Returns the settings for the given consumer organization in a catalog, as accessed through a space.",
        "operationId": "consumer_org_setting_singletonGetSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Setting"
        ]
      },
      "put": {
        "summary": "Updates consumer organization settings.",
        "description": "Updates the settings for the given consumer organization in a catalog, as accessed through a space.\n\n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "consumer_org_setting_singletonUpdateSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerOrgSetting"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerOrgSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Setting"
        ]
      },
      "delete": {
        "summary": "Deletes consumer organization settings.",
        "description": "Deletes the settings from the given consumer organization in a catalog, as accessed through a space.",
        "operationId": "consumer_org_setting_singletonDelSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgSetting"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgSetting"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Setting"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/activations": {
      "description": "The collection of Activation operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "List the Activation objects",
        "description": "List the Activation objects",
        "operationId": "activation_listOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Activation (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Clear the Activation objects",
        "description": "Clear the Activation objects",
        "operationId": "activation_clearOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Activation (Org Scope)"
        ]
      }
    },
    "/activations/{org}/{catalog}/{activation}": {
      "description": "Activation object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/activation"
        }
      ],
      "get": {
        "summary": "Get the Activation object by name or id",
        "description": "Get the Activation object by name or id",
        "operationId": "activation_getOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Activation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Activation (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Delete the Activation object by name or id",
        "description": "Delete the Activation object by name or id",
        "operationId": "activation_delOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Activation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Activation (Org Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/consumer-org-invitations": {
      "description": "The collection of Consumer Organization Invitation operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Create a Consumer Organization Invitation object",
        "description": "Creates a consumer organization owner invitation in the context of a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "invitation_createConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      },
      "get": {
        "summary": "Lists consumer organization invitations.",
        "description": "Returns the list of all consumer organization owner invitations in the context of a catalog.",
        "operationId": "invitation_listConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      },
      "delete": {
        "summary": "Clears consumer organization invitations.",
        "description": "Removes all consumer organization owner invitations from a catalog.",
        "operationId": "invitation_clearConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/consumer-org-invitations/{invitation}": {
      "description": "Consumer Organization Invitation object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "get": {
        "summary": "Returns a consumer organization invitation.",
        "description": "Returns a consumer organization owner invitation in the context of a catalog.",
        "operationId": "invitation_getConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a consumer organization invitation.",
        "description": "Updates a consumer organization owner invitation in the context of a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "invitation_updateConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a consumer organization invitation.",
        "description": "Deletes a consumer organization owner invitation in the context of a catalog.",
        "operationId": "invitation_delConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/consumer-org-invitations/{invitation}/regenerate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "post": {
        "summary": "Regenerate the Consumer Organization Invitation",
        "description": "Regenerate the Consumer Organization Invitation",
        "operationId": "invitation_regenerateConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/consumer-org-invitations": {
      "description": "The collection of Consumer Organization Invitation operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Creates a consumer organization invitation.",
        "description": "Creates a consumer organization owner invitation in the context of a catalog, as accessed through a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "invitation_createConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      },
      "get": {
        "summary": "Lists consumer organization invitations.",
        "description": "Returns the list of all consumer organization owner invitations in the context of a catalog, as accessed through a space.",
        "operationId": "invitation_listConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      },
      "delete": {
        "summary": "Clears consumer organization invitations.",
        "description": "Removes all consumer organization owner invitations from a catalog, as accessed through a space.",
        "operationId": "invitation_clearConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/consumer-org-invitations/{invitation}": {
      "description": "Consumer Organization Invitation object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "get": {
        "summary": "Returns a consumer organization invitation.",
        "description": "Returns a consumer organization owner invitation in the context of a catalog, as accessed through a space.",
        "operationId": "invitation_getConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a consumer organization invitation.",
        "description": "Updates a consumer organization owner invitation in the context of a catalog, as accessed through a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n",
        "operationId": "invitation_updateConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a consumer organization invitation.",
        "description": "Deletes a consumer organization owner invitation in the context of a catalog, as accessed through a space.",
        "operationId": "invitation_delConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/consumer-org-invitations/{invitation}/regenerate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "post": {
        "summary": "Regenerate the Consumer Organization Invitation",
        "description": "Regenerate the Consumer Organization Invitation",
        "operationId": "invitation_regenerateConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization Invitation (ConsumerOrg Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/consumer-orgs": {
      "description": "The collection of Consumer Organization operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Creates a consumer organization.",
        "description": "Creates a consumer organization in a catalog.\n\n          Required fields:\n          - owner_url\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "consumer_org_create",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerOrg"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerOrg"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      },
      "get": {
        "summary": "Lists consumer organizations.",
        "description": "Returns the list of consumer organization from a catalog.",
        "operationId": "consumer_org_list",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      },
      "delete": {
        "summary": "Clears consumer organizations.",
        "description": "Removes all consumer organizations from a catalog.",
        "operationId": "consumer_org_clear",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}": {
      "description": "Consumer Organization object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "get": {
        "summary": "Returns a consumer organization.",
        "description": "Returns the given consumer organization from a catalog.",
        "operationId": "consumer_org_get",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      },
      "patch": {
        "summary": "Updates a consumer organization.",
        "description": "Updates a consumer organization in a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "consumer_org_update",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerOrg"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerOrg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      },
      "delete": {
        "summary": "Deletes a consumer organization.",
        "description": "Deletes a consumer organization from a catalog.",
        "operationId": "consumer_org_del",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/transfer-owner": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "post": {
        "summary": "Transfer owner to an associate",
        "description": "Transfer owner to an associate",
        "operationId": "consumer_org_transferOwner",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cascade"
          },
          {
            "$ref": "#/components/parameters/delete_old_owner"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/consumer-orgs": {
      "description": "The collection of Consumer Organization operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Creates a consumer organization.",
        "description": "Creates a consumer organization in a catalog, as accessed through the given space.\n\n          Required fields:\n          - owner_url\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "consumer_org_createSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerOrg"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerOrg"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      },
      "get": {
        "summary": "Lists consumer organizations.",
        "description": "Returns the list of consumer organization from a catalog, as accesed through a space.",
        "operationId": "consumer_org_listSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrgList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      },
      "delete": {
        "summary": "Clears consumer organizations.",
        "description": "Removes all consumer organizations from a catalog, as accessed through the given space.",
        "operationId": "consumer_org_clearSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}": {
      "description": "Consumer Organization object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "get": {
        "summary": "Returns a consumer organization.",
        "description": "Returns the given consumer organization from a catalog, as accesed through a space.",
        "operationId": "consumer_org_getSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      },
      "patch": {
        "summary": "Updates a consumer organization.",
        "description": "Updates a consumer organization in a catalog, as accessed through a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "consumer_org_updateSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerOrg"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerOrg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      },
      "delete": {
        "summary": "Deletes a consumer organization.",
        "description": "Deletes a consumer organization from a catalog, as accessed through the given space.",
        "operationId": "consumer_org_delSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/transfer-owner": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "post": {
        "summary": "Transfer owner to an associate",
        "description": "Transfer owner to an associate",
        "operationId": "consumer_org_transferOwnerSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cascade"
          },
          {
            "$ref": "#/components/parameters/delete_old_owner"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerOrg"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Consumer Organization"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/consumer-groups": {
      "description": "The collection of Group operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Creates a consumer group.",
        "description": "Adds a consumer group to a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "group_createCatalogScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Group (Catalog Scope)"
        ]
      },
      "get": {
        "summary": "Lists consumer groups.",
        "description": "Returns the list of consumer groups in a catalog.",
        "operationId": "group_listCatalogScope",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GroupList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Group (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears consumer groups.",
        "description": "Removes all consumer groups from a catalog.",
        "operationId": "group_clearCatalogScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Group (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/consumer-groups/{group}": {
      "description": "Group object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/group"
        }
      ],
      "get": {
        "summary": "Returns a consumer group.",
        "description": "Returns a consumer group in a catalog.",
        "operationId": "group_getCatalogScope",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Group (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a consumer group.",
        "description": "Updates a consumer group in a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "group_updateCatalogScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Group (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a consumer group.",
        "description": "Removes a consumer group from a catalog.",
        "operationId": "group_delCatalogScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Group (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/consumer-groups": {
      "description": "The collection of Group operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "post": {
        "summary": "Create a Group object",
        "description": "Create a Group object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "group_createSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Group"
        ]
      },
      "get": {
        "summary": "List the Group objects",
        "description": "List the Group objects",
        "operationId": "group_listSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/GroupList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Group"
        ]
      },
      "delete": {
        "summary": "Clear the Group objects",
        "description": "Clear the Group objects",
        "operationId": "group_clearSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Group"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/consumer-groups/{group}": {
      "description": "Group object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/group"
        }
      ],
      "get": {
        "summary": "Get the Group object by name or id",
        "description": "Get the Group object by name or id",
        "operationId": "group_getSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Group"
        ]
      },
      "patch": {
        "summary": "Update the Group object by name or id",
        "description": "Update the Group object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "group_updateSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Group"
        ]
      },
      "delete": {
        "summary": "Delete the Group object by name or id",
        "description": "Delete the Group object by name or id",
        "operationId": "group_delSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Group"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/payment-methods": {
      "description": "The collection of Payment Method operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "post": {
        "summary": "Create a Payment Method object",
        "description": "Create a Payment Method object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - consumer_org_url\n",
        "operationId": "payment_method_create",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Payment Method"
        ]
      },
      "get": {
        "summary": "List the Payment Method objects",
        "description": "List the Payment Method objects",
        "operationId": "payment_method_list",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Payment Method"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/payment-methods/{payment-method}": {
      "description": "Payment Method object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/payment-method"
        }
      ],
      "get": {
        "summary": "Get the Payment Method object by name or id",
        "description": "Get the Payment Method object by name or id",
        "operationId": "payment_method_get",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Payment Method"
        ]
      },
      "patch": {
        "summary": "Update the Payment Method object by name or id",
        "description": "Update the Payment Method object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - consumer_org_url\n",
        "operationId": "payment_method_update",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Payment Method"
        ]
      },
      "delete": {
        "summary": "Delete the Payment Method object by name or id",
        "description": "Delete the Payment Method object by name or id",
        "operationId": "payment_method_del",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Payment Method"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/payment-methods": {
      "description": "The collection of Payment Method operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "post": {
        "summary": "Create a Payment Method object",
        "description": "Create a Payment Method object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - consumer_org_url\n",
        "operationId": "payment_method_createSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Payment Method"
        ]
      },
      "get": {
        "summary": "List the Payment Method objects",
        "description": "List the Payment Method objects",
        "operationId": "payment_method_listSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Payment Method"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/payment-methods/{payment-method}": {
      "description": "Payment Method object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/payment-method"
        }
      ],
      "get": {
        "summary": "Get the Payment Method object by name or id",
        "description": "Get the Payment Method object by name or id",
        "operationId": "payment_method_getSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Payment Method"
        ]
      },
      "patch": {
        "summary": "Update the Payment Method object by name or id",
        "description": "Update the Payment Method object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - consumer_org_url\n",
        "operationId": "payment_method_updateSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Payment Method"
        ]
      },
      "delete": {
        "summary": "Delete the Payment Method object by name or id",
        "description": "Delete the Payment Method object by name or id",
        "operationId": "payment_method_delSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Payment Method"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/roles": {
      "description": "The collection of Role operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "get": {
        "summary": "Lists consumer organization roles.",
        "description": "Returns the list of roles for consumer organization in a catalog.",
        "operationId": "role_listConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Role (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/roles/{role}": {
      "description": "Role object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/role"
        }
      ],
      "get": {
        "summary": "Returns a consumer organization role.",
        "description": "Returns a role from a consumer organization in a catalog.",
        "operationId": "role_getConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Role (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/roles": {
      "description": "The collection of Role operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "get": {
        "summary": "Lists consumer organization roles.",
        "description": "Returns the list of roles for consumer organization in a catalog, as accessed through a space.",
        "operationId": "role_listConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Role (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/roles/{role}": {
      "description": "Role object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/role"
        }
      ],
      "get": {
        "summary": "Returns a consumer organization role.",
        "description": "Returns a role from a consumer organization in a catalog, as accessed through a space.",
        "operationId": "role_getConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Role (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/associates": {
      "description": "The collection of Associate operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "get": {
        "summary": "Lists associates.",
        "description": "Returns a list of associates of the given consumer org in a catalog.",
        "operationId": "associate_listConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Associate (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/associates/{associate}": {
      "description": "Associate object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/associate"
        }
      ],
      "get": {
        "summary": "Returns an associate.",
        "description": "Returns an associate of the given consumer org in a catalog.",
        "operationId": "associate_getConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Associate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Associate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Associate (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/associates": {
      "description": "The collection of Associate operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "get": {
        "summary": "Lists associates.",
        "description": "Returns a list of associates of the given consumer org in a catalog, as accessed through the given space.",
        "operationId": "associate_listConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Associate (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/associates/{associate}": {
      "description": "Associate object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/associate"
        }
      ],
      "get": {
        "summary": "Returns an associate.",
        "description": "Returns an associate of the given consumer org in a catalog, as accessed through the given space.",
        "operationId": "associate_getConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Associate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Associate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Associate (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/member-invitations": {
      "description": "The collection of Member Invitation operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "post": {
        "summary": "Creates a consummer organization member invitation.",
        "description": "Creates a member invitation to a consumer organization in a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "member_invitation_createConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      },
      "get": {
        "summary": "Lists consumer organization member invitations.",
        "description": "Returns the list of member invitations for a consumer organization in a catalog.",
        "operationId": "member_invitation_listConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      },
      "delete": {
        "summary": "Clears consumer organization member invitations.",
        "description": "Removes all member invitations for a consumer organization in a catalog.",
        "operationId": "member_invitation_clearConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/member-invitations/{member-invitation}": {
      "description": "Member Invitation object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "get": {
        "summary": "Returns a consumer organization member invitation.",
        "description": "Returns a member invitation to a consumer organization in a catalog.",
        "operationId": "member_invitation_getConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a consumer organization member invitation.",
        "description": "Updates a member invitation to a consumer organization in a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "member_invitation_updateConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      },
      "delete": {
        "summary": "Creates a consumer organization member invitation.",
        "description": "Deletes a member invitation to a consumer organization in a catalog.",
        "operationId": "member_invitation_delConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/member-invitations/{member-invitation}/regenerate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Regenerate the Member Invitation",
        "description": "Regenerate the Member Invitation",
        "operationId": "member_invitation_regenerateConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/member-invitations": {
      "description": "The collection of Member Invitation operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "post": {
        "summary": "Creates a consummer organization member invitation.",
        "description": "Creates a member invitation to a consumer organization in a catalog, as accessed through a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "member_invitation_createConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      },
      "get": {
        "summary": "Lists consumer organization member invitations.",
        "description": "Returns the list of member invitations for a consumer organization in a catalog, as accessed through a space.",
        "operationId": "member_invitation_listConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      },
      "delete": {
        "summary": "Clears consumer organization member invitations.",
        "description": "Removes all member invitations for a consumer organization in a catalog, as accessed through a space.",
        "operationId": "member_invitation_clearConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/member-invitations/{member-invitation}": {
      "description": "Member Invitation object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "get": {
        "summary": "Returns a consumer organization member invitation.",
        "description": "Returns a member invitation to a consumer organization in a catalog, as accessed through a space.",
        "operationId": "member_invitation_getConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a consumer organization member invitation.",
        "description": "Updates a member invitation to a consumer organization in a catalog, as accessed through a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n",
        "operationId": "member_invitation_updateConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a consumer organization member invitation.",
        "description": "Deletes a member invitation to a consumer organization in a catalog, as accessed through a space.",
        "operationId": "member_invitation_delConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/member-invitations/{member-invitation}/regenerate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Regenerate the Member Invitation",
        "description": "Regenerate the Member Invitation",
        "operationId": "member_invitation_regenerateConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member Invitation (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/members": {
      "description": "The collection of Member operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "post": {
        "summary": "Creates a consumer organization member.",
        "description": "Adds a member to a consumer org in a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n          - user_registry_url\n",
        "operationId": "member_createConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member (ConsumerOrg Scope)"
        ]
      },
      "get": {
        "summary": "Lists consumer organization members.",
        "description": "Returns the list of members of a consumer organization in a catalog.",
        "operationId": "member_listConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member (ConsumerOrg Scope)"
        ]
      },
      "delete": {
        "summary": "Clears consumer organization members.",
        "description": "Removes all members from a consumer org in a catalog.",
        "operationId": "member_clearConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/members/{member}": {
      "description": "Member object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/member"
        }
      ],
      "get": {
        "summary": "Returns a consumer organization member.",
        "description": "Returns a member of a consumer organization in a catalog.",
        "operationId": "member_getConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member (ConsumerOrg Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a consumer organization member.",
        "description": "Updates a member of a consumer organization in a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n          - user_registry_url\n",
        "operationId": "member_updateConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member (ConsumerOrg Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a consumer organization member.",
        "description": "Removes a member from a consumer organization in a catalog.",
        "operationId": "member_delConsumerOrgScope",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/members": {
      "description": "The collection of Member operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "post": {
        "summary": "Creates a consumer organization member.",
        "description": "Adds a member to a consumer organization in a catalog, as accessed through a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n          - user_registry_url\n",
        "operationId": "member_createConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member (ConsumerOrg Scope)"
        ]
      },
      "get": {
        "summary": "Lists consumer organization members.",
        "description": "Returns the list of members of a consumer organization in a catalog, as accessed through a space.",
        "operationId": "member_listConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member (ConsumerOrg Scope)"
        ]
      },
      "delete": {
        "summary": "Clears consumer organization members.",
        "description": "Removes all members from a consumer org in a catalog, as accessed through a space.",
        "operationId": "member_clearConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/members/{member}": {
      "description": "Member object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/member"
        }
      ],
      "get": {
        "summary": "Returns a consumer organization member.",
        "description": "Returns a member of a consumer organization in a catalog, as accessed through a space.",
        "operationId": "member_getConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member (ConsumerOrg Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a consumer organization member.",
        "description": "Updates a member of a consumer organization in a catalog, as accessed through a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - space_url\n          - consumer_org_url\n          - user_registry_url\n",
        "operationId": "member_updateConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member (ConsumerOrg Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a consumer organization member.",
        "description": "Removes a member from a consumer organization in a catalog, as accessed through a space.",
        "operationId": "member_delConsumerOrgScopeSpaceInitiated",
        "security": [
          {
            "oauth": [
              "consumer-org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Member (ConsumerOrg Scope)"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{consumer-org}/apps": {
      "description": "The collection of Application operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "post": {
        "summary": "Creates a consumer app.",
        "description": "Creates a new app belonging to the given consumer org in a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - consumer_org_url\n",
        "operationId": "app_create",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application"
        ]
      },
      "get": {
        "summary": "Lists consumer apps.",
        "description": "Returns the list of apps belonging to the given consumer org in a catalog.",
        "operationId": "app_list",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AppList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application"
        ]
      },
      "delete": {
        "summary": "Clears apps from a consumer org.",
        "description": "Deletes all apps from the given consumer org in a catalog.",
        "operationId": "app_clear",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application"
        ]
      }
    },
    "/apps/{org}/{catalog}/{consumer-org}/{app}": {
      "description": "Application object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        }
      ],
      "get": {
        "summary": "Returns a consumer app.",
        "description": "Returns the app with the given name or id belonging to the given consumer org in a catalog.",
        "operationId": "app_get",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application"
        ]
      },
      "patch": {
        "summary": "Updates a consumer app.",
        "description": "Updates the given app belonging to a consumer org in a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - consumer_org_url\n",
        "operationId": "app_update",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application"
        ]
      },
      "delete": {
        "summary": "Deletes a consumer app.",
        "description": "Deletes the app with the given name or id from a consumer org in a catalog.",
        "operationId": "app_del",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application"
        ]
      }
    },
    "/consumer-orgs/{org}/{catalog}/{space}/{consumer-org}/apps": {
      "description": "The collection of Application operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        }
      ],
      "post": {
        "summary": "Creates a consumer app.",
        "description": "Creates a new app belonging to the given consumer org in a catalog, as accessed through the given space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - consumer_org_url\n",
        "operationId": "app_createSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application"
        ]
      },
      "get": {
        "summary": "Lists consumer apps.",
        "description": "Returns a list of apps belonging to the given consumer org in a catalog, as accessed through the given space.",
        "operationId": "app_listSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AppList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application"
        ]
      },
      "delete": {
        "summary": "Clears apps from a consumer org.",
        "description": "Deletes all apps from the given consumer org in a catalog, as accessed through the given space.",
        "operationId": "app_clearSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application"
        ]
      }
    },
    "/apps/{org}/{catalog}/{space}/{consumer-org}/{app}": {
      "description": "Application object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        }
      ],
      "get": {
        "summary": "Returns a consumer app.",
        "description": "Returns the app with the given name or id belonging to the given consumer org in a catalog, as accessed through the given space.",
        "operationId": "app_getSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application"
        ]
      },
      "patch": {
        "summary": "Updates a consumer app.",
        "description": "Updates the given app belonging to a consumer org in a catalog, as accessed through the given space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - consumer_org_url\n",
        "operationId": "app_updateSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application"
        ]
      },
      "delete": {
        "summary": "Deletes a consumer app.",
        "description": "Deletes the app with the given name or id from a consumer org in a catalog, as accessed through the given space.",
        "operationId": "app_delSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application"
        ]
      }
    },
    "/apps/{org}/{catalog}/{consumer-org}/{app}/credentials": {
      "description": "The collection of Application Credential operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        }
      ],
      "post": {
        "summary": "Creates app credentials.",
        "description": "Adds a new set of credentials to an app in a catalog.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - consumer_org_url\n          - app_url\n",
        "operationId": "credential_create",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      },
      "get": {
        "summary": "Lists app credentials.",
        "description": "Returns the list of credentials for an app in a catalog.",
        "operationId": "credential_list",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{catalog}/{consumer-org}/{app}/credentials/{credential}": {
      "description": "Application Credential object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/credential"
        }
      ],
      "get": {
        "summary": "Returns app credentials.",
        "description": "Returns the given set of credentials for an app in a catalog.",
        "operationId": "credential_get",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      },
      "patch": {
        "summary": "Updates credentials for an app.",
        "description": "Updates the given set of credentials for an app in a catalog.\n\n          Fields not allowed to be null:\n          - client_id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - consumer_org_url\n          - app_url\n",
        "operationId": "credential_update",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      },
      "delete": {
        "summary": "Deletes app credentials.",
        "description": "Removes the given set of credentials from an app in a catalog.",
        "operationId": "credential_del",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{catalog}/{consumer-org}/{app}/credentials/{credential}/reset": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/credential"
        }
      ],
      "post": {
        "summary": "Reset the client id and client secret",
        "description": "Reset the client id and client secret",
        "operationId": "credential_reset",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{catalog}/{consumer-org}/{app}/credentials/{credential}/reset-client-secret": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/credential"
        }
      ],
      "post": {
        "summary": "Reset the client secret",
        "description": "Reset the client secret",
        "operationId": "credential_resetClientSecret",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{catalog}/{consumer-org}/{app}/credentials/{credential}/verify-client-secret": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/credential"
        }
      ],
      "post": {
        "summary": "Verify the client secret",
        "description": "Verify the client secret",
        "operationId": "credential_verifyClientSecret",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{catalog}/{space}/{consumer-org}/{app}/credentials": {
      "description": "The collection of Application Credential operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        }
      ],
      "post": {
        "summary": "Creates app credentials.",
        "description": "Adds a new set of credentials to an app in a catalog, as accessed through a space.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - consumer_org_url\n          - app_url\n",
        "operationId": "credential_createSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      },
      "get": {
        "summary": "Lists app credentials.",
        "description": "Returns the list of credentials for an app in a catalog, as accessed through a space.",
        "operationId": "credential_listSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      },
      "delete": {
        "summary": "Clears app credentials.",
        "description": "Removes all credentials for an app in a catalog, as accessed through a space.",
        "operationId": "credential_clearSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{catalog}/{space}/{consumer-org}/{app}/credentials/{credential}": {
      "description": "Application Credential object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/credential"
        }
      ],
      "get": {
        "summary": "Returns app credentials.",
        "description": "Returns the given set of credentials for an app in a catalog, as accessed through a space.",
        "operationId": "credential_getSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      },
      "patch": {
        "summary": "Updates credentials for an app.",
        "description": "Updates the given set of credentials for an app in a catalog, as accessed through a space.\n\n          Fields not allowed to be null:\n          - client_id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - consumer_org_url\n          - app_url\n",
        "operationId": "credential_updateSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      },
      "delete": {
        "summary": "Deletes app credentials.",
        "description": "Removes the given set of credentials from an app in a catalog, as accessed through a space.",
        "operationId": "credential_delSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{catalog}/{space}/{consumer-org}/{app}/credentials/{credential}/reset": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/credential"
        }
      ],
      "post": {
        "summary": "Reset the client id and client secret",
        "description": "Reset the client id and client secret",
        "operationId": "credential_resetSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{catalog}/{space}/{consumer-org}/{app}/credentials/{credential}/reset-client-secret": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/credential"
        }
      ],
      "post": {
        "summary": "Reset the client secret",
        "description": "Reset the client secret",
        "operationId": "credential_resetClientSecretSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{catalog}/{space}/{consumer-org}/{app}/credentials/{credential}/verify-client-secret": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/credential"
        }
      ],
      "post": {
        "summary": "Verify the client secret",
        "description": "Verify the client secret",
        "operationId": "credential_verifyClientSecretSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{catalog}/{consumer-org}/{app}/subscriptions": {
      "description": "The collection of Subscription operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        }
      ],
      "post": {
        "summary": "Creates a subscription.",
        "description": "Create a subscription for an app belonging to a connsumer organization in a catalog.\n\n          Required fields:\n          - product_url\n          - plan\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - consumer_org_url\n          - app_url\n",
        "operationId": "subscription_create",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Subscription"
        ]
      },
      "get": {
        "summary": "Lists subscriptions.",
        "description": "Returns the list of subscriptions for an app belonging to a connsumer organization in a catalog.",
        "operationId": "subscription_list",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/product_url"
          },
          {
            "$ref": "#/components/parameters/plan"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Subscription"
        ]
      },
      "delete": {
        "summary": "Clears subscriptions.",
        "description": "Deletes all subscriptions for an app belonging to a connsumer organization in a catalog.",
        "operationId": "subscription_clear",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Subscription"
        ]
      }
    },
    "/apps/{org}/{catalog}/{consumer-org}/{app}/subscriptions/{subscription}": {
      "description": "Subscription object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/subscription"
        }
      ],
      "get": {
        "summary": "Returns a subscription.",
        "description": "Returns a subscription for an app belonging to a connsumer organization in a catalog.",
        "operationId": "subscription_get",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Subscription"
        ]
      },
      "patch": {
        "summary": "Updates a subscription.",
        "description": "Updates a subscription for an app belonging to a connsumer organization in a catalog.\n\n          Fields not allowed:\n          - billing_identifiers\n          - plan_title\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - consumer_org_url\n          - app_url\n",
        "operationId": "subscription_update",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Subscription"
        ]
      },
      "delete": {
        "summary": "Deletes a subscription.",
        "description": "Deletes a subscriptions for an app belonging to a connsumer organization in a catalog.",
        "operationId": "subscription_del",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Subscription"
        ]
      }
    },
    "/apps/{org}/{catalog}/{space}/{consumer-org}/{app}/subscriptions": {
      "description": "The collection of Subscription operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        }
      ],
      "post": {
        "summary": "Creates a subscription.",
        "description": "Create a subscriptions for an app belonging to a connsumer organization in a catalog, as accessed through a space.\n\n          Required fields:\n          - product_url\n          - plan\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - consumer_org_url\n          - app_url\n",
        "operationId": "subscription_createSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Subscription"
        ]
      },
      "get": {
        "summary": "Lists subscriptions.",
        "description": "Returns the list of subscriptions for an app belonging to a connsumer organization in a catalog, as accessed through a space.",
        "operationId": "subscription_listSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/product_url"
          },
          {
            "$ref": "#/components/parameters/plan"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Subscription"
        ]
      },
      "delete": {
        "summary": "Clears subscriptions.",
        "description": "Deletes all subscriptions for an app belonging to a connsumer organization in a catalog, as accessed through a space.",
        "operationId": "subscription_clearSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Subscription"
        ]
      }
    },
    "/apps/{org}/{catalog}/{space}/{consumer-org}/{app}/subscriptions/{subscription}": {
      "description": "Subscription object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/subscription"
        }
      ],
      "get": {
        "summary": "Returns a subscription.",
        "description": "Returns a subscription for an app belonging to a connsumer organization in a catalog, as accessed through a space.",
        "operationId": "subscription_getSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:view:all"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Subscription"
        ]
      },
      "patch": {
        "summary": "Updates a subscription.",
        "description": "Updates a subscription for an app belonging to a connsumer organization in a catalog, as accessed through a space.\n\n          Fields not allowed:\n          - billing_identifiers\n          - plan_title\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n          - consumer_org_url\n          - app_url\n",
        "operationId": "subscription_updateSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Subscription"
        ]
      },
      "delete": {
        "summary": "Deletes a subscription.",
        "description": "Deletes a subscriptions for an app belonging to a connsumer organization in a catalog, as accessed through a space.",
        "operationId": "subscription_delSpaceInitiated",
        "security": [
          {
            "oauth": [
              "app:manage:all"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Management",
          "Resource: Subscription"
        ]
      }
    },
    "/orgs/{org}/drafts": {
      "description": "The collection of Draft operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Lists drafts.",
        "description": "Returns the complete list of draft APIs and products belonging to a provider organization.",
        "operationId": "draft_list",
        "security": [
          {
            "oauth": [
              "api-drafts:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft"
        ]
      },
      "delete": {
        "summary": "Deletes drafts.",
        "description": "Removes all drafts (APIs and products).",
        "operationId": "draft_clear",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft"
        ]
      }
    },
    "/orgs/{org}/drafts/introspect-wsdl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Introspect the WSDL",
        "description": "Introspect the WSDL",
        "operationId": "draft_introspectWsdl",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/wsdl_services"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntrospectWsdlMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WsdlServices"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/WsdlServices"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-products": {
      "description": "Draft Product operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a draft product.",
        "description": "Creates a draft product from the given content, which may represent an product document or a product and associated APIs.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "draft_product_create",
        "security": [
          {
            "oauth": [
              "product-drafts:edit"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftProduct"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/DraftProduct"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductMultipart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      },
      "get": {
        "summary": "Lists draft products.",
        "description": "Returns all draft products belonging to a provider organization.",
        "operationId": "draft_product_listAll",
        "security": [
          {
            "oauth": [
              "product-drafts:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProductList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProductList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      },
      "delete": {
        "summary": "Clears draft products.",
        "description": "Deletes all draft products.",
        "operationId": "draft_product_clearAll",
        "security": [
          {
            "oauth": [
              "product-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-products/{draft-product-name}": {
      "description": "The collection of Draft Product operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-product-name"
        }
      ],
      "get": {
        "summary": "Lists draft product versions.",
        "description": "Returns all versions of the named draft product.",
        "operationId": "draft_product_list",
        "security": [
          {
            "oauth": [
              "product-drafts:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProductList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProductList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      },
      "delete": {
        "summary": "Clears draft product versions.",
        "description": "Deletes all versions of the named draft product.",
        "operationId": "draft_product_clear",
        "security": [
          {
            "oauth": [
              "product-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-products/{draft-product-id}": {
      "description": "Draft Product object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-product-id"
        }
      ],
      "get": {
        "summary": "Returns a draft product.",
        "description": "Returns the given draft product.",
        "operationId": "draft_product_get",
        "security": [
          {
            "oauth": [
              "product-drafts:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      },
      "patch": {
        "summary": "Updates a draft product.",
        "description": "Updates a draft product from the given content, which may represent an product document or a product and associated APIs.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "draft_product_update",
        "security": [
          {
            "oauth": [
              "product-drafts:edit"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftProduct"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/DraftProduct"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      },
      "delete": {
        "summary": "Deletes a draft product.",
        "description": "Deletes the given product from drafts.",
        "operationId": "draft_product_del",
        "security": [
          {
            "oauth": [
              "product-drafts:edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-products/{draft-product-name}/{draft-product-version}": {
      "description": "Draft Product object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-product-name"
        },
        {
          "$ref": "#/components/parameters/draft-product-version"
        }
      ],
      "get": {
        "summary": "Returns a draft product.",
        "description": "Returns the given draft product.",
        "operationId": "draft_product_getByNameVersion",
        "security": [
          {
            "oauth": [
              "product-drafts:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      },
      "patch": {
        "summary": "Updates a draft product.",
        "description": "Updates a draft product from the given content, which may represent an product document or a product and associated APIs.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "draft_product_updateByNameVersion",
        "security": [
          {
            "oauth": [
              "product-drafts:edit"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftProduct"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/DraftProduct"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DraftProductMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      },
      "delete": {
        "summary": "Delete a Draft Product",
        "description": "Delete a Draft Product",
        "operationId": "draft_product_delByNameVersion",
        "security": [
          {
            "oauth": [
              "product-drafts:edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProduct"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-products/{draft-product-id}/validate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-product-id"
        }
      ],
      "post": {
        "summary": "Validate the draft product",
        "description": "Validate the draft product",
        "operationId": "draft_product_validate",
        "security": [
          {
            "oauth": [
              "product-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/scope"
          },
          {
            "$ref": "#/components/parameters/catalog_name"
          },
          {
            "$ref": "#/components/parameters/space_name"
          },
          {
            "$ref": "#/components/parameters/gateway_service_names"
          },
          {
            "$ref": "#/components/parameters/validate_apis"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResults"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResults"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-products/{draft-product-name}/{draft-product-version}/validate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-product-name"
        },
        {
          "$ref": "#/components/parameters/draft-product-version"
        }
      ],
      "post": {
        "summary": "Validate the draft product",
        "description": "Validate the draft product",
        "operationId": "draft_product_validateByNameVersion",
        "security": [
          {
            "oauth": [
              "product-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/scope"
          },
          {
            "$ref": "#/components/parameters/catalog_name"
          },
          {
            "$ref": "#/components/parameters/space_name"
          },
          {
            "$ref": "#/components/parameters/gateway_service_names"
          },
          {
            "$ref": "#/components/parameters/validate_apis"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResults"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResults"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-products/validate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Validate the draft product object",
        "description": "Validate the draft product object",
        "operationId": "draft_product_validateObject",
        "security": [
          {
            "oauth": [
              "product-drafts:edit"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftProduct"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/DraftProduct"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/scope"
          },
          {
            "$ref": "#/components/parameters/catalog_name"
          },
          {
            "$ref": "#/components/parameters/space_name"
          },
          {
            "$ref": "#/components/parameters/gateway_service_names"
          },
          {
            "$ref": "#/components/parameters/validate_apis"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResults"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResults"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-products/{draft-product-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-product-id"
        }
      ],
      "get": {
        "summary": "Get the Draft Product document",
        "description": "Get the Draft Product document",
        "operationId": "draft_product_getDocument",
        "security": [
          {
            "oauth": [
              "product-drafts:edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProductDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProductDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-products/{draft-product-name}/{draft-product-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-product-name"
        },
        {
          "$ref": "#/components/parameters/draft-product-version"
        }
      ],
      "get": {
        "summary": "Get the Draft Product document by name and version",
        "description": "Get the Draft Product document by name and version",
        "operationId": "draft_product_getDocumentByNameVersion",
        "security": [
          {
            "oauth": [
              "product-drafts:edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProductDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftProductDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft Product by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis": {
      "description": "Draft API operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Creates a draft API.",
        "description": "Creates a draft API from the given content, which may represent an OpenAPI or WSDL-defined API.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "draft_api_create",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_type"
          },
          {
            "$ref": "#/components/parameters/gateway_type"
          },
          {
            "$ref": "#/components/parameters/assembly_type"
          },
          {
            "$ref": "#/components/parameters/wsdl_service"
          },
          {
            "$ref": "#/components/parameters/disable_ws_security"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftAPI"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/DraftAPI"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DraftAPIMultipart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      },
      "get": {
        "summary": "Lists draft APIs.",
        "description": "Returns all draft APIs belonging to a provider organization.",
        "operationId": "draft_api_listAll",
        "security": [
          {
            "oauth": [
              "api-drafts:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      },
      "delete": {
        "summary": "Clears draft APIs.",
        "description": "Removes all APIs from drafts.",
        "operationId": "draft_api_clearAll",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/{draft-api-name}": {
      "description": "The collection of Draft API operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-api-name"
        }
      ],
      "get": {
        "summary": "Lists draft API versions.",
        "description": "Returns all versions of the draft API with the given name.",
        "operationId": "draft_api_list",
        "security": [
          {
            "oauth": [
              "api-drafts:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      },
      "delete": {
        "summary": "Clears draft API versions.",
        "description": "Removes all versions of the named API from drafts.",
        "operationId": "draft_api_clear",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/{draft-api-id}": {
      "description": "Draft API object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-api-id"
        }
      ],
      "get": {
        "summary": "Returns a draft API.",
        "description": "Returns the given draft API.",
        "operationId": "draft_api_get",
        "security": [
          {
            "oauth": [
              "api-drafts:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      },
      "patch": {
        "summary": "Updates a draft API.",
        "description": "Updates the given draft API definition.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "draft_api_update",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_type"
          },
          {
            "$ref": "#/components/parameters/wsdl_service"
          },
          {
            "$ref": "#/components/parameters/disable_ws_security"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftAPI"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/DraftAPI"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DraftAPIMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      },
      "delete": {
        "summary": "Deletes a draft API.",
        "description": "Deletes the given API from drafts.",
        "operationId": "draft_api_del",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/{draft-api-name}/{draft-api-version}": {
      "description": "Draft API object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-api-name"
        },
        {
          "$ref": "#/components/parameters/draft-api-version"
        }
      ],
      "get": {
        "summary": "Returns a draft API.",
        "description": "Returns the given draft API.",
        "operationId": "draft_api_getByNameVersion",
        "security": [
          {
            "oauth": [
              "api-drafts:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      },
      "patch": {
        "summary": "Updates a draft API.",
        "description": "Updates the given draft API definition.\n\n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "draft_api_updateByNameVersion",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_type"
          },
          {
            "$ref": "#/components/parameters/wsdl_service"
          },
          {
            "$ref": "#/components/parameters/disable_ws_security"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftAPI"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/DraftAPI"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DraftAPIMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      },
      "delete": {
        "summary": "Delete a Draft API",
        "description": "Delete a Draft API",
        "operationId": "draft_api_delByNameVersion",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPI"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/{draft-api-id}/validate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-api-id"
        }
      ],
      "post": {
        "summary": "Validate the draft api",
        "description": "Validate the draft api",
        "operationId": "draft_api_validate",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/scope"
          },
          {
            "$ref": "#/components/parameters/catalog_name"
          },
          {
            "$ref": "#/components/parameters/space_name"
          },
          {
            "$ref": "#/components/parameters/gateway_service_names"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResults"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResults"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/{draft-api-name}/{draft-api-version}/validate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-api-name"
        },
        {
          "$ref": "#/components/parameters/draft-api-version"
        }
      ],
      "post": {
        "summary": "Validate the draft api",
        "description": "Validate the draft api",
        "operationId": "draft_api_validateByNameVersion",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/scope"
          },
          {
            "$ref": "#/components/parameters/catalog_name"
          },
          {
            "$ref": "#/components/parameters/space_name"
          },
          {
            "$ref": "#/components/parameters/gateway_service_names"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResults"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResults"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/validate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Validate the draft api object",
        "description": "Validate the draft api object",
        "operationId": "draft_api_validateObject",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftAPI"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/DraftAPI"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/scope"
          },
          {
            "$ref": "#/components/parameters/catalog_name"
          },
          {
            "$ref": "#/components/parameters/space_name"
          },
          {
            "$ref": "#/components/parameters/gateway_service_names"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResults"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResults"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/{draft-api-id}/add-target-service": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-api-id"
        }
      ],
      "post": {
        "summary": "Add a target service",
        "description": "Add a target service",
        "operationId": "draft_api_addTargetService",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/wsdl_service"
          },
          {
            "$ref": "#/components/parameters/disable_ws_security"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TargetServiceMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/{draft-api-name}/{draft-api-version}/add-target-service": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-api-name"
        },
        {
          "$ref": "#/components/parameters/draft-api-version"
        }
      ],
      "post": {
        "summary": "Add a target service",
        "description": "Add a target service",
        "operationId": "draft_api_addTargetServiceByNameVersion",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/wsdl_service"
          },
          {
            "$ref": "#/components/parameters/disable_ws_security"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TargetServiceMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/{draft-api-id}/update-wsdl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-api-id"
        }
      ],
      "post": {
        "summary": "Update with a new wsdl",
        "description": "Update with a new wsdl",
        "operationId": "draft_api_updateWsdl",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TargetServiceMultipart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/{draft-api-name}/{draft-api-version}/update-wsdl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-api-name"
        },
        {
          "$ref": "#/components/parameters/draft-api-version"
        }
      ],
      "post": {
        "summary": "Update with a new wsdl",
        "description": "Update with a new wsdl",
        "operationId": "draft_api_updateWsdlByNameVersion",
        "security": [
          {
            "oauth": [
              "api-drafts:edit"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TargetServiceMultipart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/{draft-api-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-api-id"
        }
      ],
      "get": {
        "summary": "Get the Draft API document",
        "description": "Get the Draft API document",
        "operationId": "draft_api_getDocument",
        "security": [
          {
            "oauth": [
              "api-drafts:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/{draft-api-name}/{draft-api-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-api-name"
        },
        {
          "$ref": "#/components/parameters/draft-api-version"
        }
      ],
      "get": {
        "summary": "Get the Draft API document by name and version",
        "description": "Get the Draft API document by name and version",
        "operationId": "draft_api_getDocumentByNameVersion",
        "security": [
          {
            "oauth": [
              "api-drafts:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAPIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/{draft-api-id}/wsdl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-api-id"
        }
      ],
      "get": {
        "summary": "Get the Draft API wsdl document",
        "description": "Get the Draft API wsdl document",
        "operationId": "draft_api_getWsdl",
        "security": [
          {
            "oauth": [
              "api-drafts:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/wsdl": {},
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/orgs/{org}/drafts/draft-apis/{draft-api-name}/{draft-api-version}/wsdl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/draft-api-name"
        },
        {
          "$ref": "#/components/parameters/draft-api-version"
        }
      ],
      "get": {
        "summary": "Get the Draft API wsdl document by name and version",
        "description": "Get the Draft API wsdl document by name and version",
        "operationId": "draft_api_getWsdlByNameVersion",
        "security": [
          {
            "oauth": [
              "api-drafts:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/wsdl": {},
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Drafts",
          "Resource: Draft API by Id"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products": {
      "description": "Product operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists products.",
        "description": "Returns the list of products in a catalog.",
        "operationId": "product_listAllCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears products.",
        "description": "Removes all products from a catalog.",
        "operationId": "product_clearAllCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-name}": {
      "description": "The collection of Product operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-name"
        }
      ],
      "get": {
        "summary": "Lists products.",
        "description": "Returns the list of versions of the named product in a catalog.",
        "operationId": "product_listCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Clears product versions.",
        "description": "Removes all versions of the named product from a catalog.",
        "operationId": "product_clearCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-id}": {
      "description": "Product object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "get": {
        "summary": "Returns a product.",
        "description": "Returns a product in a catalog.",
        "operationId": "product_getCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a product in a catalog.",
        "description": "Updates a product in a catalog.\n\n          Fields not allowed:\n          - product\n          - catalog_product\n          - space_urls\n          - api_urls\n          - approval_history\n          - superseded_by\n          - supersedes\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "product_updateCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a product.",
        "description": "Removes a product from a catalog.",
        "operationId": "product_delCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-name}/{product-version}": {
      "description": "Product object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "get": {
        "summary": "Returns a product.",
        "description": "Returns a product in a catalog.",
        "operationId": "product_getByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a product in a catalog.",
        "description": "Updates a product in a catalog.\n\n          Fields not allowed:\n          - product\n          - catalog_product\n          - space_urls\n          - api_urls\n          - approval_history\n          - superseded_by\n          - supersedes\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "product_updateByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      },
      "delete": {
        "summary": "Delete a Product",
        "description": "Delete a Product",
        "operationId": "product_delByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-id}/replace": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "post": {
        "summary": "Hot replace a product",
        "description": "Hot replace a product",
        "operationId": "product_replaceCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-id}/supersede": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "post": {
        "summary": "Supersede a product",
        "description": "Supersede a product",
        "operationId": "product_supersedeCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-id}/set-migration-target": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "post": {
        "summary": "Set the migration target of a product",
        "description": "Set the migration target of a product",
        "operationId": "product_setMigrationTargetCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-id}/migrate-subscriptions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "post": {
        "summary": "Migrate list of subscriptions between products",
        "description": "Migrate list of subscriptions between products",
        "operationId": "product_migrateSubscriptionsCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MigrateSubscriptionSubset"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MigrateSubscriptionSubset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-id}/execute-migration-target": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "post": {
        "summary": "Migrate all subscriptions to their migration targets",
        "description": "Migrate all subscriptions to their migration targets",
        "operationId": "product_executeMigrationTargetCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-name}/{product-version}/replace": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "post": {
        "summary": "Hot replace the product",
        "description": "Hot replace the product",
        "operationId": "product_replaceByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-name}/{product-version}/supersede": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "post": {
        "summary": "Supersede a product",
        "description": "Supersede a product",
        "operationId": "product_supersedeByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-name}/{product-version}/set-migration-target": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "post": {
        "summary": "Set the migration target",
        "description": "Set the migration target",
        "operationId": "product_setMigrationTargetByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-name}/{product-version}/migrate-subscriptions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "post": {
        "summary": "Migrate list of subscriptions between products",
        "description": "Migrate list of subscriptions between products",
        "operationId": "product_migrateSubscriptionsByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MigrateSubscriptionSubset"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MigrateSubscriptionSubset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-name}/{product-version}/execute-migration-target": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "post": {
        "summary": "Migrate all subscriptions to their migration targets",
        "description": "Migrate all subscriptions to their migration targets",
        "operationId": "product_executeMigrationTargetByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "get": {
        "summary": "Get the Product document",
        "description": "Get the Product document",
        "operationId": "product_getDocumentCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/products/{product-name}/{product-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "get": {
        "summary": "Get the Product document by name and version",
        "description": "Get the Product document by name and version",
        "operationId": "product_getDocumentByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/apis": {
      "description": "API operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists APIs in a catalog.",
        "description": "Returns a list of all APIs in a catalog.",
        "operationId": "api_listAllCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/api_type"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/metadata"
          },
          {
            "$ref": "#/components/parameters/enforced"
          },
          {
            "$ref": "#/components/parameters/base_path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/apis/{api-name}": {
      "description": "The collection of API operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/api-name"
        }
      ],
      "get": {
        "summary": "Lists APIs in a catalog.",
        "description": "Returns a list of all APIs with the given name in a catalog. For a given name, multiple versions may exist.",
        "operationId": "api_listCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/api_type"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/metadata"
          },
          {
            "$ref": "#/components/parameters/enforced"
          },
          {
            "$ref": "#/components/parameters/base_path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/apis/{api-id}": {
      "description": "API object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/api-id"
        }
      ],
      "get": {
        "summary": "Returns an API object.",
        "description": "Returns the API object with the given id in a catalog.",
        "operationId": "api_getCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates an API.",
        "description": "Updates the API with the given id in a catalog.\n\n          Fields not allowed:\n          - name\n          - version\n          - api\n          - wsdl\n          - catalog_api\n          - catalog_url\n          - org_url\n          - gateway_api\n          - consumer_api\n          - space_urls\n          - gateway_service_urls\n          - user_registry_urls\n          - oauth_provider_urls\n          - tls_client_profile_urls\n          - extension_urls\n          - policy_urls\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "api_updateCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/API"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/apis/{api-name}/{api-version}": {
      "description": "API object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/api-name"
        },
        {
          "$ref": "#/components/parameters/api-version"
        }
      ],
      "get": {
        "summary": "Returns an API object.",
        "description": "Returns the API object with the given name and version in a catalog.",
        "operationId": "api_getByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates an API.",
        "description": "Updates the API with the given name and version in a catalog.\n\n          Fields not allowed:\n          - name\n          - version\n          - api\n          - wsdl\n          - catalog_api\n          - catalog_url\n          - org_url\n          - gateway_api\n          - consumer_api\n          - space_urls\n          - gateway_service_urls\n          - user_registry_urls\n          - oauth_provider_urls\n          - tls_client_profile_urls\n          - extension_urls\n          - policy_urls\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "api_updateByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/API"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/apis/{api-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/api-id"
        }
      ],
      "get": {
        "summary": "Get the API document",
        "description": "Get the API document",
        "operationId": "api_getDocumentCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/apis/{api-name}/{api-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/api-name"
        },
        {
          "$ref": "#/components/parameters/api-version"
        }
      ],
      "get": {
        "summary": "Get the API document by name and version",
        "description": "Get the API document by name and version",
        "operationId": "api_getDocumentByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/apis/{api-id}/wsdl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/api-id"
        }
      ],
      "get": {
        "summary": "Get the API wsdl document",
        "description": "Get the API wsdl document",
        "operationId": "api_getWsdlCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/wsdl": {},
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/apis/{api-name}/{api-version}/wsdl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/api-name"
        },
        {
          "$ref": "#/components/parameters/api-version"
        }
      ],
      "get": {
        "summary": "Get the API wsdl document by name and version",
        "description": "Get the API wsdl document by name and version",
        "operationId": "api_getWsdlByNameVersionCatalogScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/wsdl": {},
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Catalog Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products": {
      "description": "Product operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Lists products.",
        "description": "Returns the list of products in a space.",
        "operationId": "product_listAllSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears products.",
        "description": "Removes all products from a space.",
        "operationId": "product_clearAllSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-name}": {
      "description": "The collection of Product operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-name"
        }
      ],
      "get": {
        "summary": "Lists products.",
        "description": "Returns the list of versions of the named product in a space.",
        "operationId": "product_listSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Clears product versions.",
        "description": "Removes all versions of the named product from a space.",
        "operationId": "product_clearSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-id}": {
      "description": "Product object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "get": {
        "summary": "Returns a product.",
        "description": "Returns a product in a space.",
        "operationId": "product_getSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a product in a space.",
        "description": "Updates a product in a space.\n\n          Fields not allowed:\n          - product\n          - catalog_product\n          - space_urls\n          - api_urls\n          - approval_history\n          - superseded_by\n          - supersedes\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "product_updateSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Deletes a product.",
        "description": "Removes a product from a space.",
        "operationId": "product_delSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-name}/{product-version}": {
      "description": "Product object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "get": {
        "summary": "Returns a product.",
        "description": "Returns a product in a space.",
        "operationId": "product_getByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a product in a space.",
        "description": "Updates a product in a space.\n\n          Fields not allowed:\n          - product\n          - catalog_product\n          - space_urls\n          - api_urls\n          - approval_history\n          - superseded_by\n          - supersedes\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "product_updateByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      },
      "delete": {
        "summary": "Delete a Product",
        "description": "Delete a Product",
        "operationId": "product_delByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-id}/replace": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "post": {
        "summary": "Hot replace a product",
        "description": "Hot replace a product",
        "operationId": "product_replaceSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-id}/supersede": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "post": {
        "summary": "Supersede a product",
        "description": "Supersede a product",
        "operationId": "product_supersedeSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-id}/set-migration-target": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "post": {
        "summary": "Set the migration target of a product",
        "description": "Set the migration target of a product",
        "operationId": "product_setMigrationTargetSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-id}/migrate-subscriptions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "post": {
        "summary": "Migrate list of subscriptions between products",
        "description": "Migrate list of subscriptions between products",
        "operationId": "product_migrateSubscriptionsSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MigrateSubscriptionSubset"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MigrateSubscriptionSubset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-id}/execute-migration-target": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "post": {
        "summary": "Migrate all subscriptions to their migration targets",
        "description": "Migrate all subscriptions to their migration targets",
        "operationId": "product_executeMigrationTargetSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-name}/{product-version}/replace": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "post": {
        "summary": "Hot replace the product",
        "description": "Hot replace the product",
        "operationId": "product_replaceByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-name}/{product-version}/supersede": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "post": {
        "summary": "Supersede a product",
        "description": "Supersede a product",
        "operationId": "product_supersedeByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-name}/{product-version}/set-migration-target": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "post": {
        "summary": "Set the migration target",
        "description": "Set the migration target",
        "operationId": "product_setMigrationTargetByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ProductPlanMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-name}/{product-version}/migrate-subscriptions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "post": {
        "summary": "Migrate list of subscriptions between products",
        "description": "Migrate list of subscriptions between products",
        "operationId": "product_migrateSubscriptionsByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MigrateSubscriptionSubset"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MigrateSubscriptionSubset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-name}/{product-version}/execute-migration-target": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "post": {
        "summary": "Migrate all subscriptions to their migration targets",
        "description": "Migrate all subscriptions to their migration targets",
        "operationId": "product_executeMigrationTargetByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "get": {
        "summary": "Get the Product document",
        "description": "Get the Product document",
        "operationId": "product_getDocumentSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/products/{product-name}/{product-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "get": {
        "summary": "Get the Product document by name and version",
        "description": "Get the Product document by name and version",
        "operationId": "product_getDocumentByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/apis": {
      "description": "API operations across all collections",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Lists APIs in a space.",
        "description": "Returns a list of all APIs in a space within a catalog.",
        "operationId": "api_listAllSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/api_type"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/apis/{api-name}": {
      "description": "The collection of API operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/api-name"
        }
      ],
      "get": {
        "summary": "Lists APIs in a space.",
        "description": "Returns a list of all APIs with the given name in a space within a catalog. For a given name, multiple versions may exist.",
        "operationId": "api_listSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/api_type"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/apis/{api-id}": {
      "description": "API object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/api-id"
        }
      ],
      "get": {
        "summary": "Returns an API object.",
        "description": "Returns the API object with the given id in a space within a catalog.",
        "operationId": "api_getSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Updates an API.",
        "description": "Updates the API with the given id in a space within a catalog.\n\n          Fields not allowed:\n          - name\n          - version\n          - api\n          - wsdl\n          - catalog_api\n          - catalog_url\n          - org_url\n          - gateway_api\n          - consumer_api\n          - space_urls\n          - gateway_service_urls\n          - user_registry_urls\n          - oauth_provider_urls\n          - tls_client_profile_urls\n          - extension_urls\n          - policy_urls\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "api_updateSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/API"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/apis/{api-name}/{api-version}": {
      "description": "API object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/api-name"
        },
        {
          "$ref": "#/components/parameters/api-version"
        }
      ],
      "get": {
        "summary": "Returns an API object.",
        "description": "Returns the API object with the given name and version in a space within a catalog.",
        "operationId": "api_getByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Space Scope)"
        ]
      },
      "patch": {
        "summary": "Updates an API.",
        "description": "Updates the API with the given name and version in a space within a catalog.\n\n          Fields not allowed:\n          - name\n          - version\n          - api\n          - wsdl\n          - catalog_api\n          - catalog_url\n          - org_url\n          - gateway_api\n          - consumer_api\n          - space_urls\n          - gateway_service_urls\n          - user_registry_urls\n          - oauth_provider_urls\n          - tls_client_profile_urls\n          - extension_urls\n          - policy_urls\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - catalog_url\n",
        "operationId": "api_updateByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "product:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/API"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/apis/{api-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/api-id"
        }
      ],
      "get": {
        "summary": "Get the API document",
        "description": "Get the API document",
        "operationId": "api_getDocumentSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/apis/{api-name}/{api-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/api-name"
        },
        {
          "$ref": "#/components/parameters/api-version"
        }
      ],
      "get": {
        "summary": "Get the API document by name and version",
        "description": "Get the API document by name and version",
        "operationId": "api_getDocumentByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/apis/{api-id}/wsdl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/api-id"
        }
      ],
      "get": {
        "summary": "Get the API wsdl document",
        "description": "Get the API wsdl document",
        "operationId": "api_getWsdlSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/wsdl": {},
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Space Scope)"
        ]
      }
    },
    "/spaces/{org}/{catalog}/{space}/apis/{api-name}/{api-version}/wsdl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/api-name"
        },
        {
          "$ref": "#/components/parameters/api-version"
        }
      ],
      "get": {
        "summary": "Get the API wsdl document by name and version",
        "description": "Get the API wsdl document by name and version",
        "operationId": "api_getWsdlByNameVersionSpaceScope",
        "security": [
          {
            "oauth": [
              "product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/wsdl": {},
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Space Scope)"
        ]
      }
    },
    "/me": {
      "description": "Me object operations",
      "get": {
        "summary": "Returns the current user.",
        "description": "Returns the user profile for the currently authenticated user.",
        "operationId": "me_singletonGet",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/context"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      },
      "put": {
        "summary": "Updates the current user.",
        "description": "Updates the user profile for the currently authenticated user.\n\n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "me_singletonUpdate",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Me"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Me"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      },
      "delete": {
        "summary": "Deletes the current user.",
        "description": "Removes the currently authenticated user.",
        "operationId": "me_singletonDel",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      }
    },
    "/me/change-password": {
      "post": {
        "summary": "Change my password",
        "description": "Change my password",
        "operationId": "me_changePassword",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      }
    },
    "/me/reset-password": {
      "post": {
        "summary": "Reset password",
        "description": "Reset password",
        "operationId": "me_resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      }
    },
    "/me/sign-out": {
      "post": {
        "summary": "Sign out",
        "description": "Sign out",
        "operationId": "me_signOut",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "302": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      }
    },
    "/permissions": {
      "description": "The collection of My Permission operations",
      "get": {
        "summary": "Lists the user's permissions.",
        "description": "Returns the list of permissions for the currently authenticated user.",
        "operationId": "my_permission_list",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyPermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MyPermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: My Permission"
        ]
      }
    },
    "/tasks": {
      "description": "The collection of My Task operations",
      "get": {
        "summary": "Lists the user's tasks.",
        "description": "Returns the list of tasks (approvals) for the currently authenticated user.",
        "operationId": "my_task_list",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyTaskList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MyTaskList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: My Task"
        ]
      }
    },
    "/originated-tasks": {
      "description": "The collection of Originated Task operations",
      "get": {
        "summary": "Returns the user's originated tasks.",
        "description": "Returns the list of tasks originated by the currently authenticated user.",
        "operationId": "originated_task_list",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OriginatedTaskList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OriginatedTaskList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Originated Task"
        ]
      }
    },
    "/orgs": {
      "description": "The collection of My Organization operations",
      "get": {
        "summary": "Lists the user's organizations.",
        "description": "Returns the list of organizations of which the currently authenticated user is a member.",
        "operationId": "my_org_list",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OrgList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: My Organization"
        ]
      }
    },
    "/catalogs": {
      "description": "The collection of My Catalog operations",
      "get": {
        "summary": "Lists the user's catalogs.",
        "description": "Returns the list of catalogs of which the currently authenticated user is a member.",
        "operationId": "my_catalog_list",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: My Catalog"
        ]
      }
    },
    "/spaces": {
      "description": "The collection of My Space operations",
      "get": {
        "summary": "Lists the user's spaces.",
        "description": "Returns the list of spaces of which the currently authenticated user is a member.",
        "operationId": "my_space_list",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: My Space"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/webhooks": {
      "description": "The collection of Webhook operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists catalog webhooks.",
        "description": "Returns the list of webhook registrations for a catalog.",
        "operationId": "webhook_listCatalogScope",
        "security": [
          {
            "oauth": [
              "webhook:view",
              "cloud:view",
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Webhook (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/webhooks/{webhook}": {
      "description": "Webhook object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/webhook"
        }
      ],
      "get": {
        "summary": "Returns a catalog webhook.",
        "description": "Returns a webhook registration for a catalog.",
        "operationId": "webhook_getCatalogScope",
        "security": [
          {
            "oauth": [
              "webhook:view",
              "cloud:view",
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Webhook (Catalog Scope)"
        ]
      },
      "patch": {
        "summary": "Updates a catalog webhook.",
        "description": "Updates a webhook registration for a catalog.\n\n          Fields not allowed:\n          - state_change_history\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "webhook_updateCatalogScope",
        "security": [
          {
            "oauth": [
              "webhook:manage",
              "cloud:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Webhook (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/primary-events": {
      "description": "The collection of Primary Event operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists catalog events.",
        "description": "Returns the list of events for a catalog.",
        "operationId": "primary_event_listCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/state"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEventList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEventList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Primary Event (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/primary-events/{primary-event}": {
      "description": "Primary Event object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/primary-event"
        }
      ],
      "get": {
        "summary": "Returns a catalog event.",
        "description": "Returns an event for a catalog.",
        "operationId": "primary_event_getCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEvent"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEvent"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Primary Event (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/primary-events": {
      "description": "The collection of Primary Event operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        }
      ],
      "get": {
        "summary": "Lists configured gateway service events.",
        "description": "Returns the list of events for a catalog.",
        "operationId": "primary_event_listConfiguredGatewayServiceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/state"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEventList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEventList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Primary Event (ConfiguredGatewayService Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/configured-gateway-services/{configured-gateway-service}/primary-events/{primary-event}": {
      "description": "Primary Event object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/configured-gateway-service"
        },
        {
          "$ref": "#/components/parameters/primary-event"
        }
      ],
      "get": {
        "summary": "Returns a configured gateway service event.",
        "description": "Returns an event for a configured gateway service for a catalog.",
        "operationId": "primary_event_getConfiguredGatewayServiceScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEvent"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryEvent"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Primary Event (ConfiguredGatewayService Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/webhooks/{webhook}/subscriber-events": {
      "description": "The collection of Subscriber Event operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/webhook"
        }
      ],
      "get": {
        "summary": "Lists catalog webhook events.",
        "description": "Returns the list of webhook subscriber events for a catalog.",
        "operationId": "subscriber_event_listCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/state"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriberEventList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriberEventList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Subscriber Event (Catalog Scope)"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/webhooks/{webhook}/subscriber-events/{subscriber-event}": {
      "description": "Subscriber Event object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/webhook"
        },
        {
          "$ref": "#/components/parameters/subscriber-event"
        }
      ],
      "get": {
        "summary": "Returns a catalog webhook event.",
        "description": "Returns a webhook subscriber event for a catalog.",
        "operationId": "subscriber_event_getCatalogScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriberEvent"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriberEvent"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Webhooks",
          "Resource: Subscriber Event (Catalog Scope)"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "notification-language": {
        "name": "notification-language",
        "in": "path",
        "description": "Notification Language name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "X-IBM-Client-Id": {
        "name": "X-IBM-Client-Id",
        "in": "header",
        "description": "Registration client identifier",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "X-IBM-Client-Secret": {
        "name": "X-IBM-Client-Secret",
        "in": "header",
        "description": "Registration client secret",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "access-token": {
        "name": "access-token",
        "in": "path",
        "description": "Access Token name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "activation": {
        "name": "activation",
        "in": "path",
        "description": "Activation name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "analytics": {
        "name": "analytics",
        "in": "path",
        "description": "Analytics name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "analytics-service": {
        "name": "analytics-service",
        "in": "path",
        "description": "Analytics Service name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api-id": {
        "name": "api-id",
        "in": "path",
        "description": "API name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api-name": {
        "name": "api-name",
        "in": "path",
        "description": "API name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api-version": {
        "name": "api-version",
        "in": "path",
        "description": "API version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api-key": {
        "name": "api-key",
        "in": "path",
        "description": "API Key name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api_type": {
        "name": "api_type",
        "in": "query",
        "description": "The type of api (asyncapi, rest, graphql, wsdl_to_rest, or wsdl)",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "app": {
        "name": "app",
        "in": "path",
        "description": "Application name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "application-type": {
        "name": "application-type",
        "in": "path",
        "description": "Application Type name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "apply_filter": {
        "name": "apply_filter",
        "in": "query",
        "description": "Filter tasks",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "assembly_type": {
        "name": "assembly_type",
        "in": "query",
        "description": "The type of the assembly to generate (rest_to_proxy)",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "associate": {
        "name": "associate",
        "in": "path",
        "description": "Associate name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "base_path": {
        "name": "base_path",
        "in": "query",
        "description": "Base path of the API",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "billing": {
        "name": "billing",
        "in": "path",
        "description": "Billing name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "capture-id": {
        "name": "capture-id",
        "in": "path",
        "description": "Capture id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "cascade": {
        "name": "cascade",
        "in": "query",
        "description": "Cascade the behavior",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "catalog": {
        "name": "catalog",
        "in": "path",
        "description": "Catalog name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "catalog_name": {
        "name": "catalog_name",
        "in": "query",
        "description": "Name of a catalog",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "catalog_url": {
        "name": "catalog_url",
        "in": "query",
        "description": "Catalog URL",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "client_id": {
        "name": "client_id",
        "in": "query",
        "description": "Registration client identifier",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "code": {
        "name": "code",
        "in": "query",
        "description": "Oauth2 code",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "configured-api-user-registry": {
        "name": "configured-api-user-registry",
        "in": "path",
        "description": "Configured API User Registry name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "configured-billing": {
        "name": "configured-billing",
        "in": "path",
        "description": "Configured Billing name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "configured-catalog-user-registry": {
        "name": "configured-catalog-user-registry",
        "in": "path",
        "description": "Configured Catalog User Registry name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "configured-gateway-service": {
        "name": "configured-gateway-service",
        "in": "path",
        "description": "Configured Gateway Service name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "configured-oauth-provider": {
        "name": "configured-oauth-provider",
        "in": "path",
        "description": "Configured Oauth Provider name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "configured-tls-client-profile-id": {
        "name": "configured-tls-client-profile-id",
        "in": "path",
        "description": "Configured TLS Client Profile name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "configured-tls-client-profile-name": {
        "name": "configured-tls-client-profile-name",
        "in": "path",
        "description": "Configured TLS Client Profile name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "configured-tls-client-profile-version": {
        "name": "configured-tls-client-profile-version",
        "in": "path",
        "description": "Configured TLS Client Profile version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "confirm": {
        "name": "confirm",
        "in": "query",
        "description": "Confirmation for critical updates",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "consumer-org": {
        "name": "consumer-org",
        "in": "path",
        "description": "Consumer Organization name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "consumer_org_url": {
        "name": "consumer_org_url",
        "in": "query",
        "description": "Consumer Org Url",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "context": {
        "name": "context",
        "in": "query",
        "description": "user's login context admin/manager",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "credential": {
        "name": "credential",
        "in": "path",
        "description": "Application Credential name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "delete_old_owner": {
        "name": "delete_old_owner",
        "in": "query",
        "description": "Delete old owner",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "disable_ws_security": {
        "name": "disable_ws_security",
        "in": "query",
        "description": "Disable generation of WS-Security definitions in api",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "draft": {
        "name": "draft",
        "in": "path",
        "description": "Draft name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "draft-api-id": {
        "name": "draft-api-id",
        "in": "path",
        "description": "Draft API name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "draft-api-name": {
        "name": "draft-api-name",
        "in": "path",
        "description": "Draft API name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "draft-api-version": {
        "name": "draft-api-version",
        "in": "path",
        "description": "Draft API version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "draft-product-id": {
        "name": "draft-product-id",
        "in": "path",
        "description": "Draft Product name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "draft-product-name": {
        "name": "draft-product-name",
        "in": "path",
        "description": "Draft Product name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "draft-product-version": {
        "name": "draft-product-version",
        "in": "path",
        "description": "Draft Product version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "endpoint": {
        "name": "endpoint",
        "in": "query",
        "description": "Endpoint url",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "enforced": {
        "name": "enforced",
        "in": "query",
        "description": "Whether the API is enforced or not",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "entry": {
        "name": "entry",
        "in": "path",
        "description": "Entry name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "error": {
        "name": "error",
        "in": "query",
        "description": "error per OAuth specification",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "error_description": {
        "name": "error_description",
        "in": "query",
        "description": "error_description per OAuth specification",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "error_uri": {
        "name": "error_uri",
        "in": "query",
        "description": "error_uri per OAuth specification",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "event_state": {
        "name": "event_state",
        "in": "query",
        "description": "Event state to filter by",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "expand": {
        "name": "expand",
        "in": "query",
        "description": "List of transient field to expand",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "extension-id": {
        "name": "extension-id",
        "in": "path",
        "description": "Extension name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "extension-name": {
        "name": "extension-name",
        "in": "path",
        "description": "Extension name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "extension-version": {
        "name": "extension-version",
        "in": "path",
        "description": "Extension version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "name": "fields",
        "in": "query",
        "description": "List of field names to return",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "force": {
        "name": "force",
        "in": "query",
        "description": "Force the operation",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "gateway-service": {
        "name": "gateway-service",
        "in": "path",
        "description": "Gateway Service name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "gateway_service_names": {
        "name": "gateway_service_names",
        "in": "query",
        "description": "Names of Gateway Services",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "gateway_services": {
        "name": "gateway_services",
        "in": "query",
        "description": "The list of gateway service names to support partial publishing",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "gateway_type": {
        "name": "gateway_type",
        "in": "query",
        "description": "The type of the gateway (datapower-gateway, datapower-api-gateway, event-gateway)",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "global-policy-id": {
        "name": "global-policy-id",
        "in": "path",
        "description": "Global Policy name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "global-policy-name": {
        "name": "global-policy-name",
        "in": "path",
        "description": "Global Policy name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "global-policy-version": {
        "name": "global-policy-version",
        "in": "path",
        "description": "Global Policy version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "group": {
        "name": "group",
        "in": "path",
        "description": "Group name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "invitation": {
        "name": "invitation",
        "in": "path",
        "description": "Consumer Organization Invitation name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "invitation-token": {
        "name": "invitation-token",
        "in": "path",
        "description": "Invitation Token name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "invitation_scope": {
        "name": "invitation_scope",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "job": {
        "name": "job",
        "in": "path",
        "description": "Job name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "keystore": {
        "name": "keystore",
        "in": "path",
        "description": "Keystore name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "kind": {
        "name": "kind",
        "in": "query",
        "description": "kind of item",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Maximum number of items to return",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "member": {
        "name": "member",
        "in": "path",
        "description": "Member name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "member-invitation": {
        "name": "member-invitation",
        "in": "path",
        "description": "Member Invitation name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "metadata": {
        "name": "metadata",
        "in": "query",
        "description": "List of metadata fields in the api to filter on",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "migrate_subscriptions": {
        "name": "migrate_subscriptions",
        "in": "query",
        "description": "Migrate subscription when republish product",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "my-catalog": {
        "name": "my-catalog",
        "in": "path",
        "description": "My Catalog name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "my-consumer-org": {
        "name": "my-consumer-org",
        "in": "path",
        "description": "My Consumer Organization name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "my-org": {
        "name": "my-org",
        "in": "path",
        "description": "My Organization name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "my-permission": {
        "name": "my-permission",
        "in": "path",
        "description": "My Permission name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "my-space": {
        "name": "my-space",
        "in": "path",
        "description": "My Space name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "my-task": {
        "name": "my-task",
        "in": "path",
        "description": "My Task name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "name": {
        "name": "name",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "notification-template": {
        "name": "notification-template",
        "in": "path",
        "description": "Notification Template name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "oauth-provider": {
        "name": "oauth-provider",
        "in": "path",
        "description": "Oauth Provider name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "oauth-state": {
        "name": "oauth-state",
        "in": "path",
        "description": "Oauth State name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "oauth_token": {
        "name": "oauth_token",
        "in": "query",
        "description": "Oauth Token for Twitter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "oauth_verifier": {
        "name": "oauth_verifier",
        "in": "query",
        "description": "Oauth Verifier for Twitter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "Offset item number from list to begin return",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "operation": {
        "name": "operation",
        "in": "query",
        "description": "Operation to perform on the user registry (get_base_dn_list, validate_password)",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "org": {
        "name": "org",
        "in": "path",
        "description": "Organization name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "org_type": {
        "name": "org_type",
        "in": "query",
        "description": "Type of orgs to return",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "originated-task": {
        "name": "originated-task",
        "in": "path",
        "description": "Originated Task name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "payment-method": {
        "name": "payment-method",
        "in": "path",
        "description": "Payment Method name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "permission": {
        "name": "permission",
        "in": "path",
        "description": "Permission name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "plan": {
        "name": "plan",
        "in": "query",
        "description": "Plan Name",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "policy-id": {
        "name": "policy-id",
        "in": "path",
        "description": "Policy name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "policy-name": {
        "name": "policy-name",
        "in": "path",
        "description": "Policy name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "policy-version": {
        "name": "policy-version",
        "in": "path",
        "description": "Policy version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "portal-service": {
        "name": "portal-service",
        "in": "path",
        "description": "Portal Service name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "primary-event": {
        "name": "primary-event",
        "in": "path",
        "description": "Primary Event name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "product-id": {
        "name": "product-id",
        "in": "path",
        "description": "Product name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "product-name": {
        "name": "product-name",
        "in": "path",
        "description": "Product name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "product-version": {
        "name": "product-version",
        "in": "path",
        "description": "Product version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "product_url": {
        "name": "product_url",
        "in": "query",
        "description": "Product Url",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "property-name": {
        "name": "property-name",
        "in": "path",
        "description": "Configuration Property name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "query": {
        "name": "query",
        "in": "query",
        "description": "Add query to request",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "realm": {
        "name": "realm",
        "in": "query",
        "description": "User registry realm name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "recent-publish": {
        "name": "recent-publish",
        "in": "path",
        "description": "Recent Publish name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "redirect_uri": {
        "name": "redirect_uri",
        "in": "query",
        "description": "Redirect Url",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "refresh-token": {
        "name": "refresh-token",
        "in": "path",
        "description": "Refresh Token name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "response_type": {
        "name": "response_type",
        "in": "query",
        "description": "Oauth2 response_type",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "role": {
        "name": "role",
        "in": "path",
        "description": "Role name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "role-default": {
        "name": "role-default",
        "in": "path",
        "description": "Role Default name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "scope": {
        "name": "scope",
        "in": "query",
        "description": "Scope of the call",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "search": {
        "name": "search",
        "in": "path",
        "description": "Search name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "service-id": {
        "name": "service-id",
        "in": "path",
        "description": "Service name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "service-name": {
        "name": "service-name",
        "in": "path",
        "description": "Service name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "service-version": {
        "name": "service-version",
        "in": "path",
        "description": "Service version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "skill-id": {
        "name": "skill-id",
        "in": "path",
        "description": "Skill name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "skill-name": {
        "name": "skill-name",
        "in": "path",
        "description": "Skill name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "skill-version": {
        "name": "skill-version",
        "in": "path",
        "description": "Skill version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "snapshot": {
        "name": "snapshot",
        "in": "path",
        "description": "Snapshot name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "space": {
        "name": "space",
        "in": "path",
        "description": "Space name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "space_name": {
        "name": "space_name",
        "in": "query",
        "description": "Name of a space",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "state": {
        "name": "state",
        "in": "query",
        "description": "State for a webhook event in subscriber queue",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "subscriber-event": {
        "name": "subscriber-event",
        "in": "path",
        "description": "Subscriber Event name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "subscription": {
        "name": "subscription",
        "in": "path",
        "description": "Subscription name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "subsystem-service": {
        "name": "subsystem-service",
        "in": "path",
        "description": "Subsystem Service name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "subsystem_service_name": {
        "name": "subsystem_service_name",
        "in": "query",
        "description": "Name of subsystem service",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "subsystem_service_type": {
        "name": "subsystem_service_type",
        "in": "query",
        "description": "Type of subsystem service",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "summary": {
        "name": "summary",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "target": {
        "name": "target",
        "in": "query",
        "description": "target for the task",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "task": {
        "name": "task",
        "in": "path",
        "description": "Task name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "title": {
        "name": "title",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "tls-client-profile-id": {
        "name": "tls-client-profile-id",
        "in": "path",
        "description": "TLS Client Profile name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "tls-client-profile-name": {
        "name": "tls-client-profile-name",
        "in": "path",
        "description": "TLS Client Profile name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "tls-client-profile-version": {
        "name": "tls-client-profile-version",
        "in": "path",
        "description": "TLS Client Profile version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "token": {
        "name": "token",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "transaction-id": {
        "name": "transaction-id",
        "in": "path",
        "description": "Transaction id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "truststore": {
        "name": "truststore",
        "in": "path",
        "description": "Truststore name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "upper_time_limit": {
        "name": "upper_time_limit",
        "in": "query",
        "description": "Upper limit on generated_at",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "user": {
        "name": "user",
        "in": "path",
        "description": "User name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "user-registry": {
        "name": "user-registry",
        "in": "path",
        "description": "User Registry name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "validate_apis": {
        "name": "validate_apis",
        "in": "query",
        "description": "Whether to validate APIs also",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "webhook": {
        "name": "webhook",
        "in": "path",
        "description": "Webhook name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "wsdl_service": {
        "name": "wsdl_service",
        "in": "query",
        "description": "Name of WSDL service to create the OpenAPI definition from",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "wsdl_services": {
        "name": "wsdl_services",
        "in": "query",
        "description": "A comma delimited list of WSDL services to introspect",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "headers": {
      "Location": {
        "description": "URL referencing a newly created resource",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "AccessToken": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "access_token"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string",
            "enum": [
              "registration",
              "personal",
              "invitation",
              "sign_up",
              "reset_password",
              "Bearer"
            ]
          },
          "third_party_at_iat": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 2147483647
          },
          "third_party_at_expires_in": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 2147483647
          },
          "third_party_access_token": {
            "type": "string"
          },
          "third_party_refresh_token": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "AccessTokenList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessToken"
            }
          }
        }
      },
      "Activation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "activation"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "activation_link": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "user_registry_url": {
            "type": "string",
            "format": "uri"
          },
          "identity_provider": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "consumer_org": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "active",
              "pending"
            ]
          },
          "ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ActivationList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Activation"
            }
          }
        }
      },
      "AnalyticsService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "analytics_service"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "ingestion_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "ingestion_endpoint_tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "client_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "client_endpoint_tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "internal_svc_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "internal_svc_endpoint_tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "availability_zone_url": {
            "type": "string",
            "format": "uri"
          },
          "communication_from_apim_kind": {
            "type": "string",
            "enum": [
              "external",
              "internal_svc"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "AnalyticsServiceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsService"
            }
          }
        }
      },
      "API": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "api"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "staged",
              "online",
              "offline",
              "retired"
            ]
          },
          "api": {
            "type": "object",
            "additionalProperties": true
          },
          "wsdl": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "content_type",
              "content"
            ],
            "properties": {
              "content_type": {
                "type": "string",
                "enum": [
                  "application/wsdl",
                  "application/wsdl+xml",
                  "text/xml",
                  "application/zip"
                ]
              },
              "content": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "api_type": {
            "type": "string",
            "enum": [
              "rest",
              "wsdl",
              "graphql",
              "asyncapi"
            ]
          },
          "gateway_type": {
            "type": "string",
            "enum": [
              "datapower-gateway",
              "datapower-api-gateway",
              "event-gateway"
            ]
          },
          "oai_version": {
            "type": "string",
            "enum": [
              "openapi2",
              "openapi3"
            ]
          },
          "document_specification": {
            "type": "string",
            "enum": [
              "asyncapi2.0",
              "asyncapi2.1",
              "openapi2",
              "openapi3"
            ]
          },
          "base_paths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enforced": {
            "type": "boolean"
          },
          "catalog_api": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "swagger": {
                "type": "string"
              },
              "info": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "title",
                  "version"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "x-ibm-name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "x-ibm-summary": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "gateway_api": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "swagger": {
                "type": "string"
              },
              "info": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "title",
                  "version"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "x-ibm-name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "x-ibm-summary": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "consumer_api": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "swagger": {
                "type": "string"
              },
              "info": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "title",
                  "version"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "x-ibm-name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "x-ibm-summary": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "extension_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "specialization": {
            "$ref": "#/components/schemas/APISpecialization"
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "oauth_providers": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "provider_type": {
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "APIList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/API"
            }
          }
        }
      },
      "APIKey": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "api_key"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "client_type": {
            "type": "string",
            "enum": [
              "toolkit",
              "atm"
            ]
          },
          "realm": {
            "type": "string"
          },
          "user_url": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "token_exp": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "token_iat": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "token_jti": {
            "type": "string"
          },
          "api_key": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "APIKeyList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APIKey"
            }
          }
        }
      },
      "App": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "app"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "lifecycle_state": {
            "type": "string",
            "enum": [
              "development",
              "production"
            ]
          },
          "lifecycle_state_pending": {
            "type": "string",
            "nullable": true,
            "enum": [
              "production"
            ]
          },
          "app_credential_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "redirect_endpoints": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "application_public_certificate_entry": {
            "type": "string"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "task_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "image_endpoint": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "application_type_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "credentials": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "client_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "AppList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          }
        }
      },
      "ApplicationType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "application_type"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "oauth_types": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "client_type",
                "grant_types"
              ],
              "properties": {
                "client_type": {
                  "type": "string",
                  "enum": [
                    "public",
                    "confidential"
                  ]
                },
                "grant_types": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "password",
                      "implicit",
                      "access_code",
                      "application",
                      "jwt"
                    ]
                  }
                }
              }
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "app_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ApplicationTypeList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationType"
            }
          }
        }
      },
      "Associate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "associate"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "AssociateList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Associate"
            }
          }
        }
      },
      "AvailabilityZone": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "availability_zone"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "management": {
            "type": "boolean"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "AvailabilityZoneList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailabilityZone"
            }
          }
        }
      },
      "Billing": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "billing"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "payment_method_integration_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "visibility": {
            "$ref": "#/components/schemas/ResourceVisibility"
          },
          "owned": {
            "type": "boolean"
          },
          "configured_billing_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "custom_endpoint": {
            "$ref": "#/components/schemas/SecuredEndpoint"
          },
          "job_queue_status": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "queue_length": {
                "type": "integer"
              },
              "head_state": {
                "type": "string"
              },
              "head_error": {
                "type": "string"
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "BillingList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Billing"
            }
          }
        }
      },
      "Catalog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "catalog"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "owner_url": {
            "type": "string",
            "format": "uri"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "configured_catalog_user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "app_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "CatalogList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Catalog"
            }
          }
        }
      },
      "CatalogSetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "catalog_setting"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "user_registry_default_url": {
            "type": "string",
            "format": "uri"
          },
          "production_mode": {
            "type": "boolean"
          },
          "portal": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "none",
                  "drupal"
                ]
              },
              "endpoint": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "portal_service_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "webhook_url": {
                "type": "string",
                "format": "uri"
              },
              "webhook_state": {
                "type": "string"
              },
              "service_version": {
                "type": "string"
              },
              "state": {
                "type": "string",
                "enum": [
                  "pending",
                  "ready"
                ]
              }
            }
          },
          "product_lifecycle_approvals": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "staged",
                "published",
                "deprecated",
                "retired",
                "archived",
                "replace",
                "supersede"
              ]
            }
          },
          "task_self_approval": {
            "type": "boolean"
          },
          "allowed_product_visibility": {
            "$ref": "#/components/schemas/ProductVisibility"
          },
          "application_lifecycle": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            }
          },
          "consumer_self_service_onboarding": {
            "type": "boolean"
          },
          "consumer_self_service_onboarding_approval": {
            "type": "boolean"
          },
          "consumer_org_invitations_enabled": {
            "type": "boolean"
          },
          "consumer_org_invitation_roles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "administrator",
                "developer",
                "viewer"
              ]
            }
          },
          "invitation_ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "legacy_endpoint_behavior": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "v5_endpoint_substitution_behavior": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true,
            "properties": {
              "base_endpoints": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "endpoint": {
                      "type": "string",
                      "format": "uri"
                    },
                    "gateway_service_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              },
              "unenforced_api_base_endpoint": {
                "type": "string",
                "format": "uri",
                "nullable": true
              }
            }
          },
          "vanity_api_endpoint": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "endpoint_preference": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "catalog",
                  "api"
                ]
              },
              "vanity_api_base_endpoints": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "endpoint",
                    "type"
                  ],
                  "properties": {
                    "endpoint": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": {
                      "type": "string"
                    },
                    "type": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "development",
                          "production"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "spaces_enabled": {
            "type": "boolean"
          },
          "custom_notification_templates_enabled": {
            "type": "boolean"
          },
          "email_sender": {
            "$ref": "#/components/schemas/EmailSender"
          },
          "hash_client_secret": {
            "type": "boolean"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "default_catalog": {
            "type": "boolean"
          },
          "product_publish_validations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "override_invitation_ttl_for_all_consumer_orgs": {
            "type": "boolean"
          },
          "gateway_supported_protocols": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "enum": [
                "wss",
                "https",
                "ws",
                "http"
              ]
            }
          },
          "consumer_self_service_onboarding_ttl": {
            "type": "integer",
            "nullable": true,
            "minimum": 60,
            "maximum": 31536000
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "CloudSetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "cloud_setting"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "cloud_name": {
            "type": "string"
          },
          "cloud_id": {
            "type": "string"
          },
          "mail_server_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "invitation_ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "reset_password_ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "provision_sandbox_catalog": {
            "type": "boolean"
          },
          "restrict_member_manage_permission": {
            "type": "boolean",
            "default": false
          },
          "access_token_expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "refresh_token_enabled": {
            "type": "boolean"
          },
          "refresh_expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "api_key_enabled": {
            "type": "boolean",
            "default": true
          },
          "api_key_expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "api_key_multiple_uses": {
            "type": "boolean",
            "default": false
          },
          "sso_settings": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "org_types": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "admin",
                    "provider"
                  ]
                },
                "nullable": true
              },
              "default_org_type": {
                "type": "string",
                "enum": [
                  "admin",
                  "provider"
                ],
                "nullable": true
              },
              "user_registry_urls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                },
                "nullable": true
              },
              "default_user_registry_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "registration_urls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                },
                "nullable": true
              },
              "default_registration_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              }
            },
            "nullable": true
          },
          "audit_setting": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "audit_reads": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "response_data_to_http_endpoints": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "list_results_limit": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 10000
                      }
                    }
                  }
                }
              },
              "mode": {
                "type": "string",
                "enum": [
                  "block",
                  "non_block"
                ]
              },
              "endpoints": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "endpoint_type": {
                      "type": "string",
                      "enum": [
                        "http",
                        "syslog_udp",
                        "syslog_tcp",
                        "syslog_tls"
                      ]
                    },
                    "endpoint": {
                      "$ref": "#/components/schemas/SecuredEndpoint"
                    },
                    "headers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "nullable": true
                    }
                  },
                  "required": [
                    "endpoint"
                  ]
                }
              }
            }
          },
          "gateway_service_default_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "cloud_manager_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "api_manager_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "platform_api_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "consumer_api_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "platform_api_svc_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "consumer_api_svc_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "license_accepted": {
            "type": "boolean"
          },
          "email_sender": {
            "$ref": "#/components/schemas/EmailSender"
          },
          "ibm_cloud": {
            "type": "boolean"
          },
          "service_type": {
            "type": "string",
            "enum": [
              "monolithic",
              "microservice"
            ]
          },
          "tls_client_profile_default_url": {
            "type": "string",
            "format": "uri"
          },
          "token_issuer": {
            "type": "string"
          },
          "access_token_keystore_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "id_token_keystore_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "temporary_token_keystore_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "self_signed_token_keystore_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "atm_base_path": {
            "type": "string",
            "nullable": true
          },
          "temporary_token_format": {
            "type": "string",
            "enum": [
              "jwt",
              "b64"
            ]
          },
          "sync_roles_setting": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "endpoint": {
                "$ref": "#/components/schemas/SecuredEndpoint"
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredAPIUserRegistry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "configured_api_user_registry"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "user_registry_url": {
            "type": "string",
            "format": "uri"
          },
          "owned": {
            "type": "boolean"
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "registry_type": {
            "type": "string"
          },
          "user_managed": {
            "type": "boolean"
          },
          "user_registry_managed": {
            "type": "boolean"
          },
          "external_group_mapping_enabled": {
            "type": "boolean",
            "default": false
          },
          "onboarding": {
            "type": "string",
            "nullable": true,
            "enum": [
              "active",
              "suspended"
            ]
          },
          "case_sensitive": {
            "type": "boolean"
          },
          "email_required": {
            "type": "boolean",
            "default": false
          },
          "email_unique_if_exist": {
            "type": "boolean",
            "default": true
          },
          "identity_providers": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          },
          "configuration": {
            "type": "object",
            "additionalProperties": true
          },
          "endpoint": {
            "$ref": "#/components/schemas/SecuredEndpoint"
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "global_policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredAPIUserRegistryList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfiguredAPIUserRegistry"
            }
          }
        }
      },
      "ConfiguredBilling": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "configured_billing"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "billing_url": {
            "type": "string",
            "format": "uri"
          },
          "owned": {
            "type": "boolean"
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "payment_method_integration_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredBillingList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfiguredBilling"
            }
          }
        }
      },
      "ConfiguredCatalogUserRegistry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "configured_catalog_user_registry"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "user_registry_url": {
            "type": "string",
            "format": "uri"
          },
          "owned": {
            "type": "boolean"
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "registry_type": {
            "type": "string"
          },
          "user_managed": {
            "type": "boolean"
          },
          "user_registry_managed": {
            "type": "boolean"
          },
          "external_group_mapping_enabled": {
            "type": "boolean",
            "default": false
          },
          "onboarding": {
            "type": "string",
            "nullable": true,
            "enum": [
              "active",
              "suspended"
            ]
          },
          "case_sensitive": {
            "type": "boolean"
          },
          "email_required": {
            "type": "boolean",
            "default": false
          },
          "email_unique_if_exist": {
            "type": "boolean",
            "default": true
          },
          "identity_providers": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          },
          "configuration": {
            "type": "object",
            "additionalProperties": true
          },
          "endpoint": {
            "$ref": "#/components/schemas/SecuredEndpoint"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredCatalogUserRegistryList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfiguredCatalogUserRegistry"
            }
          }
        }
      },
      "ConfiguredGatewayService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "configured_gateway_service"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "gateway_service_url": {
            "type": "string",
            "format": "uri"
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_type": {
            "type": "string"
          },
          "owned": {
            "type": "boolean"
          },
          "configuration": {
            "type": "object"
          },
          "availability_zone_url": {
            "type": "string",
            "format": "uri"
          },
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "api_endpoint_base": {
            "type": "string"
          },
          "catalog_base": {
            "type": "string"
          },
          "sni": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "host": {
                  "type": "string"
                },
                "tls_server_profile_url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "oauth_shared_secret": {
            "type": "string",
            "format": "password"
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "ready"
            ]
          },
          "overall_state": {
            "type": "string",
            "enum": [
              "pending",
              "ready"
            ]
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "analytics_service_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "gateway_version": {
            "type": "string"
          },
          "domain_name": {
            "type": "string"
          },
          "managed_by": {
            "type": "string",
            "enum": [
              "apim",
              "gateway"
            ]
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "catalog_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "webhook_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_webhook_url": {
            "type": "string",
            "format": "uri"
          },
          "webhook_state": {
            "type": "string"
          },
          "catalog_webhook_state": {
            "type": "string"
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_processing_status": {
            "$ref": "#/components/schemas/SubscriberProcessingStatus"
          },
          "events": {
            "type": "object",
            "properties": {
              "sent_events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriberEvent"
                }
              },
              "queued_events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriberEvent"
                }
              }
            }
          },
          "service_version": {
            "type": "string",
            "nullable": true
          },
          "communication_kind": {
            "type": "string",
            "enum": [
              "external",
              "internal_svc"
            ]
          },
          "communication_to_analytics_kind": {
            "type": "string",
            "enum": [
              "external",
              "internal_svc"
            ]
          },
          "communication_to_analytics_with_jwt": {
            "type": "boolean",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredGatewayServiceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfiguredGatewayService"
            }
          }
        }
      },
      "ConfiguredOauthProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "configured_oauth_provider"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "oauth_provider_url": {
            "type": "string",
            "format": "uri"
          },
          "owned": {
            "type": "boolean"
          },
          "debug": {
            "type": "boolean"
          },
          "provider_type": {
            "type": "string",
            "enum": [
              "native",
              "third_party"
            ]
          },
          "scopes": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "grants": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "access_code",
                "application",
                "password",
                "implicit",
                "jwt"
              ]
            }
          },
          "gateway_version": {
            "type": "string",
            "enum": [
              "5000",
              "6000"
            ]
          },
          "advanced_scope": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "override_endpoint_from_api": {
                "type": "boolean"
              },
              "default_validator_endpoint": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "required": [
                  "endpoint"
                ],
                "properties": {
                  "endpoint": {
                    "type": "string"
                  },
                  "tls_client_profile_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  }
                }
              },
              "request_query": {
                "type": "string"
              },
              "request_headers_regex": {
                "type": "string"
              },
              "response_headers_regex": {
                "type": "string"
              }
            }
          },
          "native_provider": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "api": {
                "$ref": "#/components/schemas/OAI3",
                "nullable": true
              },
              "default_scopes": {
                "type": "string",
                "nullable": true
              },
              "authorize_path": {
                "type": "string"
              },
              "token_path": {
                "type": "string"
              },
              "token_secret": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  }
                }
              },
              "clients": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "confidential",
                    "public"
                  ]
                }
              },
              "access_code_ttl": {
                "type": "integer",
                "minimum": 1,
                "maximum": 600
              },
              "access_token_ttl": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "access_token_one_time_use": {
                "type": "boolean"
              },
              "maximum_consent_ttl": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "refresh_token": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "count": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "ttl": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "one_time_use": {
                    "type": "boolean"
                  }
                }
              },
              "revocation": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "native",
                      "third_party"
                    ]
                  },
                  "resource_owner_revocation_path": {
                    "type": "string"
                  },
                  "client_revocation_path": {
                    "type": "string"
                  },
                  "third_party_endpoint": {
                    "type": "object",
                    "additionalProperties": false,
                    "nullable": true,
                    "required": [
                      "endpoint"
                    ],
                    "properties": {
                      "endpoint": {
                        "type": "string"
                      },
                      "tls_client_profile_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                      }
                    }
                  },
                  "application_revocation": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "apprevoke_path": {
                        "type": "string"
                      }
                    }
                  },
                  "third_party_security": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "basic-auth"
                      ]
                    }
                  },
                  "basic_auth": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string",
                        "nullable": true
                      },
                      "request_headername": {
                        "type": "string"
                      }
                    }
                  },
                  "custom_headername_format": {
                    "type": "string"
                  },
                  "third_party_cache_type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "no-cache",
                        "protocol",
                        "time-to-live"
                      ]
                    }
                  },
                  "third_party_revocation_protocol": {
                    "type": "string",
                    "items": {
                      "type": "string",
                      "enum": [
                        "XML",
                        "JSON"
                      ]
                    }
                  },
                  "time_to_live": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cache_ttl": {
                        "type": "integer"
                      }
                    }
                  },
                  "third_party_fail_on_error": {
                    "type": "boolean",
                    "default": true
                  },
                  "owner_revocation": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "owner_revoke_path": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "token_introspection": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "introspection_path": {
                    "type": "string"
                  }
                }
              },
              "token_metadata": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "source": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "external_url",
                        "authentication_url"
                      ]
                    }
                  },
                  "external_endpoint": {
                    "type": "object",
                    "additionalProperties": false,
                    "nullable": true,
                    "required": [
                      "endpoint"
                    ],
                    "properties": {
                      "endpoint": {
                        "type": "string"
                      },
                      "tls_client_profile_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                      }
                    }
                  },
                  "header_name_token": {
                    "type": "string"
                  },
                  "header_name_payload": {
                    "type": "string"
                  }
                }
              },
              "openid_connect": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "discovery_path": {
                    "type": "string",
                    "nullable": true
                  },
                  "supported_response_types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "code_id_token",
                        "code_access_token",
                        "code_id_token_access_token"
                      ]
                    }
                  }
                }
              },
              "pkce": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "required": {
                    "type": "boolean"
                  },
                  "allow_plain": {
                    "type": "boolean"
                  }
                }
              },
              "advanced_scope_security": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "mode": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "basic-auth"
                      ]
                    }
                  },
                  "basic_auth": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "request_headername": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                }
              },
              "native_provider_5000": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "identity_extraction": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "basic",
                          "default_form",
                          "custom_form",
                          "redirect"
                        ]
                      },
                      "redirect_endpoint": {
                        "type": "string",
                        "nullable": true
                      },
                      "custom_form_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint"
                      }
                    }
                  },
                  "authentication": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "user_registry_url": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "authorization": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "default_form",
                          "custom_form",
                          "authenticated"
                        ]
                      },
                      "custom_form_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint"
                      }
                    }
                  },
                  "scope_validators": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "application_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint",
                        "nullable": true
                      },
                      "owner_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "third_party_config": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "token_validation_requirement": {
                "type": "string",
                "enum": [
                  "connected",
                  "active",
                  "custom"
                ]
              },
              "authorize_endpoint": {
                "type": "string"
              },
              "token_endpoint": {
                "type": "string"
              },
              "introspection_endpoint": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "required": [
                  "endpoint"
                ],
                "properties": {
                  "endpoint": {
                    "type": "string"
                  },
                  "tls_client_profile_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  }
                }
              },
              "security": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "basic-auth"
                  ]
                }
              },
              "basic_auth": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "request_headername": {
                    "type": "string",
                    "nullable": true
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "custom_headername_format": {
                "type": "string"
              },
              "advanced_scope_security": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "mode": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "basic-auth"
                      ]
                    }
                  },
                  "basic_auth": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "request_headername": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                }
              },
              "auth_header_pass_thru": {
                "type": "boolean",
                "default": false
              },
              "introspect_cache_type": {
                "type": "string",
                "default": "no-cache",
                "enum": [
                  "no-cache",
                  "protocol",
                  "time-to-live"
                ]
              },
              "introspect_cache_ttl": {
                "type": "integer"
              }
            }
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredOauthProviderList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfiguredOauthProvider"
            }
          }
        }
      },
      "ConfiguredTLSClientProfile": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "configured_tls_client_profile"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "owned": {
            "type": "boolean"
          },
          "protocols": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "tls_v1.0",
                "tls_v1.1",
                "tls_v1.2",
                "tls_v1.3"
              ]
            }
          },
          "ciphers": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TLS_AES_256_GCM_SHA384",
                "TLS_CHACHA20_POLY1305_SHA256",
                "TLS_AES_128_GCM_SHA256",
                "TLS_AES_128_CCM_SHA256",
                "TLS_AES_128_CCM_8_SHA256",
                "ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                "ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                "ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
                "ECDHE_RSA_WITH_AES_256_CBC_SHA384",
                "ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                "ECDHE_RSA_WITH_AES_256_CBC_SHA",
                "DHE_DSS_WITH_AES_256_GCM_SHA384",
                "DHE_RSA_WITH_AES_256_GCM_SHA384",
                "DHE_RSA_WITH_AES_256_CBC_SHA256",
                "DHE_DSS_WITH_AES_256_CBC_SHA256",
                "DHE_RSA_WITH_AES_256_CBC_SHA",
                "DHE_DSS_WITH_AES_256_CBC_SHA",
                "RSA_WITH_AES_256_GCM_SHA384",
                "RSA_WITH_AES_256_CBC_SHA256",
                "RSA_WITH_AES_256_CBC_SHA",
                "ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                "ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                "ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
                "ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                "ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                "ECDHE_RSA_WITH_AES_128_CBC_SHA",
                "DHE_DSS_WITH_AES_128_GCM_SHA256",
                "DHE_RSA_WITH_AES_128_GCM_SHA256",
                "DHE_RSA_WITH_AES_128_CBC_SHA256",
                "DHE_DSS_WITH_AES_128_CBC_SHA256",
                "DHE_RSA_WITH_AES_128_CBC_SHA",
                "DHE_DSS_WITH_AES_128_CBC_SHA",
                "RSA_WITH_AES_128_GCM_SHA256",
                "RSA_WITH_AES_128_CBC_SHA256",
                "RSA_WITH_AES_128_CBC_SHA",
                "ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA",
                "ECDHE_RSA_WITH_3DES_EDE_CBC_SHA",
                "DHE_RSA_WITH_3DES_EDE_CBC_SHA",
                "DHE_DSS_WITH_3DES_EDE_CBC_SHA",
                "RSA_WITH_3DES_EDE_CBC_SHA"
              ]
            },
            "nullable": true
          },
          "elliptic_curve_auto_negotiation": {
            "type": "boolean",
            "default": true
          },
          "elliptic_curve": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "sect163k1",
                "sect163r1",
                "sect163r2",
                "sect193r1",
                "sect193r2",
                "sect233k1",
                "sect233r1",
                "sect239k1",
                "sect283k1",
                "sect283r1",
                "sect409k1",
                "sect409r1",
                "sect571k1",
                "sect571r1",
                "secp160k1",
                "secp160r1",
                "secp160r2",
                "secp192k1",
                "secp192r1",
                "prime192v1",
                "secp224k1",
                "secp224r1",
                "secp256k1",
                "secp256r1",
                "prime256v1",
                "secp384r1",
                "secp521r1",
                "brainpoolP256r1",
                "brainpoolP384r1",
                "brainpoolP512r1"
              ]
            },
            "nullable": true
          },
          "insecure_server_connections": {
            "type": "boolean"
          },
          "server_name_indication": {
            "type": "boolean",
            "default": true
          },
          "keystore_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "truststore_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "global_policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConfiguredTLSClientProfileList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfiguredTLSClientProfile"
            }
          }
        }
      },
      "ConsumerOrg": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "consumer_org"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "owner_url": {
            "type": "string",
            "format": "uri"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "group_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "subscription_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ConsumerOrgList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsumerOrg"
            }
          }
        }
      },
      "ConsumerOrgSetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "consumer_org_setting"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "invitation_ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "configured_billing": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "default_payment_method_url": {
                  "type": "string",
                  "format": "uri"
                },
                "billing_identifiers": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "Credential": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "credential"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "client_id": {
            "type": "string"
          },
          "client_secret_hashed": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "app_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "CredentialList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Credential"
            }
          }
        }
      },
      "DraftAPI": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "draft_api"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "draft_api": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "swagger": {
                "type": "string"
              },
              "info": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "title",
                  "version"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "x-ibm-name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "x-ibm-summary": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "remote_api": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "auth_header": {
                "type": "string"
              }
            }
          },
          "api_type": {
            "type": "string",
            "enum": [
              "rest",
              "wsdl",
              "graphql",
              "asyncapi"
            ]
          },
          "enforced": {
            "type": "boolean"
          },
          "gateway_type": {
            "type": "string",
            "enum": [
              "datapower-gateway",
              "datapower-api-gateway",
              "event-gateway"
            ]
          },
          "oai_version": {
            "type": "string",
            "enum": [
              "openapi2",
              "openapi3"
            ]
          },
          "document_specification": {
            "type": "string",
            "enum": [
              "asyncapi2.0",
              "asyncapi2.1",
              "openapi2",
              "openapi3"
            ]
          },
          "wsdl": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "content_type",
              "content"
            ],
            "properties": {
              "content_type": {
                "type": "string",
                "enum": [
                  "application/wsdl",
                  "application/wsdl+xml",
                  "text/xml",
                  "application/zip"
                ]
              },
              "content": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "DraftAPIList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DraftAPI"
            }
          }
        }
      },
      "DraftProduct": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "draft_product"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "draft_product": {
            "type": "object",
            "additionalProperties": true
          },
          "gateway_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "datapower-gateway",
                "datapower-api-gateway",
                "event-gateway"
              ]
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "DraftProductList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DraftProduct"
            }
          }
        }
      },
      "Entry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "entry"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "entry_type": {
            "type": "string",
            "enum": [
              "private_key",
              "public_certificate",
              "trusted_certificate"
            ]
          },
          "pem": {
            "type": "string"
          },
          "certificate_info": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "EntryList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Entry"
            }
          }
        }
      },
      "Extension": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "extension"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "public",
              "private"
            ]
          },
          "extension": {
            "$ref": "#/components/schemas/ExtensionDocument"
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ExtensionList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension"
            }
          }
        }
      },
      "GatewayExtension": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "gateway_extension"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "implementation": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "content_type",
              "content"
            ],
            "properties": {
              "content_type": {
                "type": "string",
                "enum": [
                  "application/zip"
                ]
              },
              "content": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "GatewayService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "gateway_service"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_type": {
            "type": "string"
          },
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "api_endpoint_base": {
            "type": "string"
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "sni": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "host": {
                  "type": "string"
                },
                "tls_server_profile_url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "ready"
            ]
          },
          "oauth_shared_secret": {
            "type": "string",
            "format": "password"
          },
          "visibility": {
            "$ref": "#/components/schemas/ResourceVisibility"
          },
          "owned": {
            "type": "boolean"
          },
          "configuration": {
            "type": "object"
          },
          "analytics_service_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "webhook_url": {
            "type": "string",
            "format": "uri"
          },
          "webhook_state": {
            "type": "string"
          },
          "cloud_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "gateway_extension_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "availability_zone_url": {
            "type": "string",
            "format": "uri"
          },
          "service_version": {
            "type": "string",
            "nullable": true
          },
          "communication_kind": {
            "type": "string",
            "enum": [
              "external",
              "internal_svc"
            ]
          },
          "communication_to_analytics_kind": {
            "type": "string",
            "enum": [
              "external",
              "internal_svc"
            ]
          },
          "communication_to_analytics_with_jwt": {
            "type": "boolean",
            "nullable": true
          },
          "gateway_processing_status": {
            "$ref": "#/components/schemas/SubscriberProcessingStatus"
          },
          "events": {
            "type": "object",
            "properties": {
              "sent_events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriberEvent"
                }
              },
              "queued_events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriberEvent"
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "GatewayServiceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GatewayService"
            }
          }
        }
      },
      "GlobalPolicy": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "global_policy"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "global_policy": {
            "$ref": "#/components/schemas/GlobalPolicyDocument"
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "global_policy_prehook_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "global_policy_posthook_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "global_policy_error_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "GlobalPolicyList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalPolicy"
            }
          }
        }
      },
      "GlobalPolicyError": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "global_policy_error"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "global_policy_url": {
            "type": "string",
            "format": "uri"
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "GlobalPolicyPosthook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "global_policy_posthook"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "global_policy_url": {
            "type": "string",
            "format": "uri"
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "GlobalPolicyPrehook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "global_policy_prehook"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "global_policy_url": {
            "type": "string",
            "format": "uri"
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "Group": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "group"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "org_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "portal_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "billing_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "GroupList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      },
      "Integration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "integration"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "integration_type": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "remote": {
            "type": "boolean"
          },
          "integration": {
            "$ref": "#/components/schemas/IntegrationDocument"
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "IntegrationList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration"
            }
          }
        }
      },
      "Invitation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "invitation"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "notify": {
            "type": "boolean"
          },
          "activation_link": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "InvitationList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invitation"
            }
          }
        }
      },
      "Job": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "job"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "ready",
              "claimed",
              "running",
              "blocked",
              "failed"
            ]
          },
          "activity": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "error": {
            "type": "string"
          },
          "path": {
            "type": "string",
            "enum": [
              "subscription-update",
              "subscription-delete",
              "bulk-subscription-update",
              "bulk-subscription-delete",
              "payment-method-delete",
              "payment-method-delete-consumer"
            ]
          },
          "body": {
            "type": "object",
            "additionalProperties": true
          },
          "generated_at": {
            "type": "string"
          },
          "processed_work": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "processed_at": {
            "type": "string",
            "format": "date-time"
          },
          "retries": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "JobList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Job"
            }
          }
        }
      },
      "Keystore": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "keystore"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "private_key_entry": {
            "type": "string",
            "format": "password"
          },
          "public_certificate_entry": {
            "$ref": "#/components/schemas/CertEntry"
          },
          "public_key_jwk": {
            "$ref": "#/components/schemas/PublicKeyJwk"
          },
          "trusted_certificate_entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertEntry"
            }
          },
          "keystore": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "tls_server_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "cloud_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "KeystoreList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keystore"
            }
          }
        }
      },
      "LogSpec": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "log_spec"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "specification": {
            "type": "string"
          },
          "info_message": {
            "type": "string"
          },
          "large_objects": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MailServer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "mail_server"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
          },
          "credentials": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "username": {
                "type": "string",
                "nullable": true
              },
              "password": {
                "type": "string",
                "format": "password",
                "nullable": true
              }
            }
          },
          "timeout": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "secure": {
            "type": "boolean"
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MailServerList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MailServer"
            }
          }
        }
      },
      "Member": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "member"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "inherited_role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MemberList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member"
            }
          }
        }
      },
      "MemberInvitation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "member_invitation"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "notify": {
            "type": "boolean"
          },
          "activation_link": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "org_type": {
            "type": "string"
          },
          "role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MemberInvitationList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberInvitation"
            }
          }
        }
      },
      "MyCatalogList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Catalog"
            }
          }
        }
      },
      "MyConsumerOrgList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsumerOrg"
            }
          }
        }
      },
      "MyOrgList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Org"
            }
          }
        }
      },
      "MyPermission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "my_permission"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope_url": {
            "type": "string",
            "format": "uri"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MyPermissionList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyPermission"
            }
          }
        }
      },
      "MySpaceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Space"
            }
          }
        }
      },
      "MyTask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "my_task"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "scope_url": {
            "type": "string",
            "format": "uri"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MyTaskList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyTask"
            }
          }
        }
      },
      "NotificationStyle": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "notification_style"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "allowed_html_tags": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "NotificationTemplate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "notification_template"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "notification_template_type": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "variables": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "body_html": {
            "type": "string"
          },
          "content_type": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "text",
                "html"
              ]
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "NotificationTemplateList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationTemplate"
            }
          }
        }
      },
      "OauthProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "oauth_provider"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "debug": {
            "type": "boolean"
          },
          "owned": {
            "type": "boolean"
          },
          "provider_type": {
            "type": "string",
            "enum": [
              "native",
              "third_party"
            ]
          },
          "scopes": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "grants": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "access_code",
                "application",
                "password",
                "implicit",
                "jwt"
              ]
            }
          },
          "gateway_version": {
            "type": "string",
            "enum": [
              "5000",
              "6000"
            ]
          },
          "advanced_scope": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "override_endpoint_from_api": {
                "type": "boolean"
              },
              "default_validator_endpoint": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "required": [
                  "endpoint"
                ],
                "properties": {
                  "endpoint": {
                    "type": "string"
                  },
                  "tls_client_profile_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  }
                }
              },
              "request_query": {
                "type": "string"
              },
              "request_headers_regex": {
                "type": "string"
              },
              "response_headers_regex": {
                "type": "string"
              }
            }
          },
          "native_provider": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "api": {
                "$ref": "#/components/schemas/OAI3",
                "nullable": true
              },
              "default_scopes": {
                "type": "string",
                "nullable": true
              },
              "authorize_path": {
                "type": "string"
              },
              "token_path": {
                "type": "string"
              },
              "token_secret": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  }
                }
              },
              "clients": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "confidential",
                    "public"
                  ]
                }
              },
              "access_code_ttl": {
                "type": "integer",
                "minimum": 1,
                "maximum": 600
              },
              "access_token_ttl": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "access_token_one_time_use": {
                "type": "boolean"
              },
              "maximum_consent_ttl": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "refresh_token": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "count": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "ttl": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "one_time_use": {
                    "type": "boolean"
                  }
                }
              },
              "revocation": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "native",
                      "third_party"
                    ]
                  },
                  "resource_owner_revocation_path": {
                    "type": "string"
                  },
                  "client_revocation_path": {
                    "type": "string"
                  },
                  "third_party_endpoint": {
                    "type": "object",
                    "additionalProperties": false,
                    "nullable": true,
                    "required": [
                      "endpoint"
                    ],
                    "properties": {
                      "endpoint": {
                        "type": "string"
                      },
                      "tls_client_profile_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                      }
                    }
                  },
                  "application_revocation": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "apprevoke_path": {
                        "type": "string"
                      }
                    }
                  },
                  "third_party_security": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "basic-auth"
                      ]
                    }
                  },
                  "basic_auth": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string",
                        "nullable": true
                      },
                      "request_headername": {
                        "type": "string"
                      }
                    }
                  },
                  "custom_headername_format": {
                    "type": "string"
                  },
                  "third_party_cache_type": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "no-cache",
                        "protocol",
                        "time-to-live"
                      ]
                    }
                  },
                  "third_party_revocation_protocol": {
                    "type": "string",
                    "items": {
                      "type": "string",
                      "enum": [
                        "XML",
                        "JSON"
                      ]
                    }
                  },
                  "time_to_live": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cache_ttl": {
                        "type": "integer"
                      }
                    }
                  },
                  "third_party_fail_on_error": {
                    "type": "boolean",
                    "default": true
                  },
                  "owner_revocation": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "owner_revoke_path": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "token_introspection": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "introspection_path": {
                    "type": "string"
                  }
                }
              },
              "token_metadata": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "source": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "external_url",
                        "authentication_url"
                      ]
                    }
                  },
                  "external_endpoint": {
                    "type": "object",
                    "additionalProperties": false,
                    "nullable": true,
                    "required": [
                      "endpoint"
                    ],
                    "properties": {
                      "endpoint": {
                        "type": "string"
                      },
                      "tls_client_profile_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                      }
                    }
                  },
                  "header_name_token": {
                    "type": "string"
                  },
                  "header_name_payload": {
                    "type": "string"
                  }
                }
              },
              "openid_connect": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "discovery_path": {
                    "type": "string",
                    "nullable": true
                  },
                  "supported_response_types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "code_id_token",
                        "code_access_token",
                        "code_id_token_access_token"
                      ]
                    }
                  }
                }
              },
              "pkce": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "required": {
                    "type": "boolean"
                  },
                  "allow_plain": {
                    "type": "boolean"
                  }
                }
              },
              "advanced_scope_security": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "mode": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "basic-auth"
                      ]
                    }
                  },
                  "basic_auth": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "request_headername": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                }
              },
              "native_provider_5000": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "identity_extraction": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "basic",
                          "default_form",
                          "custom_form",
                          "redirect"
                        ]
                      },
                      "redirect_endpoint": {
                        "type": "string",
                        "nullable": true
                      },
                      "custom_form_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint"
                      }
                    }
                  },
                  "authentication": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "user_registry_url": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "authorization": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "default_form",
                          "custom_form",
                          "authenticated"
                        ]
                      },
                      "custom_form_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint"
                      }
                    }
                  },
                  "scope_validators": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "application_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint"
                      },
                      "owner_endpoint": {
                        "$ref": "#/components/schemas/SecuredEndpoint"
                      }
                    }
                  }
                }
              }
            }
          },
          "third_party_config": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "token_validation_requirement": {
                "type": "string",
                "enum": [
                  "connected",
                  "active",
                  "custom"
                ]
              },
              "authorize_endpoint": {
                "type": "string"
              },
              "token_endpoint": {
                "type": "string"
              },
              "introspection_endpoint": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true,
                "required": [
                  "endpoint"
                ],
                "properties": {
                  "endpoint": {
                    "type": "string"
                  },
                  "tls_client_profile_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  }
                }
              },
              "security": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "basic-auth"
                  ]
                }
              },
              "basic_auth": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "request_headername": {
                    "type": "string",
                    "nullable": true
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "custom_headername_format": {
                "type": "string"
              },
              "advanced_scope_security": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "mode": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "basic-auth"
                      ]
                    }
                  },
                  "basic_auth": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "request_headername": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                }
              },
              "auth_header_pass_thru": {
                "type": "boolean",
                "default": false
              },
              "introspect_cache_type": {
                "type": "string",
                "default": "no-cache",
                "enum": [
                  "no-cache",
                  "protocol",
                  "time-to-live"
                ]
              },
              "introspect_cache_ttl": {
                "type": "integer"
              }
            }
          },
          "visibility": {
            "$ref": "#/components/schemas/ResourceVisibility"
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "OauthProviderList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OauthProvider"
            }
          }
        }
      },
      "OauthState": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "oauth_state"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "realm": {
            "type": "string"
          },
          "user_registry_url": {
            "type": "string"
          },
          "registration_url": {
            "type": "string",
            "format": "uri"
          },
          "state": {
            "type": "string"
          },
          "response_type": {
            "type": "string",
            "enum": [
              "token",
              "code"
            ]
          },
          "redirect_uri": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "activation_token": {
            "type": "string"
          },
          "consumer_context": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "OauthStateList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OauthState"
            }
          }
        }
      },
      "Org": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "org"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "org_type": {
            "type": "string",
            "enum": [
              "admin",
              "provider"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "owner_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "portal_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "billing_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "group_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "OrgList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Org"
            }
          }
        }
      },
      "OrgSetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "org_setting"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "invitation_ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "custom_notification_templates_enabled": {
            "type": "boolean"
          },
          "email_sender": {
            "$ref": "#/components/schemas/EmailSender"
          },
          "atm_base_path": {
            "type": "string",
            "nullable": true
          },
          "runtime_api_opt_in_datagather_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PaymentMethod": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "payment_method"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "billing_url": {
            "type": "string",
            "format": "uri"
          },
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PaymentMethodList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          }
        }
      },
      "Permission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "permission"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "permission_type": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "role_default_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PermissionList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      "Policy": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "policy"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "public",
              "private"
            ]
          },
          "custom": {
            "type": "boolean"
          },
          "policy": {
            "$ref": "#/components/schemas/PolicyDocument"
          },
          "implementation": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "content_type",
              "content"
            ],
            "properties": {
              "content_type": {
                "type": "string",
                "enum": [
                  "application/zip"
                ]
              },
              "content": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "global_policy_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PolicyList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Policy"
            }
          }
        }
      },
      "PortalService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "portal_service"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "web_endpoint_base": {
            "type": "string",
            "format": "uri"
          },
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "endpoint_tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "ready"
            ]
          },
          "visibility": {
            "$ref": "#/components/schemas/ResourceVisibility"
          },
          "owned": {
            "type": "boolean"
          },
          "webhook_url": {
            "type": "string",
            "format": "uri"
          },
          "webhook_state": {
            "type": "string"
          },
          "catalog_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "availability_zone_url": {
            "type": "string",
            "format": "uri"
          },
          "service_version": {
            "type": "string",
            "nullable": true
          },
          "communication_kind": {
            "type": "string",
            "enum": [
              "external",
              "internal_svc"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PortalServiceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PortalService"
            }
          }
        }
      },
      "PrimaryEvent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "primary_event"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "event_type": {
            "type": "string",
            "enum": [
              "create",
              "update",
              "delete"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "queued",
              "snapshotting",
              "tombstone"
            ]
          },
          "gateway_payload": {
            "type": "object"
          },
          "consumer_payload": {
            "type": "object"
          },
          "generated_at": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          },
          "ids_in_gateway_payload": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ids_in_consumer_payload": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PrimaryEventList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrimaryEvent"
            }
          }
        }
      },
      "Product": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "product"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "staged",
              "published",
              "deprecated",
              "retired",
              "archived"
            ]
          },
          "product": {
            "type": "object",
            "additionalProperties": true
          },
          "catalog_product": {
            "type": "object",
            "additionalProperties": true
          },
          "state_pending": {
            "type": "string",
            "nullable": true,
            "enum": [
              "pending",
              "staged",
              "published",
              "deprecated",
              "retired",
              "archived"
            ]
          },
          "gateway_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "datapower-gateway",
                "datapower-api-gateway",
                "event-gateway"
              ]
            }
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "visibility": {
            "$ref": "#/components/schemas/ProductVisibility"
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "billing_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "superseded_by": {
            "$ref": "#/components/schemas/ProductPlanMapping"
          },
          "supersedes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPlanMapping"
            }
          },
          "task_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "specialization": {
            "$ref": "#/components/schemas/ProductSpecialization"
          },
          "subscription_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "billing_identifiers": {
            "description": "non-sensitive identifiers of billing system resources",
            "type": "object",
            "additionalProperties": true
          },
          "plans": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "title": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "apis": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              }
            }
          },
          "apis": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "approval_history": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "user": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                },
                "target_life_cycle": {
                  "type": "string",
                  "enum": [
                    "staged",
                    "published",
                    "deprecated",
                    "retired",
                    "archived",
                    "replace",
                    "supersede"
                  ]
                },
                "user_action": {
                  "type": "string",
                  "enum": [
                    "requested",
                    "approved",
                    "rejected",
                    "cancelled"
                  ]
                },
                "comment": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "display_text": {
                  "type": "string"
                }
              }
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ProductList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "RecentPublish": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "recent_publish"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "state": {
            "type": "string",
            "enum": [
              "stage",
              "publish"
            ]
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "RecentPublishList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecentPublish"
            }
          }
        }
      },
      "RefreshToken": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "refresh_token"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "user_url": {
            "type": "string"
          },
          "grant_type": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "issued_at": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "access_token_jti": {
            "type": "string"
          },
          "third_party_rt": {
            "type": "string",
            "nullable": true
          },
          "third_party_rt_expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647,
            "nullable": true
          },
          "ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "RefreshTokenList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefreshToken"
            }
          }
        }
      },
      "Registration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "registration"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "client_type": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "registration_public_certificate": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cloud_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "RegistrationList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Registration"
            }
          }
        }
      },
      "Role": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "role"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "permission_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "inherited_permission_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "member_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "external_group_mapping": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true,
            "properties": {
              "user_registry_url": {
                "type": "string",
                "format": "uri"
              },
              "ldap_groups": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "user_group_filter_prefix": {
                "type": "string"
              },
              "user_group_filter_suffix": {
                "type": "string"
              }
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "RoleList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        }
      },
      "RoleDefault": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "role_default"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "role_default_type": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "permission_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "RoleDefaultList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDefault"
            }
          }
        }
      },
      "Service": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "service"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "service": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "tls_client_profile_url": {
                "type": "string",
                "format": "uri"
              },
              "timeout": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string",
                "format": "password"
              },
              "http_method": {
                "type": "string",
                "enum": [
                  "get",
                  "post",
                  "put",
                  "delete",
                  "patch",
                  "head",
                  "options"
                ]
              },
              "compression": {
                "type": "boolean"
              },
              "org_url": {
                "type": "string",
                "format": "uri"
              },
              "catalog_url": {
                "type": "string",
                "format": "uri"
              },
              "space_url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "service_schema": {
            "type": "object",
            "additionalProperties": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ServiceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service"
            }
          }
        }
      },
      "Skill": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "skill"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "skill_id": {
            "type": "string"
          },
          "skill_type": {
            "type": "string",
            "enum": [
              "primitive",
              "composite",
              "mapped",
              "imported",
              "other",
              "external",
              "primitive-template",
              "pre-built",
              "skill-flow"
            ]
          },
          "skill_subtype": {
            "type": "string",
            "enum": [
              "public",
              "private",
              "wo-identity"
            ]
          },
          "display_name": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "applications_info": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "description": {
            "type": "string"
          },
          "nlu": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "author": {
            "type": "string"
          },
          "rank": {
            "type": "integer"
          },
          "runtime_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "openapi_url": {
            "type": "string",
            "format": "uri"
          },
          "connection_state": {
            "type": "string",
            "enum": [
              "none",
              "not-connected",
              "connected"
            ]
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "stage",
              "publish"
            ]
          },
          "tsv_api_lang": {
            "type": "string"
          },
          "tsv_nlu_lang": {
            "type": "string"
          },
          "tenant_url": {
            "type": "string",
            "format": "uri"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string"
          },
          "skillOpenapi": {
            "type": "string"
          },
          "flowname": {
            "type": "string"
          },
          "flowvalue": {
            "type": "object"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "SkillList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skill"
            }
          }
        }
      },
      "Snapshot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "snapshot"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "in_progress",
              "ready",
              "deprecated"
            ]
          },
          "first_event_generated_at": {
            "type": "string"
          },
          "last_event_generated_at": {
            "type": "string"
          },
          "generated_at": {
            "type": "string"
          },
          "gateway_payload": {
            "type": "object"
          },
          "consumer_payload": {
            "type": "object"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "SnapshotList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Snapshot"
            }
          }
        }
      },
      "Space": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "space"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "owner_url": {
            "type": "string",
            "format": "uri"
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "task_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_api_user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "SpaceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Space"
            }
          }
        }
      },
      "SpaceSetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "space_setting"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "invitation_ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "custom_notification_templates_enabled": {
            "type": "boolean"
          },
          "allowed_product_visibility": {
            "$ref": "#/components/schemas/ProductVisibility"
          },
          "email_sender": {
            "$ref": "#/components/schemas/EmailSender"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "SubscriberEvent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "subscriber_event"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "event_type": {
            "type": "string",
            "enum": [
              "create",
              "update",
              "delete"
            ]
          },
          "payload_sent": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "generated_at": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "queued",
              "sent",
              "failed"
            ]
          },
          "retries": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "request_id": {
            "type": "string"
          },
          "ids_in_payload": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "SubscriberEventList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriberEvent"
            }
          }
        }
      },
      "Subscription": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "subscription"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "enabled",
              "rejected",
              "disabled"
            ]
          },
          "product_url": {
            "type": "string",
            "format": "uri"
          },
          "product": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "plan": {
            "type": "string"
          },
          "plan_title": {
            "type": "string"
          },
          "task_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "state_pending": {
            "type": "string",
            "nullable": true,
            "enum": [
              "enabled"
            ]
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "app_url": {
            "type": "string",
            "format": "uri"
          },
          "app": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              },
              "credentials": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "client_id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          },
          "billing_identifiers": {
            "description": "non-sensitive identifiers of billing system resources",
            "type": "object",
            "additionalProperties": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "SubscriptionList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          }
        }
      },
      "Task": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "task"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "task_type": {
            "type": "string",
            "enum": [
              "product_lifecycle",
              "subscription",
              "application_lifecycle",
              "consumer_onboarding"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "approved",
              "rejected",
              "cancelled"
            ]
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "originator": {
            "type": "string"
          },
          "originator_url": {
            "type": "string",
            "format": "uri"
          },
          "originator_username": {
            "type": "string"
          },
          "originator_name": {
            "type": "string"
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object"
                }
              ]
            }
          },
          "activity": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "app_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "subscription_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "TaskList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "TaskQueue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "task_queue"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "valid_after": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "enum": [
              "retry",
              "synchronize",
              "snapshot",
              "reconfigure",
              "policy-upgrade",
              "heartbeat",
              "cleanup",
              "send",
              "initialize",
              "delete-expired-data",
              "system-maintenance"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "new",
              "claimed",
              "inprogress",
              "errored",
              "failed",
              "completed"
            ]
          },
          "target": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "owner": {
            "type": "string"
          },
          "iteration": {
            "type": "string"
          },
          "retry_count": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "generated_at": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "TaskQueueList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskQueue"
            }
          }
        }
      },
      "TLSClientProfile": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "tls_client_profile"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "protocols": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "tls_v1.0",
                "tls_v1.1",
                "tls_v1.2",
                "tls_v1.3"
              ]
            }
          },
          "ciphers": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TLS_AES_256_GCM_SHA384",
                "TLS_CHACHA20_POLY1305_SHA256",
                "TLS_AES_128_GCM_SHA256",
                "TLS_AES_128_CCM_SHA256",
                "TLS_AES_128_CCM_8_SHA256",
                "ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                "ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                "ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
                "ECDHE_RSA_WITH_AES_256_CBC_SHA384",
                "ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                "ECDHE_RSA_WITH_AES_256_CBC_SHA",
                "DHE_DSS_WITH_AES_256_GCM_SHA384",
                "DHE_RSA_WITH_AES_256_GCM_SHA384",
                "DHE_RSA_WITH_AES_256_CBC_SHA256",
                "DHE_DSS_WITH_AES_256_CBC_SHA256",
                "DHE_RSA_WITH_AES_256_CBC_SHA",
                "DHE_DSS_WITH_AES_256_CBC_SHA",
                "RSA_WITH_AES_256_GCM_SHA384",
                "RSA_WITH_AES_256_CBC_SHA256",
                "RSA_WITH_AES_256_CBC_SHA",
                "ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                "ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                "ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
                "ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                "ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                "ECDHE_RSA_WITH_AES_128_CBC_SHA",
                "DHE_DSS_WITH_AES_128_GCM_SHA256",
                "DHE_RSA_WITH_AES_128_GCM_SHA256",
                "DHE_RSA_WITH_AES_128_CBC_SHA256",
                "DHE_DSS_WITH_AES_128_CBC_SHA256",
                "DHE_RSA_WITH_AES_128_CBC_SHA",
                "DHE_DSS_WITH_AES_128_CBC_SHA",
                "RSA_WITH_AES_128_GCM_SHA256",
                "RSA_WITH_AES_128_CBC_SHA256",
                "RSA_WITH_AES_128_CBC_SHA",
                "ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA",
                "ECDHE_RSA_WITH_3DES_EDE_CBC_SHA",
                "DHE_RSA_WITH_3DES_EDE_CBC_SHA",
                "DHE_DSS_WITH_3DES_EDE_CBC_SHA",
                "RSA_WITH_3DES_EDE_CBC_SHA"
              ]
            },
            "nullable": true
          },
          "elliptic_curve_auto_negotiation": {
            "type": "boolean",
            "default": true
          },
          "elliptic_curve": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "sect163k1",
                "sect163r1",
                "sect163r2",
                "sect193r1",
                "sect193r2",
                "sect233k1",
                "sect233r1",
                "sect239k1",
                "sect283k1",
                "sect283r1",
                "sect409k1",
                "sect409r1",
                "sect571k1",
                "sect571r1",
                "secp160k1",
                "secp160r1",
                "secp160r2",
                "secp192k1",
                "secp192r1",
                "prime192v1",
                "secp224k1",
                "secp224r1",
                "secp256k1",
                "secp256r1",
                "prime256v1",
                "secp384r1",
                "secp521r1",
                "brainpoolP256r1",
                "brainpoolP384r1",
                "brainpoolP512r1"
              ]
            },
            "nullable": true
          },
          "insecure_server_connections": {
            "type": "boolean"
          },
          "server_name_indication": {
            "type": "boolean",
            "default": true
          },
          "owned": {
            "type": "boolean"
          },
          "keystore_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "truststore_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "webhook_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "visibility": {
            "$ref": "#/components/schemas/ResourceVisibility"
          },
          "configured_tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "mail_server_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "portal_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "analytics_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "cloud_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "integration_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "TLSClientProfileList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TLSClientProfile"
            }
          }
        }
      },
      "TLSServerProfile": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "tls_server_profile"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "protocols": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "tls_v1.0",
                "tls_v1.1",
                "tls_v1.2",
                "tls_v1.3"
              ]
            }
          },
          "ciphers": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TLS_AES_256_GCM_SHA384",
                "TLS_CHACHA20_POLY1305_SHA256",
                "TLS_AES_128_GCM_SHA256",
                "TLS_AES_128_CCM_SHA256",
                "TLS_AES_128_CCM_8_SHA256",
                "ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                "ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                "ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
                "ECDHE_RSA_WITH_AES_256_CBC_SHA384",
                "ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                "ECDHE_RSA_WITH_AES_256_CBC_SHA",
                "DHE_DSS_WITH_AES_256_GCM_SHA384",
                "DHE_RSA_WITH_AES_256_GCM_SHA384",
                "DHE_RSA_WITH_AES_256_CBC_SHA256",
                "DHE_DSS_WITH_AES_256_CBC_SHA256",
                "DHE_RSA_WITH_AES_256_CBC_SHA",
                "DHE_DSS_WITH_AES_256_CBC_SHA",
                "RSA_WITH_AES_256_GCM_SHA384",
                "RSA_WITH_AES_256_CBC_SHA256",
                "RSA_WITH_AES_256_CBC_SHA",
                "ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                "ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                "ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
                "ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                "ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                "ECDHE_RSA_WITH_AES_128_CBC_SHA",
                "DHE_DSS_WITH_AES_128_GCM_SHA256",
                "DHE_RSA_WITH_AES_128_GCM_SHA256",
                "DHE_RSA_WITH_AES_128_CBC_SHA256",
                "DHE_DSS_WITH_AES_128_CBC_SHA256",
                "DHE_RSA_WITH_AES_128_CBC_SHA",
                "DHE_DSS_WITH_AES_128_CBC_SHA",
                "RSA_WITH_AES_128_GCM_SHA256",
                "RSA_WITH_AES_128_CBC_SHA256",
                "RSA_WITH_AES_128_CBC_SHA",
                "ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA",
                "ECDHE_RSA_WITH_3DES_EDE_CBC_SHA",
                "DHE_RSA_WITH_3DES_EDE_CBC_SHA",
                "DHE_DSS_WITH_3DES_EDE_CBC_SHA",
                "RSA_WITH_3DES_EDE_CBC_SHA"
              ]
            },
            "nullable": true
          },
          "elliptic_curve": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "sect163k1",
                "sect163r1",
                "sect163r2",
                "sect193r1",
                "sect193r2",
                "sect233k1",
                "sect233r1",
                "sect239k1",
                "sect283k1",
                "sect283r1",
                "sect409k1",
                "sect409r1",
                "sect571k1",
                "sect571r1",
                "secp160k1",
                "secp160r1",
                "secp160r2",
                "secp192k1",
                "secp192r1",
                "secp224k1",
                "secp224r1",
                "secp256k1",
                "secp256r1",
                "secp384r1",
                "secp521r1",
                "brainpoolP256r1",
                "brainpoolP384r1",
                "brainpoolP512r1"
              ]
            },
            "nullable": true
          },
          "mutual_authentication": {
            "type": "string",
            "enum": [
              "require",
              "request",
              "none"
            ]
          },
          "limit_renegotiation": {
            "type": "boolean",
            "default": true
          },
          "keystore_url": {
            "type": "string",
            "format": "uri"
          },
          "truststore_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "TLSServerProfileList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TLSServerProfile"
            }
          }
        }
      },
      "Truststore": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "truststore"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "truststore": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "entry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_server_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tls_client_profile_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "TruststoreList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Truststore"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "user"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "identity_provider": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "force_password_change": {
            "type": "boolean"
          },
          "reject_tokens_issued_before": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "last_login_at": {
            "type": "string",
            "format": "date-time"
          },
          "member_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "user_registry_url": {
            "type": "string",
            "format": "uri"
          },
          "hashed_password": {
            "type": "string"
          },
          "salt": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "UserList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "UserRegistry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "user_registry"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "registry_type": {
            "type": "string"
          },
          "user_managed": {
            "type": "boolean"
          },
          "user_registry_managed": {
            "type": "boolean"
          },
          "external_group_mapping_enabled": {
            "type": "boolean",
            "default": false
          },
          "onboarding": {
            "type": "string",
            "nullable": true,
            "enum": [
              "active",
              "suspended"
            ]
          },
          "case_sensitive": {
            "type": "boolean"
          },
          "email_required": {
            "type": "boolean",
            "default": false
          },
          "email_unique_if_exist": {
            "type": "boolean",
            "default": true
          },
          "identity_providers": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          },
          "visibility": {
            "$ref": "#/components/schemas/ResourceVisibility"
          },
          "configuration": {
            "type": "object",
            "additionalProperties": true
          },
          "endpoint": {
            "$ref": "#/components/schemas/SecuredEndpoint"
          },
          "owned": {
            "type": "boolean"
          },
          "configured_catalog_user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_api_user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configured_oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "member_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "oauth_provider_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "user_registry_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "activation_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "cloud_setting_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "UserRegistryList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRegistry"
            }
          }
        }
      },
      "UserRegistrySetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "user_registry_setting"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "admin_user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "admin_user_registry_default_url": {
            "type": "string",
            "format": "uri"
          },
          "provider_user_registry_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "provider_user_registry_default_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "Webhook": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "webhook"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "online",
              "online_configured",
              "offline_configured",
              "offline_resync",
              "initializing",
              "online_pending",
              "online_throttled"
            ]
          },
          "state_change_reason": {
            "type": "string"
          },
          "state_change_history": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "state_from": {
                  "type": "string"
                },
                "state_to": {
                  "type": "string"
                },
                "state_change_reason": {
                  "type": "string"
                },
                "state_changed_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "tasks": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "iteration": {
                  "type": "string"
                },
                "retry_count": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "snapshot_endpoint": {
            "type": "string",
            "format": "uri"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filter": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "level": {
            "type": "string",
            "enum": [
              "notification",
              "sync"
            ]
          },
          "authorization": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          },
          "gateway_service_url": {
            "type": "string",
            "format": "uri"
          },
          "portal_service_url": {
            "type": "string",
            "format": "uri"
          },
          "state_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "supported_webhook_features": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "feedback",
                "batch",
                "throttling",
                "api_protection_source",
                "external_oauth_mgmt",
                "policy_visibility",
                "product_replace_v2",
                "product_retire_optimized",
                "global_policy_error",
                "product_migrate_subscriptions",
                "execute_migration_target",
                "event_config_logs"
              ]
            }
          },
          "apic_version": {
            "type": "string"
          },
          "available_webhook_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "service_version": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "WebhookList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Webhook"
            }
          }
        }
      },
      "AuditPayload": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "typeURI": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "outcome": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "reason": {
            "type": "object",
            "properties": {
              "reasonCode": {
                "type": "string"
              },
              "reasonType": {
                "type": "string"
              }
            }
          },
          "eventTime": {
            "type": "string"
          },
          "initiator": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "typeURI": {
                "type": "string"
              }
            }
          },
          "target": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "typeURI": {
                "type": "string"
              }
            }
          },
          "observer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          },
          "requestPath": {
            "type": "string"
          },
          "requestData": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "url": {
                "type": "string"
              },
              "body": {
                "type": "object",
                "additionalProperties": true
              }
            }
          },
          "responseData": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "id": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "task_urls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "error": {
                "type": "string"
              }
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "AuditAttachmentPayload": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "timestamp",
          "cloud_name",
          "request_id",
          "method",
          "status_code",
          "operation",
          "resource"
        ],
        "properties": {
          "timestamp": {
            "type": "object",
            "properties": {
              "start": {
                "type": "string"
              },
              "end": {
                "type": "string"
              }
            }
          },
          "cloud_name": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "context": {
                "type": "string"
              },
              "idp_name": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "registration": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          }
        }
      },
      "Me": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "me"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "username": {
            "type": "string"
          },
          "identity_provider": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "force_password_change": {
            "type": "boolean"
          },
          "last_login_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object"
          }
        }
      },
      "WsdlServices": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "service": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "operations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "operation": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UserSearch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "username": {
            "type": "string"
          },
          "remote": {
            "type": "boolean"
          }
        }
      },
      "IdentityProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "registry_type": {
            "type": "string"
          },
          "user_managed": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          },
          "realm": {
            "type": "string"
          },
          "oidc_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "google",
              "github",
              "facebook",
              "linkedin",
              "windows_live",
              "slack",
              "twitter",
              "standard"
            ]
          }
        }
      },
      "IdentityProviderList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityProvider"
            }
          }
        }
      },
      "InvitationRegister": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "realm": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string",
                "format": "password"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              }
            }
          },
          "org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "catalog": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "space": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "consumer_org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          }
        }
      },
      "InvitationAccept": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "realm": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string",
                "format": "password"
              },
              "token": {
                "type": "string",
                "format": "password"
              },
              "token_secret": {
                "type": "string",
                "format": "password"
              }
            }
          },
          "org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "catalog": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "space": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "consumer_org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          }
        }
      },
      "MemberInvitationRegister": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          }
        }
      },
      "MemberRegisterResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "member": {
            "$ref": "#/components/schemas/Member"
          },
          "credentials": {
            "$ref": "#/components/schemas/TokenResponse"
          }
        }
      },
      "MemberInvitationAccept": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "token": {
            "type": "string",
            "format": "password"
          },
          "token_secret": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "MemberAcceptResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "member": {
            "$ref": "#/components/schemas/Member"
          },
          "credentials": {
            "$ref": "#/components/schemas/TokenResponse"
          }
        }
      },
      "ChangePassword": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "current_password": {
            "type": "string",
            "format": "password"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "ResetPassword": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "MailServerConfigured": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "configured": {
            "type": "boolean"
          }
        }
      },
      "JWKDefinition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "kid": {
            "type": "string"
          },
          "e": {
            "type": "string"
          },
          "n": {
            "type": "string"
          },
          "x5c": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "kty": {
            "type": "string"
          },
          "use": {
            "type": "string"
          },
          "alg": {
            "type": "string"
          },
          "iss": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          }
        }
      },
      "Oauth2CertsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JWKDefinition"
            }
          }
        }
      },
      "RequestPasswordReset": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "realm": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "TokenRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "grant_type"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "assertion": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "api_key": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "grant_type": {
            "type": "string",
            "enum": [
              "password",
              "client_credentials",
              "authorization_code",
              "urn:ietf:params:oauth:grant-type:jwt-bearer",
              "refresh_token",
              "api_key"
            ]
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "token_type",
          "expires_in"
        ],
        "properties": {
          "access_token": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "refresh_token": {
            "type": "string"
          },
          "refresh_expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          }
        }
      },
      "ToolkitCredentialsResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cloud_id"
        ],
        "properties": {
          "cloud_id": {
            "type": "string"
          },
          "toolkit": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              }
            }
          },
          "consumer_toolkit": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              }
            }
          },
          "governance": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              }
            }
          },
          "discovery": {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              }
            }
          }
        }
      },
      "DesignerCredentialsResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "designer"
        ],
        "properties": {
          "cloud_id": {
            "type": "string"
          },
          "designer": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "manager_endpoint": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              }
            }
          }
        }
      },
      "CloudPublicInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cloud_id"
        ],
        "properties": {
          "cloud_id": {
            "type": "string"
          },
          "admin_endpoint": {
            "type": "string"
          },
          "provider_endpoint": {
            "type": "string"
          },
          "api_endpoint": {
            "type": "string"
          },
          "consumer_api_endpoint": {
            "type": "string"
          },
          "compliance_endpoint": {
            "type": "string"
          },
          "discovery_endpoint": {
            "type": "string"
          }
        }
      },
      "CloudAbout": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "product_version": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "version": {
                "type": "string"
              },
              "operator_build_date": {
                "type": "string",
                "format": "date-time"
              },
              "operator_build_tag": {
                "type": "string"
              },
              "operator_version": {
                "type": "string"
              }
            }
          },
          "cloud": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            }
          },
          "upgrade_history": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "apim": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "schema_upgrades": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "schema_version": {
                          "type": "string"
                        },
                        "target_schema_version": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  "data_upgrades": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "data_version": {
                          "type": "string"
                        },
                        "target_data_version": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              },
              "lur": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "schema_upgrades": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "schema_version": {
                          "type": "string"
                        },
                        "target_schema_version": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  "data_upgrades": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "data_version": {
                          "type": "string"
                        },
                        "target_data_version": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "OriginatedTask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "scope": {
            "type": "string"
          },
          "scope_url": {
            "type": "string",
            "format": "uri"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OriginatedTaskList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OriginatedTask"
            }
          }
        }
      },
      "IntrospectionRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "token_type_hint": {
            "type": "string",
            "enum": [
              "access_token"
            ]
          }
        }
      },
      "IntrospectionResponse": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "active"
        ],
        "properties": {
          "active": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "registration": {
            "type": "object",
            "properties": {
              "uri": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "realm": {
            "type": "string"
          },
          "context": {
            "type": "string"
          },
          "identity_provider": {
            "type": "string"
          },
          "user_registry_url": {
            "type": "string"
          },
          "grant_type": {
            "type": "string"
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "jti": {
            "type": "string"
          },
          "sub": {
            "type": "string"
          },
          "aud": {
            "type": "string"
          },
          "iss": {
            "type": "string"
          },
          "iat": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "exp": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "access_token": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          }
        }
      },
      "GatewayServiceConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cloud",
          "catalogs"
        ],
        "properties": {
          "cloud": {
            "type": "object",
            "additionalProperties": true
          },
          "catalogs": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      },
      "PortalServiceConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cloud",
          "catalogs"
        ],
        "properties": {
          "cloud": {
            "type": "object",
            "additionalProperties": true
          },
          "catalogs": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      },
      "CloudTasks": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "apim_node",
          "payload"
        ],
        "properties": {
          "apim_node": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          }
        }
      },
      "ProxyTokenInfoRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "scope_url": {
            "type": "string"
          },
          "analytics_service": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "availability_zone": {
            "type": "string"
          }
        }
      },
      "ProxyTokenInfoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "analytics_client": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "tls": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "cert": {
                    "type": "string"
                  },
                  "ca": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "user_permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GlobalPolicyDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "PolicyDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "ExtensionDocument": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "extension",
          "info"
        ],
        "properties": {
          "extension": {
            "type": "string",
            "enum": [
              "1.0.0"
            ]
          },
          "info": {
            "$ref": "#/components/schemas/InfoSection"
          },
          "properties": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "IntegrationDocument": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "integration",
          "info"
        ],
        "properties": {
          "integration": {
            "type": "string",
            "enum": [
              "1.0.0"
            ]
          },
          "integration_type": {
            "type": "string",
            "enum": [
              "billing",
              "gateway_service",
              "payment_method",
              "notification",
              "user_registry"
            ]
          },
          "info": {
            "$ref": "#/components/schemas/InfoSection"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          "secured_endpoint": {
            "$ref": "#/components/schemas/SecuredEndpoint"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "configuration_schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "DraftAPIDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "DraftProductDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "ProductDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "APIDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "Regenerate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "notify": {
            "type": "boolean"
          }
        }
      },
      "InfoSection": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "version"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "termsOfService": {
            "type": "string"
          },
          "contact": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              },
              "email": {
                "type": "string",
                "format": "email"
              }
            }
          },
          "license": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "x-ibm-languages": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "Draft": {
        "type": "object",
        "additionalProperties": false
      },
      "DraftList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "draft_apis": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DraftAPI"
            }
          },
          "draft_products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DraftProduct"
            }
          }
        }
      },
      "Search": {
        "type": "object",
        "additionalProperties": false
      },
      "SearchList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "api_type": {
                  "type": "string"
                },
                "oai_version": {
                  "type": "string",
                  "enum": [
                    "openapi2",
                    "openapi3"
                  ]
                }
              }
            }
          }
        }
      },
      "Join": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "ProductPlanMapping": {
        "type": "object",
        "additionalProperties": false,
        "nullable": true,
        "properties": {
          "product_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceTargetPairs"
            }
          }
        }
      },
      "MigrateSubscriptionSubset": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "subscription_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "product_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceTargetPairs"
            }
          }
        }
      },
      "SourceTargetPairs": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "source",
          "target"
        ],
        "properties": {
          "source": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      },
      "CloudTopology": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "cloud_name": {
            "type": "string"
          },
          "cloud_id": {
            "type": "string"
          },
          "counts": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "users": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "provider_orgs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "catalogs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "draft_products": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "draft_apis": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "apis": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "products": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "consumer_orgs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "subscriptions": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "consumer_apps": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "spaces": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              }
            }
          },
          "orgs": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "total_results": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TopologyProviderOrg"
                }
              },
              "url": {
                "type": "string"
              }
            }
          }
        }
      },
      "TopologyProviderOrg": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "org_type": {
            "type": "string"
          },
          "runtime_api_opt_in_datagather_enabled": {
            "type": "boolean"
          },
          "owner_url": {
            "type": "string"
          },
          "owner": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "email": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              }
            }
          },
          "counts": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "members": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "draft_products": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "draft_apis": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              }
            }
          },
          "catalogs": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "total_results": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TopologyCatalogs"
                }
              }
            }
          }
        }
      },
      "TopologyCatalogs": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "counts": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "members": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "apps": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "subscriptions": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "consumer_orgs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "products": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "apis": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "product_lifecycle_states": {
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "staged": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "published": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "deprecated": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "retired": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "archived": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  }
                }
              }
            }
          },
          "consumer_org_list_url": {
            "type": "string"
          },
          "gateway_service_types": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "total_results": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TopologyGatewayServices"
                }
              }
            }
          },
          "spaces": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "total_results": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TopologySpaces"
                }
              }
            }
          }
        }
      },
      "TopologySpaces": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "counts": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "products": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "apis": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              }
            }
          },
          "gateway_service_types": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "total_results": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2147483647
              },
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TopologyGatewayServices"
                }
              }
            }
          }
        }
      },
      "TopologyGatewayServices": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "gateway_service_type": {
            "type": "string",
            "enum": [
              "datapower-gateway",
              "datapower-api-gateway",
              "event-gateway"
            ]
          }
        }
      },
      "TransferOwner": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "new_owner_associate_url": {
            "type": "string",
            "format": "uri"
          },
          "new_owner_member_url": {
            "type": "string",
            "format": "uri"
          },
          "new_owner_user_url": {
            "type": "string",
            "format": "uri"
          },
          "old_owner_new_role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "OauthRedirect": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "code": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "error_description": {
            "type": "string"
          },
          "error_uri": {
            "type": "string"
          }
        }
      },
      "Property": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "PropertyList": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "EmailSender": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "custom": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "NameValuePairs": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "ResourceVisibility": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "public",
              "private",
              "custom"
            ]
          },
          "group_urls": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_urls": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "ProductVisibility": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "view",
          "subscribe"
        ],
        "properties": {
          "view": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "public",
                  "authenticated",
                  "custom"
                ]
              },
              "enabled": {
                "type": "boolean"
              },
              "group_urls": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "org_urls": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "subscribe": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "authenticated",
                  "custom"
                ]
              },
              "enabled": {
                "type": "boolean"
              },
              "group_urls": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "org_urls": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "Visibility": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "view",
          "subscribe"
        ],
        "properties": {
          "view": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "public",
                  "authenticated",
                  "custom"
                ]
              },
              "enabled": {
                "type": "boolean"
              },
              "tags": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "orgs": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "subscribe": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "authenticated",
                  "custom"
                ]
              },
              "enabled": {
                "type": "boolean"
              },
              "tags": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "orgs": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "PrivateKeyEntry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pem": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "CertEntry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pem": {
            "type": "string"
          },
          "certificate_info": {
            "type": "string"
          }
        }
      },
      "UserRegistryExecute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "user_registry": {
            "$ref": "#/components/schemas/UserRegistry"
          }
        }
      },
      "UserRegistryExecuteResponse": {
        "type": "object",
        "additionalProperties": true
      },
      "TestConnectionCredentials": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "AuditEndpointTestConnection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "endpoint": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "UserRegistryTestConnection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "user_registry": {
            "$ref": "#/components/schemas/UserRegistry"
          },
          "credentials": {
            "$ref": "#/components/schemas/TestConnectionCredentials"
          }
        }
      },
      "ExportP12Pem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "export_password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "SendEmail": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "cc": {
            "type": "string"
          },
          "bcc": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "content_type": {
            "type": "string",
            "enum": [
              "text",
              "html"
            ]
          }
        }
      },
      "EmailToOwners": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "consumer_org_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "consumer_group_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "subject": {
            "type": "string",
            "minLength": 1
          },
          "body": {
            "type": "string",
            "minLength": 1
          },
          "body_html": {
            "type": "string"
          },
          "content_type": {
            "type": "string",
            "enum": [
              "text",
              "html",
              "html_and_text"
            ]
          }
        },
        "required": [
          "subject",
          "body",
          "content_type"
        ]
      },
      "EmailToOwnersResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "num_emails_sent": {
            "type": "integer"
          },
          "failed_emails": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "org_url": {
                  "type": "string",
                  "format": "uri"
                },
                "owner_email": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "EmailProviderOrgOwners": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "org_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "subject": {
            "type": "string",
            "minLength": 1
          },
          "body": {
            "type": "string",
            "minLength": 1
          },
          "body_html": {
            "type": "string"
          },
          "content_type": {
            "type": "string",
            "enum": [
              "text",
              "html",
              "html_and_text"
            ]
          }
        },
        "required": [
          "org_urls",
          "subject",
          "body",
          "content_type"
        ]
      },
      "EmailProviderOrgOwnersResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "num_emails_sent": {
            "type": "integer"
          },
          "failed_emails": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "org_url": {
                  "type": "string",
                  "format": "uri"
                },
                "owner_email": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "SyncRoles": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "access_token": {
            "type": "string"
          }
        },
        "required": [
          "access_token"
        ]
      },
      "MailServerSavedTestConnection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MailServerProvidedTestConnection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mail_server": {
            "$ref": "#/components/schemas/MailServer"
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ValidationResults": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "string",
            "enum": [
              "success",
              "warning",
              "error"
            ]
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SecuredEndpoint": {
        "type": "object",
        "additionalProperties": false,
        "nullable": true,
        "required": [
          "endpoint"
        ],
        "properties": {
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "IntrospectWsdlMultipart": {
        "type": "object",
        "properties": {
          "wsdl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wsdl"
            }
          }
        }
      },
      "DraftAPIMultipart": {
        "type": "object",
        "properties": {
          "openapi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApi2Definition"
            }
          },
          "wsdl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wsdl"
            }
          }
        }
      },
      "TargetServiceMultipart": {
        "type": "object",
        "properties": {
          "wsdl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wsdl"
            }
          }
        }
      },
      "DraftProductMultipart": {
        "type": "object",
        "required": [
          "product",
          "openapi"
        ],
        "properties": {
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDefinition"
            }
          },
          "visibility": {
            "$ref": "#/components/schemas/Visibility"
          },
          "openapi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApi2Definition"
            }
          },
          "wsdl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wsdl"
            }
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        }
      },
      "DraftProductPublishMultipart": {
        "type": "object",
        "required": [
          "product",
          "openapi"
        ],
        "properties": {
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDefinition"
            }
          },
          "openapi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApi2Definition"
            }
          },
          "wsdl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wsdl"
            }
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        }
      },
      "DraftProductPublish": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "draft_product_url"
        ],
        "properties": {
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "draft_product_url": {
            "type": "string",
            "format": "uri"
          },
          "visibility": {
            "$ref": "#/components/schemas/Visibility"
          }
        }
      },
      "GatewayExtensionMultipart": {
        "type": "object",
        "properties": {
          "implementation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Implementation"
            }
          }
        }
      },
      "ProductMultipart": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "product",
          "openapi"
        ],
        "properties": {
          "gateway_service_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDefinition"
            }
          },
          "openapi": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApi2Definition"
            }
          },
          "wsdl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wsdl"
            }
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        }
      },
      "PolicyMultipart": {
        "type": "object",
        "properties": {
          "policy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyDefinition"
            }
          },
          "implementation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Implementation"
            }
          }
        }
      },
      "ProductDefinition": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "product": {
            "type": "string",
            "enum": [
              "1.0.0"
            ]
          },
          "info": {
            "type": "object",
            "additionalProperties": true,
            "required": [
              "name",
              "version"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            }
          }
        }
      },
      "OpenApi2Definition": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "swagger": {
            "type": "string",
            "enum": [
              "2.0.0"
            ]
          },
          "info": {
            "type": "object",
            "additionalProperties": true,
            "required": [
              "title",
              "version"
            ],
            "properties": {
              "title": {
                "type": "string"
              },
              "x-ibm-name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "x-ibm-summary": {
                "type": "string"
              }
            }
          }
        }
      },
      "Wsdl": {
        "type": "object",
        "additionalProperties": true
      },
      "Metadata": {
        "type": "object",
        "additionalProperties": true
      },
      "Implementation": {
        "type": "object",
        "additionalProperties": true
      },
      "PolicyDefinition": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "policy": {
            "type": "string",
            "enum": [
              "1.0.0"
            ]
          },
          "info": {
            "type": "object",
            "additionalProperties": true,
            "required": [
              "name",
              "version"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            }
          }
        }
      },
      "Analytics": {
        "type": "object",
        "additionalProperties": true
      },
      "OAI3": {
        "type": "object",
        "additionalProperties": true,
        "nullable": true
      },
      "ProductSpecialization": {
        "type": "object",
        "nullable": true,
        "properties": {
          "spaces": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "gateway_service_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "oauth_provider_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "task_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "APISpecialization": {
        "type": "object",
        "nullable": true,
        "properties": {
          "spaces": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "gateway_service_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "user_registry_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "oauth_provider_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "tls_client_profile_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "extension_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "policy_urls": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "SubsystemService": {
        "type": "object",
        "additionalProperties": true
      },
      "SnapshotData": {
        "type": "object",
        "additionalProperties": true
      },
      "UpdateCredentialsResponse": {
        "type": "object",
        "additionalProperties": true
      },
      "SubsystemServiceList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsystemService"
            }
          }
        }
      },
      "LastProcessedEvent": {
        "type": "object",
        "required": [
          "event_id"
        ],
        "additionalProperties": false,
        "properties": {
          "event_id": {
            "type": "string"
          }
        }
      },
      "AssemblyDebug": {
        "type": "object",
        "additionalProperties": true
      },
      "AssemblyDebugCreateRequest": {
        "type": "object",
        "properties": {
          "FilterByAPI": {
            "type": "string"
          }
        }
      },
      "AssemblyDebugCreateResponse": {
        "type": "object",
        "properties": {
          "CaptureId": {
            "type": "object"
          }
        }
      },
      "AssemblyDebugCapture": {
        "type": "object",
        "additionalProperties": true
      },
      "AssemblyDebugCaptureTransaction": {
        "type": "object",
        "additionalProperties": true
      },
      "SubscriberProcessingStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "service_state": {
            "type": "string",
            "enum": [
              "green",
              "orange",
              "red"
            ]
          },
          "service_up_to_date": {
            "type": "boolean"
          },
          "last_processed_event": {
            "type": "object",
            "properties": {
              "event_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "filter": {
                "type": "string"
              },
              "generated_at": {
                "type": "string"
              },
              "processed_at": {
                "type": "string"
              },
              "event_processing_time": {
                "type": "integer"
              },
              "elapsed_time_since_last_processed_event": {
                "type": "integer"
              }
            }
          },
          "number_of_outstanding_sent_events": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "last_sent_event": {
            "type": "object",
            "properties": {
              "event_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "sent_at": {
                "type": "string"
              },
              "generated_at": {
                "type": "string"
              }
            }
          },
          "number_of_outstanding_queued_events": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          }
        }
      },
      "InternalCache": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cache_type"
        ],
        "properties": {
          "cache_type": {
            "type": "string"
          },
          "delete_key": {
            "type": "string"
          },
          "clear_entries": {
            "type": "boolean"
          }
        }
      },
      "Error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "integer",
            "minimum": 400,
            "maximum": 599
          },
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PublicKeyJwk": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "kty": {
            "type": "string"
          },
          "n": {
            "type": "string"
          },
          "e": {
            "type": "string"
          },
          "alg": {
            "type": "string"
          },
          "kid": {
            "type": "string"
          },
          "use": {
            "type": "string"
          }
        }
      },
      "NotificationLanguage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "notification_language"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "variables": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "body_html": {
            "type": "string"
          },
          "content_type": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "text",
                "html"
              ]
            }
          },
          "notification_template_name": {
            "type": "string"
          },
          "notification_template_type": {
            "type": "string"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "catalog_url": {
            "type": "string",
            "format": "uri"
          },
          "space_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "notification_template_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "NotificationLanguageList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationLanguage"
            }
          }
        }
      },
      "AllowedProductPublishValidation": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          }
        }
      }
    },
    "responses": {
      "Error": {
        "description": "Unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "/oauth2/authorize",
            "scopes": {
              "api-analytics:view": "Create an Analytics object",
              "api-drafts:edit": "Clear the Draft objects, Create a Draft API object, Clear all Draft API objects in all collections, Clear the Draft API objects, Update the Draft API object by id, Delete the Draft API object by id, Update the Draft API object by name and version, Delete the Draft API object by name and version",
              "api-drafts:view": "List the Draft objects, List the Search objects, List all Draft API objects in all collections, List the Draft API objects, Get the Draft API object by id, Get the Draft API object by name and version",
              "app:manage:all": "Create a Application object, Clear the Application objects, Update the Application object by name or id, Delete the Application object by name or id, Create a Application Credential object, Update the Application Credential object by name or id, Delete the Application Credential object by name or id, Create a Subscription object, Clear the Subscription objects, Update the Subscription object by name or id, Delete the Subscription object by name or id",
              "app:view:all": "List the Application objects, Get the Application object by name or id, List the Application Credential objects, Get the Application Credential object by name or id, List the Subscription objects, Get the Subscription object by name or id",
              "approval:view": "List the Task objects, Get the Task object by name or id, Update the Task object by name or id",
              "child:create": "Create a Catalog object, Create a Space object",
              "child:manage": "Clear the Catalog objects, Update the Catalog object by name or id, Delete the Catalog object by name or id, Clear the Space objects, Update the Space object by name or id, Delete the Space object by name or id",
              "child:view": "List the Catalog objects, Get the Catalog object by name or id, List the Space objects, Get the Space object by name or id",
              "cloud:manage": "Update the Cloud Setting object, Update the User Registry Setting object, Update the Notification Style object, Create a Registration object, Clear the Registration objects, Update the Registration object by name or id, Delete the Registration object by name or id, Update the Webhook object by name or id",
              "cloud:view": "Get the Cloud Setting object, Get the User Registry Setting object, Get the Notification Style object, List all Notification Template objects in all collections, List all Role Default objects in all collections, List the Registration objects, Get the Registration object by name or id, List the Subsystem Service objects, List the Webhook objects, Get the Webhook object by name or id",
              "consumer-org:manage": "Clear the Activation objects, Delete the Activation object by name or id, Create a Consumer Organization object, Clear the Consumer Organization objects, Update the Consumer Organization object by name or id, Delete the Consumer Organization object by name or id, Create a Payment Method object, Update the Payment Method object by name or id, Delete the Payment Method object by name or id",
              "consumer-org:view": "List the Activation objects, Get the Activation object by name or id, List the Consumer Organization objects, Get the Consumer Organization object by name or id, List the Payment Method objects, Get the Payment Method object by name or id",
              "my:manage": "Create a API Key object, Delete the API Key object by name or id, Update the Me object, Delete the Me object",
              "my:view": "List the API Key objects, Get the API Key object by name or id, Get the Me object, List the My Permission objects, List the My Task objects, List the Originated Task objects, List the My Organization objects, List the My Catalog objects, List the My Space objects",
              "org:manage": "Update the Log Spec object, Create a User Registry object, Clear the User Registry objects, Update the User Registry object by name or id, Delete the User Registry object by name or id, Create a User object, Clear the User objects, Update the User object by name or id, Delete the User object by name or id, Update the Organization Setting object, Update the Organization object by name or id, Delete the Organization object by name or id, Create a Member Invitation object, Clear the Member Invitation objects, Update the Member Invitation object by name or id, Delete the Member Invitation object by name or id, Create a Member object, Clear the Member objects, Update the Member object by name or id, Delete the Member object by name or id, Create a Role object, Clear the Role objects, Update the Role object by name or id, Delete the Role object by name or id, Create a Availability Zone object, Clear the Availability Zone objects, Update the Availability Zone object by name or id, Delete the Availability Zone object by name or id, Create a Gateway Service object, Clear the Gateway Service objects, Update the Gateway Service object by name or id, Delete the Gateway Service object by name or id, Create a Policy object, Update the Policy object by id, Delete the Policy object by id, Create a Portal Service object, Clear the Portal Service objects, Update the Portal Service object by name or id, Delete the Portal Service object by name or id, Create a Analytics Service object, Clear the Analytics Service objects, Update the Analytics Service object by name or id, Delete the Analytics Service object by name or id, Create a Oauth Provider object, Clear the Oauth Provider objects, Update the Oauth Provider object by name or id, Delete the Oauth Provider object by name or id, Create a Mail Server object, Clear the Mail Server objects, Update the Mail Server object by name or id, Delete the Mail Server object by name or id, Create a Billing object, Clear the Billing objects, Update the Billing object by name or id, Delete the Billing object by name or id, Clear the Job objects, Delete the Job object by name or id, Create a TLS Server Profile object, Clear all TLS Server Profile objects in all collections, Clear the TLS Server Profile objects, Update the TLS Server Profile object by id, Delete the TLS Server Profile object by id, Update the TLS Server Profile object by name and version, Delete the TLS Server Profile object by name and version, Create a TLS Client Profile object, Clear all TLS Client Profile objects in all collections, Clear the TLS Client Profile objects, Update the TLS Client Profile object by id, Delete the TLS Client Profile object by id, Update the TLS Client Profile object by name and version, Delete the TLS Client Profile object by name and version, Create a Keystore object, Clear the Keystore objects, Update the Keystore object by name or id, Delete the Keystore object by name or id, Create a Truststore object, Clear the Truststore objects, Update the Truststore object by name or id, Delete the Truststore object by name or id, Create a Entry object, Clear the Entry objects, Update the Entry object by name or id, Delete the Entry object by name or id, Update the Catalog Setting object, Create a Configured Gateway Service object, Clear the Configured Gateway Service objects, Delete the Configured Gateway Service object by name or id, Create a Configured Catalog User Registry object, Delete the Configured Catalog User Registry object by name or id, Create a Configured API User Registry object, Clear the Configured API User Registry objects, Delete the Configured API User Registry object by name or id, Create a Configured TLS Client Profile object, Clear the Configured TLS Client Profile objects, Delete the Configured TLS Client Profile object by id, Delete the Configured TLS Client Profile object by name and version, Create a Configured Billing object, Clear the Configured Billing objects, Delete the Configured Billing object by name or id, Create a Configured Oauth Provider object, Clear the Configured Oauth Provider objects, Delete the Configured Oauth Provider object by name or id, Create a Application Type object, Clear the Application Type objects, Update the Application Type object by name or id, Delete the Application Type object by name or id, Augment the Configuration Property with additional name/value pairs, Clear the Configuration Property objects, Update the Configuration Property object, Delete the Configuration Property object, Create a Global Policy object, Clear all Global Policy objects in all collections, Clear the Global Policy objects, Update the Global Policy object by id, Delete the Global Policy object by id, Update the Global Policy object by name and version, Delete the Global Policy object by name and version, Create a Service object, Clear all Service objects in all collections, Update the Service object by id, Clear the Service objects, Delete the Service object by id, Update the Service object by name and version, Delete the Service object by name and version, Create the Global Policy Error object, Update the Global Policy Error object, Delete the Global Policy Error object, Create the Global Policy Prehook object, Update the Global Policy Prehook object, Delete the Global Policy Prehook object, Create the Global Policy Posthook object, Update the Global Policy Posthook object, Delete the Global Policy Posthook object, Update the Space Setting object, Update the Consumer Organization Setting object, Delete the Consumer Organization Setting object",
              "org:view": "Get the Log Spec object, List the User Registry objects, Get the User Registry object by name or id, List the User objects, Get the User object by name or id, List all Integration objects in all collections, Get the Organization Setting object, Get the Organization object by name or id, List the Associate objects, Get the Associate object by name or id, List the Member Invitation objects, Get the Member Invitation object by name or id, List the Member objects, Get the Member object by name or id, List the Role objects, Get the Role object by name or id, List the Availability Zone objects, Get the Availability Zone object by name or id, List the Gateway Service objects, Get the Gateway Service object by name or id, List all Policy objects in all collections, List the Policy objects, Get the Policy object by id, Get the Policy object by name and version, List all Extension objects in all collections, List the Extension objects, Get the Extension object by id, Get the Extension object by name and version, Create the Gateway Extension object, Get the Gateway Extension object, Update the Gateway Extension object, Delete the Gateway Extension object, List the Portal Service objects, Get the Portal Service object by name or id, List the Analytics Service objects, Get the Analytics Service object by name or id, List the Oauth Provider objects, Get the Oauth Provider object by name or id, List the Mail Server objects, Get the Mail Server object by name or id, List the Billing objects, Get the Billing object by name or id, List the Job objects, Get the Job object by name or id, List all TLS Server Profile objects in all collections, List the TLS Server Profile objects, Get the TLS Server Profile object by id, Get the TLS Server Profile object by name and version, List all TLS Client Profile objects in all collections, List the TLS Client Profile objects, Get the TLS Client Profile object by id, Get the TLS Client Profile object by name and version, List the Keystore objects, Get the Keystore object by name or id, List the Truststore objects, Get the Truststore object by name or id, List the Entry objects, Get the Entry object by name or id, Get the Catalog Setting object, List the Configured Gateway Service objects, Get the Configured Gateway Service object by name or id, List the Configured Catalog User Registry objects, Get the Configured Catalog User Registry object by name or id, List the Configured API User Registry objects, Get the Configured API User Registry object by name or id, List all Configured TLS Client Profile objects in all collections, Clear all Configured TLS Client Profile objects in all collections, List the Configured TLS Client Profile objects, Get the Configured TLS Client Profile object by id, Get the Configured TLS Client Profile object by name and version, List the Configured Billing objects, Get the Configured Billing object by name or id, List the Configured Oauth Provider objects, Get the Configured Oauth Provider object by name or id, List the Application Type objects, Get the Application Type object by name or id, List the Configuration Property objects, Get the Configuration Property object, List all Global Policy objects in all collections, List the Global Policy objects, Get the Global Policy object by id, Get the Global Policy object by name and version, List all Service objects in all collections, List the Service objects, Get the Service object by id, Get the Service object by name and version, Get the Global Policy Error object, Get the Global Policy Prehook object, Get the Global Policy Posthook object, Get the Space Setting object, Get the Consumer Organization Setting object, List the Primary Event objects, Get the Primary Event object by name or id, List the Subscriber Event objects, Get the Subscriber Event object by name or id, List the Task Queue objects, Get the Task Queue object by name or id",
              "product-drafts:edit": "Create a Draft Product object, Clear all Draft Product objects in all collections, Clear the Draft Product objects, Update the Draft Product object by id, Delete the Draft Product object by id, Update the Draft Product object by name and version, Delete the Draft Product object by name and version",
              "product-drafts:view": "List all Draft Product objects in all collections, List the Draft Product objects, Get the Draft Product object by id, Get the Draft Product object by name and version",
              "product:manage": "Clear all Product objects in all collections, Clear the Product objects, Update the Product object by id, Delete the Product object by id, Update the Product object by name and version, Delete the Product object by name and version, Update the API object by id, Update the API object by name and version",
              "product:view": "List all Product objects in all collections, List the Product objects, Get the Product object by id, Get the Product object by name and version, List all API objects in all collections, List the API objects, Get the API object by id, Get the API object by name and version",
              "provider-org:manage": "Create an Organization Invitation object, Clear the Organization Invitation objects, Update the Organization Invitation object by name or id, Delete the Organization Invitation object by name or id, Create a Group object, Clear the Group objects, Update the Group object by name or id, Delete the Group object by name or id",
              "provider-org:view": "List the Organization Invitation objects, Get the Organization Invitation object by name or id, List the Group objects, Get the Group object by name or id",
              "webhook:manage": "Create a Webhook object, Update the Webhook object by name or id, Delete the Webhook object by name or id",
              "webhook:view": "List the Webhook objects, Get the Webhook object by name or id, List the Snapshot objects, Get the Snapshot object by name or id"
            }
          },
          "password": {
            "tokenUrl": "/token",
            "refreshUrl": "/token",
            "scopes": {
              "api-analytics:view": "Create an Analytics object",
              "api-drafts:edit": "Clear the Draft objects, Create a Draft API object, Clear all Draft API objects in all collections, Clear the Draft API objects, Update the Draft API object by id, Delete the Draft API object by id, Update the Draft API object by name and version, Delete the Draft API object by name and version",
              "api-drafts:view": "List the Draft objects, List the Search objects, List all Draft API objects in all collections, List the Draft API objects, Get the Draft API object by id, Get the Draft API object by name and version",
              "app:manage:all": "Create a Application object, Clear the Application objects, Update the Application object by name or id, Delete the Application object by name or id, Create a Application Credential object, Update the Application Credential object by name or id, Delete the Application Credential object by name or id, Create a Subscription object, Clear the Subscription objects, Update the Subscription object by name or id, Delete the Subscription object by name or id",
              "app:view:all": "List the Application objects, Get the Application object by name or id, List the Application Credential objects, Get the Application Credential object by name or id, List the Subscription objects, Get the Subscription object by name or id",
              "approval:view": "List the Task objects, Get the Task object by name or id, Update the Task object by name or id",
              "child:create": "Create a Catalog object, Create a Space object",
              "child:manage": "Clear the Catalog objects, Update the Catalog object by name or id, Delete the Catalog object by name or id, Clear the Space objects, Update the Space object by name or id, Delete the Space object by name or id",
              "child:view": "List the Catalog objects, Get the Catalog object by name or id, List the Space objects, Get the Space object by name or id",
              "cloud:manage": "Update the Cloud Setting object, Update the User Registry Setting object, Update the Notification Style object, Create a Registration object, Clear the Registration objects, Update the Registration object by name or id, Delete the Registration object by name or id, Update the Webhook object by name or id",
              "cloud:view": "Get the Cloud Setting object, Get the User Registry Setting object, Get the Notification Style object, List all Notification Template objects in all collections, List all Role Default objects in all collections, List the Registration objects, Get the Registration object by name or id, List the Subsystem Service objects, List the Webhook objects, Get the Webhook object by name or id",
              "consumer-org:manage": "Clear the Activation objects, Delete the Activation object by name or id, Create a Consumer Organization object, Clear the Consumer Organization objects, Update the Consumer Organization object by name or id, Delete the Consumer Organization object by name or id, Create a Payment Method object, Update the Payment Method object by name or id, Delete the Payment Method object by name or id",
              "consumer-org:view": "List the Activation objects, Get the Activation object by name or id, List the Consumer Organization objects, Get the Consumer Organization object by name or id, List the Payment Method objects, Get the Payment Method object by name or id",
              "my:manage": "Create a API Key object, Delete the API Key object by name or id, Update the Me object, Delete the Me object",
              "my:view": "List the API Key objects, Get the API Key object by name or id, Get the Me object, List the My Permission objects, List the My Task objects, List the Originated Task objects, List the My Organization objects, List the My Catalog objects, List the My Space objects",
              "org:manage": "Update the Log Spec object, Create a User Registry object, Clear the User Registry objects, Update the User Registry object by name or id, Delete the User Registry object by name or id, Create a User object, Clear the User objects, Update the User object by name or id, Delete the User object by name or id, Update the Organization Setting object, Update the Organization object by name or id, Delete the Organization object by name or id, Create a Member Invitation object, Clear the Member Invitation objects, Update the Member Invitation object by name or id, Delete the Member Invitation object by name or id, Create a Member object, Clear the Member objects, Update the Member object by name or id, Delete the Member object by name or id, Create a Role object, Clear the Role objects, Update the Role object by name or id, Delete the Role object by name or id, Create a Availability Zone object, Clear the Availability Zone objects, Update the Availability Zone object by name or id, Delete the Availability Zone object by name or id, Create a Gateway Service object, Clear the Gateway Service objects, Update the Gateway Service object by name or id, Delete the Gateway Service object by name or id, Create a Policy object, Update the Policy object by id, Delete the Policy object by id, Create a Portal Service object, Clear the Portal Service objects, Update the Portal Service object by name or id, Delete the Portal Service object by name or id, Create a Analytics Service object, Clear the Analytics Service objects, Update the Analytics Service object by name or id, Delete the Analytics Service object by name or id, Create a Oauth Provider object, Clear the Oauth Provider objects, Update the Oauth Provider object by name or id, Delete the Oauth Provider object by name or id, Create a Mail Server object, Clear the Mail Server objects, Update the Mail Server object by name or id, Delete the Mail Server object by name or id, Create a Billing object, Clear the Billing objects, Update the Billing object by name or id, Delete the Billing object by name or id, Clear the Job objects, Delete the Job object by name or id, Create a TLS Server Profile object, Clear all TLS Server Profile objects in all collections, Clear the TLS Server Profile objects, Update the TLS Server Profile object by id, Delete the TLS Server Profile object by id, Update the TLS Server Profile object by name and version, Delete the TLS Server Profile object by name and version, Create a TLS Client Profile object, Clear all TLS Client Profile objects in all collections, Clear the TLS Client Profile objects, Update the TLS Client Profile object by id, Delete the TLS Client Profile object by id, Update the TLS Client Profile object by name and version, Delete the TLS Client Profile object by name and version, Create a Keystore object, Clear the Keystore objects, Update the Keystore object by name or id, Delete the Keystore object by name or id, Create a Truststore object, Clear the Truststore objects, Update the Truststore object by name or id, Delete the Truststore object by name or id, Create a Entry object, Clear the Entry objects, Update the Entry object by name or id, Delete the Entry object by name or id, Update the Catalog Setting object, Create a Configured Gateway Service object, Clear the Configured Gateway Service objects, Delete the Configured Gateway Service object by name or id, Create a Configured Catalog User Registry object, Delete the Configured Catalog User Registry object by name or id, Create a Configured API User Registry object, Clear the Configured API User Registry objects, Delete the Configured API User Registry object by name or id, Create a Configured TLS Client Profile object, Clear the Configured TLS Client Profile objects, Delete the Configured TLS Client Profile object by id, Delete the Configured TLS Client Profile object by name and version, Create a Configured Billing object, Clear the Configured Billing objects, Delete the Configured Billing object by name or id, Create a Configured Oauth Provider object, Clear the Configured Oauth Provider objects, Delete the Configured Oauth Provider object by name or id, Create a Application Type object, Clear the Application Type objects, Update the Application Type object by name or id, Delete the Application Type object by name or id, Augment the Configuration Property with additional name/value pairs, Clear the Configuration Property objects, Update the Configuration Property object, Delete the Configuration Property object, Create a Global Policy object, Clear all Global Policy objects in all collections, Clear the Global Policy objects, Update the Global Policy object by id, Delete the Global Policy object by id, Update the Global Policy object by name and version, Delete the Global Policy object by name and version, Create a Service object, Clear all Service objects in all collections, Update the Service object by id, Clear the Service objects, Delete the Service object by id, Update the Service object by name and version, Delete the Service object by name and version, Create the Global Policy Error object, Update the Global Policy Error object, Delete the Global Policy Error object, Create the Global Policy Prehook object, Update the Global Policy Prehook object, Delete the Global Policy Prehook object, Create the Global Policy Posthook object, Update the Global Policy Posthook object, Delete the Global Policy Posthook object, Update the Space Setting object, Update the Consumer Organization Setting object, Delete the Consumer Organization Setting object",
              "org:view": "Get the Log Spec object, List the User Registry objects, Get the User Registry object by name or id, List the User objects, Get the User object by name or id, List all Integration objects in all collections, Get the Organization Setting object, Get the Organization object by name or id, List the Associate objects, Get the Associate object by name or id, List the Member Invitation objects, Get the Member Invitation object by name or id, List the Member objects, Get the Member object by name or id, List the Role objects, Get the Role object by name or id, List the Availability Zone objects, Get the Availability Zone object by name or id, List the Gateway Service objects, Get the Gateway Service object by name or id, List all Policy objects in all collections, List the Policy objects, Get the Policy object by id, Get the Policy object by name and version, List all Extension objects in all collections, List the Extension objects, Get the Extension object by id, Get the Extension object by name and version, Create the Gateway Extension object, Get the Gateway Extension object, Update the Gateway Extension object, Delete the Gateway Extension object, List the Portal Service objects, Get the Portal Service object by name or id, List the Analytics Service objects, Get the Analytics Service object by name or id, List the Oauth Provider objects, Get the Oauth Provider object by name or id, List the Mail Server objects, Get the Mail Server object by name or id, List the Billing objects, Get the Billing object by name or id, List the Job objects, Get the Job object by name or id, List all TLS Server Profile objects in all collections, List the TLS Server Profile objects, Get the TLS Server Profile object by id, Get the TLS Server Profile object by name and version, List all TLS Client Profile objects in all collections, List the TLS Client Profile objects, Get the TLS Client Profile object by id, Get the TLS Client Profile object by name and version, List the Keystore objects, Get the Keystore object by name or id, List the Truststore objects, Get the Truststore object by name or id, List the Entry objects, Get the Entry object by name or id, Get the Catalog Setting object, List the Configured Gateway Service objects, Get the Configured Gateway Service object by name or id, List the Configured Catalog User Registry objects, Get the Configured Catalog User Registry object by name or id, List the Configured API User Registry objects, Get the Configured API User Registry object by name or id, List all Configured TLS Client Profile objects in all collections, Clear all Configured TLS Client Profile objects in all collections, List the Configured TLS Client Profile objects, Get the Configured TLS Client Profile object by id, Get the Configured TLS Client Profile object by name and version, List the Configured Billing objects, Get the Configured Billing object by name or id, List the Configured Oauth Provider objects, Get the Configured Oauth Provider object by name or id, List the Application Type objects, Get the Application Type object by name or id, List the Configuration Property objects, Get the Configuration Property object, List all Global Policy objects in all collections, List the Global Policy objects, Get the Global Policy object by id, Get the Global Policy object by name and version, List all Service objects in all collections, List the Service objects, Get the Service object by id, Get the Service object by name and version, Get the Global Policy Error object, Get the Global Policy Prehook object, Get the Global Policy Posthook object, Get the Space Setting object, Get the Consumer Organization Setting object, List the Primary Event objects, Get the Primary Event object by name or id, List the Subscriber Event objects, Get the Subscriber Event object by name or id, List the Task Queue objects, Get the Task Queue object by name or id",
              "product-drafts:edit": "Create a Draft Product object, Clear all Draft Product objects in all collections, Clear the Draft Product objects, Update the Draft Product object by id, Delete the Draft Product object by id, Update the Draft Product object by name and version, Delete the Draft Product object by name and version",
              "product-drafts:view": "List all Draft Product objects in all collections, List the Draft Product objects, Get the Draft Product object by id, Get the Draft Product object by name and version",
              "product:manage": "Clear all Product objects in all collections, Clear the Product objects, Update the Product object by id, Delete the Product object by id, Update the Product object by name and version, Delete the Product object by name and version, Update the API object by id, Update the API object by name and version",
              "product:view": "List all Product objects in all collections, List the Product objects, Get the Product object by id, Get the Product object by name and version, List all API objects in all collections, List the API objects, Get the API object by id, Get the API object by name and version",
              "provider-org:manage": "Create an Organization Invitation object, Clear the Organization Invitation objects, Update the Organization Invitation object by name or id, Delete the Organization Invitation object by name or id, Create a Group object, Clear the Group objects, Update the Group object by name or id, Delete the Group object by name or id",
              "provider-org:view": "List the Organization Invitation objects, Get the Organization Invitation object by name or id, List the Group objects, Get the Group object by name or id",
              "webhook:manage": "Create a Webhook object, Update the Webhook object by name or id, Delete the Webhook object by name or id",
              "webhook:view": "List the Webhook objects, Get the Webhook object by name or id, List the Snapshot objects, Get the Snapshot object by name or id"
            }
          },
          "clientCredentials": {
            "tokenUrl": "/token",
            "scopes": {
              "api-analytics:view": "Create an Analytics object",
              "api-drafts:edit": "Clear the Draft objects, Create a Draft API object, Clear all Draft API objects in all collections, Clear the Draft API objects, Update the Draft API object by id, Delete the Draft API object by id, Update the Draft API object by name and version, Delete the Draft API object by name and version",
              "api-drafts:view": "List the Draft objects, List the Search objects, List all Draft API objects in all collections, List the Draft API objects, Get the Draft API object by id, Get the Draft API object by name and version",
              "app:manage:all": "Create a Application object, Clear the Application objects, Update the Application object by name or id, Delete the Application object by name or id, Create a Application Credential object, Update the Application Credential object by name or id, Delete the Application Credential object by name or id, Create a Subscription object, Clear the Subscription objects, Update the Subscription object by name or id, Delete the Subscription object by name or id",
              "app:view:all": "List the Application objects, Get the Application object by name or id, List the Application Credential objects, Get the Application Credential object by name or id, List the Subscription objects, Get the Subscription object by name or id",
              "approval:view": "List the Task objects, Get the Task object by name or id, Update the Task object by name or id",
              "child:create": "Create a Catalog object, Create a Space object",
              "child:manage": "Clear the Catalog objects, Update the Catalog object by name or id, Delete the Catalog object by name or id, Clear the Space objects, Update the Space object by name or id, Delete the Space object by name or id",
              "child:view": "List the Catalog objects, Get the Catalog object by name or id, List the Space objects, Get the Space object by name or id",
              "cloud:manage": "Update the Cloud Setting object, Update the User Registry Setting object, Update the Notification Style object, Create a Registration object, Clear the Registration objects, Update the Registration object by name or id, Delete the Registration object by name or id, Update the Webhook object by name or id",
              "cloud:view": "Get the Cloud Setting object, Get the User Registry Setting object, Get the Notification Style object, List all Notification Template objects in all collections, List all Role Default objects in all collections, List the Registration objects, Get the Registration object by name or id, List the Subsystem Service objects, List the Webhook objects, Get the Webhook object by name or id",
              "consumer-org:manage": "Clear the Activation objects, Delete the Activation object by name or id, Create a Consumer Organization object, Clear the Consumer Organization objects, Update the Consumer Organization object by name or id, Delete the Consumer Organization object by name or id, Create a Payment Method object, Update the Payment Method object by name or id, Delete the Payment Method object by name or id",
              "consumer-org:view": "List the Activation objects, Get the Activation object by name or id, List the Consumer Organization objects, Get the Consumer Organization object by name or id, List the Payment Method objects, Get the Payment Method object by name or id",
              "my:manage": "Create a API Key object, Delete the API Key object by name or id, Update the Me object, Delete the Me object",
              "my:view": "List the API Key objects, Get the API Key object by name or id, Get the Me object, List the My Permission objects, List the My Task objects, List the Originated Task objects, List the My Organization objects, List the My Catalog objects, List the My Space objects",
              "org:manage": "Update the Log Spec object, Create a User Registry object, Clear the User Registry objects, Update the User Registry object by name or id, Delete the User Registry object by name or id, Create a User object, Clear the User objects, Update the User object by name or id, Delete the User object by name or id, Update the Organization Setting object, Update the Organization object by name or id, Delete the Organization object by name or id, Create a Member Invitation object, Clear the Member Invitation objects, Update the Member Invitation object by name or id, Delete the Member Invitation object by name or id, Create a Member object, Clear the Member objects, Update the Member object by name or id, Delete the Member object by name or id, Create a Role object, Clear the Role objects, Update the Role object by name or id, Delete the Role object by name or id, Create a Availability Zone object, Clear the Availability Zone objects, Update the Availability Zone object by name or id, Delete the Availability Zone object by name or id, Create a Gateway Service object, Clear the Gateway Service objects, Update the Gateway Service object by name or id, Delete the Gateway Service object by name or id, Create a Policy object, Update the Policy object by id, Delete the Policy object by id, Create a Portal Service object, Clear the Portal Service objects, Update the Portal Service object by name or id, Delete the Portal Service object by name or id, Create a Analytics Service object, Clear the Analytics Service objects, Update the Analytics Service object by name or id, Delete the Analytics Service object by name or id, Create a Oauth Provider object, Clear the Oauth Provider objects, Update the Oauth Provider object by name or id, Delete the Oauth Provider object by name or id, Create a Mail Server object, Clear the Mail Server objects, Update the Mail Server object by name or id, Delete the Mail Server object by name or id, Create a Billing object, Clear the Billing objects, Update the Billing object by name or id, Delete the Billing object by name or id, Clear the Job objects, Delete the Job object by name or id, Create a TLS Server Profile object, Clear all TLS Server Profile objects in all collections, Clear the TLS Server Profile objects, Update the TLS Server Profile object by id, Delete the TLS Server Profile object by id, Update the TLS Server Profile object by name and version, Delete the TLS Server Profile object by name and version, Create a TLS Client Profile object, Clear all TLS Client Profile objects in all collections, Clear the TLS Client Profile objects, Update the TLS Client Profile object by id, Delete the TLS Client Profile object by id, Update the TLS Client Profile object by name and version, Delete the TLS Client Profile object by name and version, Create a Keystore object, Clear the Keystore objects, Update the Keystore object by name or id, Delete the Keystore object by name or id, Create a Truststore object, Clear the Truststore objects, Update the Truststore object by name or id, Delete the Truststore object by name or id, Create a Entry object, Clear the Entry objects, Update the Entry object by name or id, Delete the Entry object by name or id, Update the Catalog Setting object, Create a Configured Gateway Service object, Clear the Configured Gateway Service objects, Delete the Configured Gateway Service object by name or id, Create a Configured Catalog User Registry object, Delete the Configured Catalog User Registry object by name or id, Create a Configured API User Registry object, Clear the Configured API User Registry objects, Delete the Configured API User Registry object by name or id, Create a Configured TLS Client Profile object, Clear the Configured TLS Client Profile objects, Delete the Configured TLS Client Profile object by id, Delete the Configured TLS Client Profile object by name and version, Create a Configured Billing object, Clear the Configured Billing objects, Delete the Configured Billing object by name or id, Create a Configured Oauth Provider object, Clear the Configured Oauth Provider objects, Delete the Configured Oauth Provider object by name or id, Create a Application Type object, Clear the Application Type objects, Update the Application Type object by name or id, Delete the Application Type object by name or id, Augment the Configuration Property with additional name/value pairs, Clear the Configuration Property objects, Update the Configuration Property object, Delete the Configuration Property object, Create a Global Policy object, Clear all Global Policy objects in all collections, Clear the Global Policy objects, Update the Global Policy object by id, Delete the Global Policy object by id, Update the Global Policy object by name and version, Delete the Global Policy object by name and version, Create a Service object, Clear all Service objects in all collections, Update the Service object by id, Clear the Service objects, Delete the Service object by id, Update the Service object by name and version, Delete the Service object by name and version, Create the Global Policy Error object, Update the Global Policy Error object, Delete the Global Policy Error object, Create the Global Policy Prehook object, Update the Global Policy Prehook object, Delete the Global Policy Prehook object, Create the Global Policy Posthook object, Update the Global Policy Posthook object, Delete the Global Policy Posthook object, Update the Space Setting object, Update the Consumer Organization Setting object, Delete the Consumer Organization Setting object",
              "org:view": "Get the Log Spec object, List the User Registry objects, Get the User Registry object by name or id, List the User objects, Get the User object by name or id, List all Integration objects in all collections, Get the Organization Setting object, Get the Organization object by name or id, List the Associate objects, Get the Associate object by name or id, List the Member Invitation objects, Get the Member Invitation object by name or id, List the Member objects, Get the Member object by name or id, List the Role objects, Get the Role object by name or id, List the Availability Zone objects, Get the Availability Zone object by name or id, List the Gateway Service objects, Get the Gateway Service object by name or id, List all Policy objects in all collections, List the Policy objects, Get the Policy object by id, Get the Policy object by name and version, List all Extension objects in all collections, List the Extension objects, Get the Extension object by id, Get the Extension object by name and version, Create the Gateway Extension object, Get the Gateway Extension object, Update the Gateway Extension object, Delete the Gateway Extension object, List the Portal Service objects, Get the Portal Service object by name or id, List the Analytics Service objects, Get the Analytics Service object by name or id, List the Oauth Provider objects, Get the Oauth Provider object by name or id, List the Mail Server objects, Get the Mail Server object by name or id, List the Billing objects, Get the Billing object by name or id, List the Job objects, Get the Job object by name or id, List all TLS Server Profile objects in all collections, List the TLS Server Profile objects, Get the TLS Server Profile object by id, Get the TLS Server Profile object by name and version, List all TLS Client Profile objects in all collections, List the TLS Client Profile objects, Get the TLS Client Profile object by id, Get the TLS Client Profile object by name and version, List the Keystore objects, Get the Keystore object by name or id, List the Truststore objects, Get the Truststore object by name or id, List the Entry objects, Get the Entry object by name or id, Get the Catalog Setting object, List the Configured Gateway Service objects, Get the Configured Gateway Service object by name or id, List the Configured Catalog User Registry objects, Get the Configured Catalog User Registry object by name or id, List the Configured API User Registry objects, Get the Configured API User Registry object by name or id, List all Configured TLS Client Profile objects in all collections, Clear all Configured TLS Client Profile objects in all collections, List the Configured TLS Client Profile objects, Get the Configured TLS Client Profile object by id, Get the Configured TLS Client Profile object by name and version, List the Configured Billing objects, Get the Configured Billing object by name or id, List the Configured Oauth Provider objects, Get the Configured Oauth Provider object by name or id, List the Application Type objects, Get the Application Type object by name or id, List the Configuration Property objects, Get the Configuration Property object, List all Global Policy objects in all collections, List the Global Policy objects, Get the Global Policy object by id, Get the Global Policy object by name and version, List all Service objects in all collections, List the Service objects, Get the Service object by id, Get the Service object by name and version, Get the Global Policy Error object, Get the Global Policy Prehook object, Get the Global Policy Posthook object, Get the Space Setting object, Get the Consumer Organization Setting object, List the Primary Event objects, Get the Primary Event object by name or id, List the Subscriber Event objects, Get the Subscriber Event object by name or id, List the Task Queue objects, Get the Task Queue object by name or id",
              "product-drafts:edit": "Create a Draft Product object, Clear all Draft Product objects in all collections, Clear the Draft Product objects, Update the Draft Product object by id, Delete the Draft Product object by id, Update the Draft Product object by name and version, Delete the Draft Product object by name and version",
              "product-drafts:view": "List all Draft Product objects in all collections, List the Draft Product objects, Get the Draft Product object by id, Get the Draft Product object by name and version",
              "product:manage": "Clear all Product objects in all collections, Clear the Product objects, Update the Product object by id, Delete the Product object by id, Update the Product object by name and version, Delete the Product object by name and version, Update the API object by id, Update the API object by name and version",
              "product:view": "List all Product objects in all collections, List the Product objects, Get the Product object by id, Get the Product object by name and version, List all API objects in all collections, List the API objects, Get the API object by id, Get the API object by name and version",
              "provider-org:manage": "Create an Organization Invitation object, Clear the Organization Invitation objects, Update the Organization Invitation object by name or id, Delete the Organization Invitation object by name or id, Create a Group object, Clear the Group objects, Update the Group object by name or id, Delete the Group object by name or id",
              "provider-org:view": "List the Organization Invitation objects, Get the Organization Invitation object by name or id, List the Group objects, Get the Group object by name or id",
              "webhook:manage": "Create a Webhook object, Update the Webhook object by name or id, Delete the Webhook object by name or id",
              "webhook:view": "List the Webhook objects, Get the Webhook object by name or id, List the Snapshot objects, Get the Snapshot object by name or id"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "/oauth2/authorize",
            "tokenUrl": "/token",
            "refreshUrl": "/token",
            "scopes": {
              "api-analytics:view": "Create an Analytics object",
              "api-drafts:edit": "Clear the Draft objects, Create a Draft API object, Clear all Draft API objects in all collections, Clear the Draft API objects, Update the Draft API object by id, Delete the Draft API object by id, Update the Draft API object by name and version, Delete the Draft API object by name and version",
              "api-drafts:view": "List the Draft objects, List the Search objects, List all Draft API objects in all collections, List the Draft API objects, Get the Draft API object by id, Get the Draft API object by name and version",
              "app:manage:all": "Create a Application object, Clear the Application objects, Update the Application object by name or id, Delete the Application object by name or id, Create a Application Credential object, Update the Application Credential object by name or id, Delete the Application Credential object by name or id, Create a Subscription object, Clear the Subscription objects, Update the Subscription object by name or id, Delete the Subscription object by name or id",
              "app:view:all": "List the Application objects, Get the Application object by name or id, List the Application Credential objects, Get the Application Credential object by name or id, List the Subscription objects, Get the Subscription object by name or id",
              "approval:view": "List the Task objects, Get the Task object by name or id, Update the Task object by name or id",
              "child:create": "Create a Catalog object, Create a Space object",
              "child:manage": "Clear the Catalog objects, Update the Catalog object by name or id, Delete the Catalog object by name or id, Clear the Space objects, Update the Space object by name or id, Delete the Space object by name or id",
              "child:view": "List the Catalog objects, Get the Catalog object by name or id, List the Space objects, Get the Space object by name or id",
              "cloud:manage": "Update the Cloud Setting object, Update the User Registry Setting object, Update the Notification Style object, Create a Registration object, Clear the Registration objects, Update the Registration object by name or id, Delete the Registration object by name or id, Update the Webhook object by name or id",
              "cloud:view": "Get the Cloud Setting object, Get the User Registry Setting object, Get the Notification Style object, List all Notification Template objects in all collections, List all Role Default objects in all collections, List the Registration objects, Get the Registration object by name or id, List the Subsystem Service objects, List the Webhook objects, Get the Webhook object by name or id",
              "consumer-org:manage": "Clear the Activation objects, Delete the Activation object by name or id, Create a Consumer Organization object, Clear the Consumer Organization objects, Update the Consumer Organization object by name or id, Delete the Consumer Organization object by name or id, Create a Payment Method object, Update the Payment Method object by name or id, Delete the Payment Method object by name or id",
              "consumer-org:view": "List the Activation objects, Get the Activation object by name or id, List the Consumer Organization objects, Get the Consumer Organization object by name or id, List the Payment Method objects, Get the Payment Method object by name or id",
              "my:manage": "Create a API Key object, Delete the API Key object by name or id, Update the Me object, Delete the Me object",
              "my:view": "List the API Key objects, Get the API Key object by name or id, Get the Me object, List the My Permission objects, List the My Task objects, List the Originated Task objects, List the My Organization objects, List the My Catalog objects, List the My Space objects",
              "org:manage": "Update the Log Spec object, Create a User Registry object, Clear the User Registry objects, Update the User Registry object by name or id, Delete the User Registry object by name or id, Create a User object, Clear the User objects, Update the User object by name or id, Delete the User object by name or id, Update the Organization Setting object, Update the Organization object by name or id, Delete the Organization object by name or id, Create a Member Invitation object, Clear the Member Invitation objects, Update the Member Invitation object by name or id, Delete the Member Invitation object by name or id, Create a Member object, Clear the Member objects, Update the Member object by name or id, Delete the Member object by name or id, Create a Role object, Clear the Role objects, Update the Role object by name or id, Delete the Role object by name or id, Create a Availability Zone object, Clear the Availability Zone objects, Update the Availability Zone object by name or id, Delete the Availability Zone object by name or id, Create a Gateway Service object, Clear the Gateway Service objects, Update the Gateway Service object by name or id, Delete the Gateway Service object by name or id, Create a Policy object, Update the Policy object by id, Delete the Policy object by id, Create a Portal Service object, Clear the Portal Service objects, Update the Portal Service object by name or id, Delete the Portal Service object by name or id, Create a Analytics Service object, Clear the Analytics Service objects, Update the Analytics Service object by name or id, Delete the Analytics Service object by name or id, Create a Oauth Provider object, Clear the Oauth Provider objects, Update the Oauth Provider object by name or id, Delete the Oauth Provider object by name or id, Create a Mail Server object, Clear the Mail Server objects, Update the Mail Server object by name or id, Delete the Mail Server object by name or id, Create a Billing object, Clear the Billing objects, Update the Billing object by name or id, Delete the Billing object by name or id, Clear the Job objects, Delete the Job object by name or id, Create a TLS Server Profile object, Clear all TLS Server Profile objects in all collections, Clear the TLS Server Profile objects, Update the TLS Server Profile object by id, Delete the TLS Server Profile object by id, Update the TLS Server Profile object by name and version, Delete the TLS Server Profile object by name and version, Create a TLS Client Profile object, Clear all TLS Client Profile objects in all collections, Clear the TLS Client Profile objects, Update the TLS Client Profile object by id, Delete the TLS Client Profile object by id, Update the TLS Client Profile object by name and version, Delete the TLS Client Profile object by name and version, Create a Keystore object, Clear the Keystore objects, Update the Keystore object by name or id, Delete the Keystore object by name or id, Create a Truststore object, Clear the Truststore objects, Update the Truststore object by name or id, Delete the Truststore object by name or id, Create a Entry object, Clear the Entry objects, Update the Entry object by name or id, Delete the Entry object by name or id, Update the Catalog Setting object, Create a Configured Gateway Service object, Clear the Configured Gateway Service objects, Delete the Configured Gateway Service object by name or id, Create a Configured Catalog User Registry object, Delete the Configured Catalog User Registry object by name or id, Create a Configured API User Registry object, Clear the Configured API User Registry objects, Delete the Configured API User Registry object by name or id, Create a Configured TLS Client Profile object, Clear the Configured TLS Client Profile objects, Delete the Configured TLS Client Profile object by id, Delete the Configured TLS Client Profile object by name and version, Create a Configured Billing object, Clear the Configured Billing objects, Delete the Configured Billing object by name or id, Create a Configured Oauth Provider object, Clear the Configured Oauth Provider objects, Delete the Configured Oauth Provider object by name or id, Create a Application Type object, Clear the Application Type objects, Update the Application Type object by name or id, Delete the Application Type object by name or id, Augment the Configuration Property with additional name/value pairs, Clear the Configuration Property objects, Update the Configuration Property object, Delete the Configuration Property object, Create a Global Policy object, Clear all Global Policy objects in all collections, Clear the Global Policy objects, Update the Global Policy object by id, Delete the Global Policy object by id, Update the Global Policy object by name and version, Delete the Global Policy object by name and version, Create a Service object, Clear all Service objects in all collections, Update the Service object by id, Clear the Service objects, Delete the Service object by id, Update the Service object by name and version, Delete the Service object by name and version, Create the Global Policy Error object, Update the Global Policy Error object, Delete the Global Policy Error object, Create the Global Policy Prehook object, Update the Global Policy Prehook object, Delete the Global Policy Prehook object, Create the Global Policy Posthook object, Update the Global Policy Posthook object, Delete the Global Policy Posthook object, Update the Space Setting object, Update the Consumer Organization Setting object, Delete the Consumer Organization Setting object",
              "org:view": "Get the Log Spec object, List the User Registry objects, Get the User Registry object by name or id, List the User objects, Get the User object by name or id, List all Integration objects in all collections, Get the Organization Setting object, Get the Organization object by name or id, List the Associate objects, Get the Associate object by name or id, List the Member Invitation objects, Get the Member Invitation object by name or id, List the Member objects, Get the Member object by name or id, List the Role objects, Get the Role object by name or id, List the Availability Zone objects, Get the Availability Zone object by name or id, List the Gateway Service objects, Get the Gateway Service object by name or id, List all Policy objects in all collections, List the Policy objects, Get the Policy object by id, Get the Policy object by name and version, List all Extension objects in all collections, List the Extension objects, Get the Extension object by id, Get the Extension object by name and version, Create the Gateway Extension object, Get the Gateway Extension object, Update the Gateway Extension object, Delete the Gateway Extension object, List the Portal Service objects, Get the Portal Service object by name or id, List the Analytics Service objects, Get the Analytics Service object by name or id, List the Oauth Provider objects, Get the Oauth Provider object by name or id, List the Mail Server objects, Get the Mail Server object by name or id, List the Billing objects, Get the Billing object by name or id, List the Job objects, Get the Job object by name or id, List all TLS Server Profile objects in all collections, List the TLS Server Profile objects, Get the TLS Server Profile object by id, Get the TLS Server Profile object by name and version, List all TLS Client Profile objects in all collections, List the TLS Client Profile objects, Get the TLS Client Profile object by id, Get the TLS Client Profile object by name and version, List the Keystore objects, Get the Keystore object by name or id, List the Truststore objects, Get the Truststore object by name or id, List the Entry objects, Get the Entry object by name or id, Get the Catalog Setting object, List the Configured Gateway Service objects, Get the Configured Gateway Service object by name or id, List the Configured Catalog User Registry objects, Get the Configured Catalog User Registry object by name or id, List the Configured API User Registry objects, Get the Configured API User Registry object by name or id, List all Configured TLS Client Profile objects in all collections, Clear all Configured TLS Client Profile objects in all collections, List the Configured TLS Client Profile objects, Get the Configured TLS Client Profile object by id, Get the Configured TLS Client Profile object by name and version, List the Configured Billing objects, Get the Configured Billing object by name or id, List the Configured Oauth Provider objects, Get the Configured Oauth Provider object by name or id, List the Application Type objects, Get the Application Type object by name or id, List the Configuration Property objects, Get the Configuration Property object, List all Global Policy objects in all collections, List the Global Policy objects, Get the Global Policy object by id, Get the Global Policy object by name and version, List all Service objects in all collections, List the Service objects, Get the Service object by id, Get the Service object by name and version, Get the Global Policy Error object, Get the Global Policy Prehook object, Get the Global Policy Posthook object, Get the Space Setting object, Get the Consumer Organization Setting object, List the Primary Event objects, Get the Primary Event object by name or id, List the Subscriber Event objects, Get the Subscriber Event object by name or id, List the Task Queue objects, Get the Task Queue object by name or id",
              "product-drafts:edit": "Create a Draft Product object, Clear all Draft Product objects in all collections, Clear the Draft Product objects, Update the Draft Product object by id, Delete the Draft Product object by id, Update the Draft Product object by name and version, Delete the Draft Product object by name and version",
              "product-drafts:view": "List all Draft Product objects in all collections, List the Draft Product objects, Get the Draft Product object by id, Get the Draft Product object by name and version",
              "product:manage": "Clear all Product objects in all collections, Clear the Product objects, Update the Product object by id, Delete the Product object by id, Update the Product object by name and version, Delete the Product object by name and version, Update the API object by id, Update the API object by name and version",
              "product:view": "List all Product objects in all collections, List the Product objects, Get the Product object by id, Get the Product object by name and version, List all API objects in all collections, List the API objects, Get the API object by id, Get the API object by name and version",
              "provider-org:manage": "Create an Organization Invitation object, Clear the Organization Invitation objects, Update the Organization Invitation object by name or id, Delete the Organization Invitation object by name or id, Create a Group object, Clear the Group objects, Update the Group object by name or id, Delete the Group object by name or id",
              "provider-org:view": "List the Organization Invitation objects, Get the Organization Invitation object by name or id, List the Group objects, Get the Group object by name or id",
              "webhook:manage": "Create a Webhook object, Update the Webhook object by name or id, Delete the Webhook object by name or id",
              "webhook:view": "List the Webhook objects, Get the Webhook object by name or id, List the Snapshot objects, Get the Snapshot object by name or id"
            }
          }
        }
      }
    }
  },
  "x-ibm-configuration": {
    "testable": false
  }
},
{
  "openapi": "3.0.0",
  "info": {
    "x-ibm-name": "consumer",
    "version": "2.0.0",
    "title": "IBM API Connect Platform - Consumer API",
    "description": "This API provides operations for accessing API consumer content",
    "termsOfService": "https://www.ibm.com/legal",
    "contact": {
      "name": "IBM",
      "url": "https://www.ibm.com",
      "email": "help@ibm.com"
    },
    "license": {
      "name": "tbd",
      "url": "https://tbd.com"
    }
  },
  "servers": [
    {
      "url": "https://apimserver.example.com/consumer-api",
      "description": "Consumer apim base path"
    }
  ],
  "paths": {
    "/me": {
      "description": "Me object operations",
      "get": {
        "summary": "Get the Me object",
        "description": "Get the Me object",
        "operationId": "me_singletonGet",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/expand"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      },
      "put": {
        "summary": "Update the Me object",
        "description": "Update the Me object\n          \n          Fields allowed but ignored:\n          - name\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "me_singletonUpdate",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Me"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Me"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      },
      "delete": {
        "summary": "Delete the Me object",
        "description": "Delete the Me object",
        "operationId": "me_singletonDel",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      }
    },
    "/me/change-password": {
      "post": {
        "summary": "Change my password",
        "description": "Change my password",
        "operationId": "me_changePassword",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      }
    },
    "/me/reset-password": {
      "post": {
        "summary": "Reset password",
        "description": "Reset password",
        "operationId": "me_resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      }
    },
    "/me/sign-out": {
      "post": {
        "summary": "Sign out",
        "description": "Sign out",
        "operationId": "me_signOut",
        "security": [
          {
            "oauth": [
              "my:manage"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "302": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: Me"
        ]
      }
    },
    "/permissions": {
      "description": "The collection of My Permission operations",
      "get": {
        "summary": "List the My Permission objects",
        "description": "List the My Permission objects",
        "operationId": "my_permission_list",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyPermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MyPermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: My Permission"
        ]
      }
    },
    "/orgs": {
      "description": "The collection of My Organization operations",
      "post": {
        "summary": "Create a My Organization object",
        "description": "Create a My Organization object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "my_org_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Org"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Org"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: My Organization"
        ]
      },
      "get": {
        "summary": "List the My Organization objects",
        "description": "List the My Organization objects",
        "operationId": "my_org_list",
        "security": [
          {
            "oauth": [
              "my:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/OrgList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "My Resources",
          "Resource: My Organization"
        ]
      }
    },
    "/consumer/permissions": {
      "description": "Permission operations across all collections",
      "get": {
        "summary": "List all Permission objects in all collections",
        "description": "List all Permission objects in all collections",
        "operationId": "permission_listAll",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (All Subcollections)"
        ]
      }
    },
    "/consumer/permissions/org": {
      "description": "The collection of Permission operations",
      "get": {
        "summary": "List the Permission objects",
        "description": "List the Permission objects",
        "operationId": "permission_listOrgSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Org Subcollection)"
        ]
      }
    },
    "/consumer/permissions/org/{permission}": {
      "description": "Permission object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/permission"
        }
      ],
      "get": {
        "summary": "Get the Permission object by name or id",
        "description": "Get the Permission object by name or id",
        "operationId": "permission_getOrgSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Org Subcollection)"
        ]
      }
    },
    "/consumer/permissions/consumer": {
      "description": "The collection of Permission operations",
      "get": {
        "summary": "List the Permission objects",
        "description": "List the Permission objects",
        "operationId": "permission_listConsumerSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Consumer Subcollection)"
        ]
      }
    },
    "/consumer/permissions/consumer/{permission}": {
      "description": "Permission object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/permission"
        }
      ],
      "get": {
        "summary": "Get the Permission object by name or id",
        "description": "Get the Permission object by name or id",
        "operationId": "permission_getConsumerSubcollection",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Permission (Consumer Subcollection)"
        ]
      }
    },
    "/token": {
      "post": {
        "summary": "Generate a token",
        "description": "Generate a token",
        "operationId": "oauth2_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "201": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: Access Token (User Scope)"
        ]
      }
    },
    "/oauth2/redirect": {
      "get": {
        "summary": "Authorization provider redirect endpoint",
        "description": "Authorization provider redirect endpoint",
        "operationId": "oauth2_redirect_get",
        "parameters": [
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/code"
          },
          {
            "$ref": "#/components/parameters/error"
          },
          {
            "$ref": "#/components/parameters/error_description"
          },
          {
            "$ref": "#/components/parameters/error_uri"
          },
          {
            "$ref": "#/components/parameters/oauth_token"
          },
          {
            "$ref": "#/components/parameters/oauth_verifier"
          }
        ],
        "responses": {
          "302": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Oauth2 Action",
          "Resource: OAuth2 Redirect"
        ]
      },
      "post": {
        "summary": "Authorization provider redirect endpoint",
        "description": "Authorization provider redirect endpoint",
        "operationId": "oauth2_redirect_post",
        "parameters": [
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/code"
          },
          {
            "$ref": "#/components/parameters/error"
          },
          {
            "$ref": "#/components/parameters/error_description"
          },
          {
            "$ref": "#/components/parameters/error_uri"
          },
          {
            "$ref": "#/components/parameters/oauth_token"
          },
          {
            "$ref": "#/components/parameters/oauth_verifier"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OauthRedirect"
              }
            }
          }
        },
        "responses": {
          "302": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Oauth2 Action",
          "Resource: OAuth2 Redirect"
        ]
      }
    },
    "/oauth2/authorize": {
      "get": {
        "summary": "APIC authorization endpoint",
        "description": "APIC authorize endpoint",
        "operationId": "oauth2_authorize",
        "parameters": [
          {
            "$ref": "#/components/parameters/client_id"
          },
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/realm"
          },
          {
            "$ref": "#/components/parameters/redirect_uri"
          },
          {
            "$ref": "#/components/parameters/response_type"
          },
          {
            "$ref": "#/components/parameters/token"
          },
          {
            "$ref": "#/components/parameters/name"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/invitation_scope"
          },
          {
            "$ref": "#/components/parameters/action"
          }
        ],
        "responses": {
          "302": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: Oauth2 Authorization Request"
        ]
      }
    },
    "/orgs/{org}": {
      "description": "Organization object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the Organization object by name or id",
        "description": "Get the Organization object by name or id",
        "operationId": "org_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      },
      "patch": {
        "summary": "Update the Organization object by name or id",
        "description": "Update the Organization object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n",
        "operationId": "org_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Org"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Org"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      },
      "delete": {
        "summary": "Delete the Organization object by name or id",
        "description": "Delete the Organization object by name or id",
        "operationId": "org_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cascade"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      }
    },
    "/orgs/{org}/transfer-owner": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Transfer owner to a new member",
        "description": "Transfer owner to a new member",
        "operationId": "org_transferOwner",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwner"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization"
        ]
      }
    },
    "/groups/{group}": {
      "description": "Group object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/group"
        }
      ],
      "get": {
        "summary": "Get the Group object by name or id",
        "description": "Get the Group object by name or id",
        "operationId": "group_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Provider Management",
          "Resource: Group"
        ]
      }
    },
    "/org-invitations/{invitation}/register": {
      "parameters": [
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "post": {
        "summary": "Register using the Organization Invitation",
        "description": "Register using the Organization Invitation",
        "operationId": "invitation_registerOrgScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationRegister"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/InvitationRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization Invitation (Org Scope)"
        ]
      }
    },
    "/org-invitations/{invitation}/accept": {
      "parameters": [
        {
          "$ref": "#/components/parameters/invitation"
        }
      ],
      "post": {
        "summary": "Accept using the Organization Invitation",
        "description": "Accept using the Organization Invitation",
        "operationId": "invitation_acceptOrgScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationAccept"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/InvitationAccept"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Organization Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations": {
      "description": "The collection of Member Invitation operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Create a Member Invitation object",
        "description": "Create a Member Invitation object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "member_invitation_createOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      },
      "get": {
        "summary": "List the Member Invitation objects",
        "description": "List the Member Invitation objects",
        "operationId": "member_invitation_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitationList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Clear the Member Invitation objects",
        "description": "Clear the Member Invitation objects",
        "operationId": "member_invitation_clearOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations/{member-invitation}": {
      "description": "Member Invitation object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "get": {
        "summary": "Get the Member Invitation object by name or id",
        "description": "Get the Member Invitation object by name or id",
        "operationId": "member_invitation_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Delete the Member Invitation object by name or id",
        "description": "Delete the Member Invitation object by name or id",
        "operationId": "member_invitation_delOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations/{member-invitation}/regenerate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Regenerate the Member Invitation",
        "description": "Regenerate the Member Invitation",
        "operationId": "member_invitation_regenerateOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Regenerate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberInvitation"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations/{member-invitation}/register": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Register using the Member Invitation",
        "description": "Register using the Member Invitation",
        "operationId": "member_invitation_registerOrgScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationRegister"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberRegisterResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/member-invitations/{member-invitation}/accept": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member-invitation"
        }
      ],
      "post": {
        "summary": "Accept using the Member Invitation",
        "description": "Accept using the Member Invitation",
        "operationId": "member_invitation_acceptOrgScope",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-IBM-Client-Id"
          },
          {
            "$ref": "#/components/parameters/X-IBM-Client-Secret"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationAccept"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvitationAccept"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAcceptResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member Invitation (Org Scope)"
        ]
      }
    },
    "/user-registries": {
      "description": "The collection of User Registry operations",
      "get": {
        "summary": "List the User Registry objects",
        "description": "List the User Registry objects",
        "operationId": "user_registry_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistryList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/user-registries/{user-registry}": {
      "description": "User Registry object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/user-registry"
        }
      ],
      "get": {
        "summary": "Get the User Registry object by name or id",
        "description": "Get the User Registry object by name or id",
        "operationId": "user_registry_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistry"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/user-registries/{user-registry}/search": {
      "parameters": [
        {
          "$ref": "#/components/parameters/user-registry"
        }
      ],
      "post": {
        "summary": "Search for users in the user registry",
        "description": "Search for users in the user registry",
        "operationId": "user_registry_search",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User Registry"
        ]
      }
    },
    "/user-registries/{user-registry}/users/{user}": {
      "description": "User object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/user-registry"
        },
        {
          "$ref": "#/components/parameters/user"
        }
      ],
      "get": {
        "summary": "Get the User object by name or id",
        "description": "Get the User object by name or id",
        "operationId": "user_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/sign-up": {
      "post": {
        "summary": "Sign up a user",
        "description": "Sign up a user",
        "operationId": "user_signUp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "201": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/activate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/activation_id"
        }
      ],
      "post": {
        "summary": "Activates the sign up",
        "description": "Activates the sign up",
        "operationId": "user_activate",
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/request-password-reset": {
      "post": {
        "summary": "Send reset password link",
        "description": "Send reset password link",
        "operationId": "user_requestPasswordReset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPasswordReset"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/RequestPasswordReset"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User Management",
          "Resource: User"
        ]
      }
    },
    "/consumer/identity-providers": {
      "get": {
        "summary": "List Identity Providers in the consumer realm",
        "description": "List Identity Providers in the consumer realm",
        "operationId": "user_registry_identityProviderListCatalog",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityProviderList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "User",
          "Category: User Management"
        ]
      }
    },
    "/orgs/{org}/associates": {
      "description": "The collection of Associate operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "List the Associate objects",
        "description": "List the Associate objects",
        "operationId": "associate_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Associate (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/associates/{associate}": {
      "description": "Associate object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/associate"
        }
      ],
      "get": {
        "summary": "Get the Associate object by name or id",
        "description": "Get the Associate object by name or id",
        "operationId": "associate_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Associate"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Associate"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Associate (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/members": {
      "description": "The collection of Member operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Create a Member object",
        "description": "Create a Member object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - user_registry_url\n",
        "operationId": "member_createOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      },
      "get": {
        "summary": "List the Member objects",
        "description": "List the Member objects",
        "operationId": "member_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/MemberList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Clear the Member objects",
        "description": "Clear the Member objects",
        "operationId": "member_clearOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          },
          {
            "$ref": "#/components/parameters/cascade"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/members/{member}": {
      "description": "Member object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/member"
        }
      ],
      "get": {
        "summary": "Get the Member object by name or id",
        "description": "Get the Member object by name or id",
        "operationId": "member_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      },
      "patch": {
        "summary": "Update the Member object by name or id",
        "description": "Update the Member object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - user_registry_url\n",
        "operationId": "member_updateOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      },
      "delete": {
        "summary": "Delete the Member object by name or id",
        "description": "Delete the Member object by name or id",
        "operationId": "member_delOrgScope",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/cascade"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Member (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/roles": {
      "description": "The collection of Role operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "List the Role objects",
        "description": "List the Role objects",
        "operationId": "role_listOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/roles/{role}": {
      "description": "Role object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/role"
        }
      ],
      "get": {
        "summary": "Get the Role object by name or id",
        "description": "Get the Role object by name or id",
        "operationId": "role_getOrgScope",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Role (Org Scope)"
        ]
      }
    },
    "/public-products": {
      "description": "Product operations across all collections",
      "get": {
        "summary": "List all Product objects in all collections",
        "description": "List all Product objects in all collections",
        "operationId": "product_listAll",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id"
        ]
      }
    },
    "/public-products/{product-name}": {
      "description": "The collection of Product operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/product-name"
        }
      ],
      "get": {
        "summary": "List the Product objects",
        "description": "List the Product objects",
        "operationId": "product_list",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id"
        ]
      }
    },
    "/public-products/{product-id}": {
      "description": "Product object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "get": {
        "summary": "Get the Product object by id",
        "description": "Get the Product object by id",
        "operationId": "product_get",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id"
        ]
      }
    },
    "/public-products/{product-name}/{product-version}": {
      "description": "Product object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "get": {
        "summary": "Get the Product object by name and version",
        "description": "Get the Product object by name and version",
        "operationId": "product_getByNameVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id"
        ]
      }
    },
    "/public-products/{product-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "get": {
        "summary": "Get the Product document",
        "description": "Get the Product document",
        "operationId": "product_getDocument",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id"
        ]
      }
    },
    "/public-products/{product-name}/{product-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "get": {
        "summary": "Get the Product document by name and version",
        "description": "Get the Product document by name and version",
        "operationId": "product_getDocumentByNameVersion",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id"
        ]
      }
    },
    "/public-apis": {
      "description": "API operations across all collections",
      "get": {
        "summary": "List all API objects in all collections",
        "description": "List all API objects in all collections",
        "operationId": "api_listAll",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/api_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id"
        ]
      }
    },
    "/public-apis/{api-name}": {
      "description": "The collection of API operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/api-name"
        }
      ],
      "get": {
        "summary": "List the API objects",
        "description": "List the API objects",
        "operationId": "api_list",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id"
        ]
      }
    },
    "/public-apis/{api-id}": {
      "description": "API object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/api-id"
        }
      ],
      "get": {
        "summary": "Get the API object by id",
        "description": "Get the API object by id",
        "operationId": "api_get",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id"
        ]
      }
    },
    "/public-apis/{api-name}/{api-version}": {
      "description": "API object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/api-name"
        },
        {
          "$ref": "#/components/parameters/api-version"
        }
      ],
      "get": {
        "summary": "Get the API object by name and version",
        "description": "Get the API object by name and version",
        "operationId": "api_getByNameVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id"
        ]
      }
    },
    "/public-apis/{api-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/api-id"
        }
      ],
      "get": {
        "summary": "Get the API document",
        "description": "Get the API document",
        "operationId": "api_getDocument",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id"
        ]
      }
    },
    "/public-apis/{api-name}/{api-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/api-name"
        },
        {
          "$ref": "#/components/parameters/api-version"
        }
      ],
      "get": {
        "summary": "Get the API document by name and version",
        "description": "Get the API document by name and version",
        "operationId": "api_getDocumentByNameVersion",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id"
        ]
      }
    },
    "/public-apis/{api-id}/wsdl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/api-id"
        }
      ],
      "get": {
        "summary": "Get the API wsdl document",
        "description": "Get the API wsdl document",
        "operationId": "api_getWsdl",
        "parameters": [
          {
            "$ref": "#/components/parameters/endpoint"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/wsdl": {},
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id"
        ]
      }
    },
    "/public-apis/{api-name}/{api-version}/wsdl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/api-name"
        },
        {
          "$ref": "#/components/parameters/api-version"
        }
      ],
      "get": {
        "summary": "Get the API wsdl document by name and version",
        "description": "Get the API wsdl document by name and version",
        "operationId": "api_getWsdlByNameVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/endpoint"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/wsdl": {},
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id"
        ]
      }
    },
    "/products": {
      "description": "Product operations across all collections",
      "get": {
        "summary": "List all Product objects in all collections",
        "description": "List all Product objects in all collections",
        "operationId": "product_listAllOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Org Scope)"
        ]
      }
    },
    "/products/{product-name}": {
      "description": "The collection of Product operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/product-name"
        }
      ],
      "get": {
        "summary": "List the Product objects",
        "description": "List the Product objects",
        "operationId": "product_listOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Org Scope)"
        ]
      }
    },
    "/products/{product-id}": {
      "description": "Product object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "get": {
        "summary": "Get the Product object by id",
        "description": "Get the Product object by id",
        "operationId": "product_getOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Org Scope)"
        ]
      }
    },
    "/products/{product-name}/{product-version}": {
      "description": "Product object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "get": {
        "summary": "Get the Product object by name and version",
        "description": "Get the Product object by name and version",
        "operationId": "product_getByNameVersionOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Org Scope)"
        ]
      }
    },
    "/products/{product-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product-id"
        }
      ],
      "get": {
        "summary": "Get the Product document",
        "description": "Get the Product document",
        "operationId": "product_getDocumentOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Org Scope)"
        ]
      }
    },
    "/products/{product-name}/{product-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product-name"
        },
        {
          "$ref": "#/components/parameters/product-version"
        }
      ],
      "get": {
        "summary": "Get the Product document by name and version",
        "description": "Get the Product document by name and version",
        "operationId": "product_getDocumentByNameVersionOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: Product by Id (Org Scope)"
        ]
      }
    },
    "/apis": {
      "description": "API operations across all collections",
      "get": {
        "summary": "List all API objects in all collections",
        "description": "List all API objects in all collections",
        "operationId": "api_listAllOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/api_type"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Org Scope)"
        ]
      }
    },
    "/apis/{api-name}": {
      "description": "The collection of API operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/api-name"
        }
      ],
      "get": {
        "summary": "List the API objects",
        "description": "List the API objects",
        "operationId": "api_listOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Org Scope)"
        ]
      }
    },
    "/apis/{api-id}": {
      "description": "API object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/api-id"
        }
      ],
      "get": {
        "summary": "Get the API object by id",
        "description": "Get the API object by id",
        "operationId": "api_getOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Org Scope)"
        ]
      }
    },
    "/apis/{api-name}/{api-version}": {
      "description": "API object operations by name and version",
      "parameters": [
        {
          "$ref": "#/components/parameters/api-name"
        },
        {
          "$ref": "#/components/parameters/api-version"
        }
      ],
      "get": {
        "summary": "Get the API object by name and version",
        "description": "Get the API object by name and version",
        "operationId": "api_getByNameVersionOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/API"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Org Scope)"
        ]
      }
    },
    "/apis/{api-id}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/api-id"
        }
      ],
      "get": {
        "summary": "Get the API document",
        "description": "Get the API document",
        "operationId": "api_getDocumentOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Org Scope)"
        ]
      }
    },
    "/apis/{api-name}/{api-version}/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/api-name"
        },
        {
          "$ref": "#/components/parameters/api-version"
        }
      ],
      "get": {
        "summary": "Get the API document by name and version",
        "description": "Get the API document by name and version",
        "operationId": "api_getDocumentByNameVersionOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/APIDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Org Scope)"
        ]
      }
    },
    "/apis/{api-id}/wsdl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/api-id"
        }
      ],
      "get": {
        "summary": "Get the API wsdl document",
        "description": "Get the API wsdl document",
        "operationId": "api_getWsdlOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/endpoint"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/wsdl": {},
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Org Scope)"
        ]
      }
    },
    "/apis/{api-name}/{api-version}/wsdl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/api-name"
        },
        {
          "$ref": "#/components/parameters/api-version"
        }
      ],
      "get": {
        "summary": "Get the API wsdl document by name and version",
        "description": "Get the API wsdl document by name and version",
        "operationId": "api_getWsdlByNameVersionOrgScope",
        "security": [
          {
            "oauth": [
              "published-product:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/endpoint"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Wsdl"
                }
              },
              "application/wsdl": {},
              "application/zip": {}
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Products and APIs",
          "Resource: API by Id (Org Scope)"
        ]
      }
    },
    "/orgs/{org}/apps": {
      "description": "The collection of Application operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Create a Application object",
        "description": "Create a Application object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "app_create",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application"
        ]
      },
      "get": {
        "summary": "List the Application objects",
        "description": "List the Application objects",
        "operationId": "app_list",
        "security": [
          {
            "oauth": [
              "app:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/AppList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application"
        ]
      },
      "delete": {
        "summary": "Clear the Application objects",
        "description": "Clear the Application objects",
        "operationId": "app_clear",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application"
        ]
      }
    },
    "/apps/{org}/{app}": {
      "description": "Application object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/app"
        }
      ],
      "get": {
        "summary": "Get the Application object by name or id",
        "description": "Get the Application object by name or id",
        "operationId": "app_get",
        "security": [
          {
            "oauth": [
              "app:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application"
        ]
      },
      "patch": {
        "summary": "Update the Application object by name or id",
        "description": "Update the Application object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n",
        "operationId": "app_update",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application"
        ]
      },
      "delete": {
        "summary": "Delete the Application object by name or id",
        "description": "Delete the Application object by name or id",
        "operationId": "app_del",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application"
        ]
      }
    },
    "/apps/{org}/{app}/credentials": {
      "description": "The collection of Application Credential operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/app"
        }
      ],
      "post": {
        "summary": "Create a Application Credential object",
        "description": "Create a Application Credential object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - app_url\n",
        "operationId": "credential_create",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application Credential"
        ]
      },
      "get": {
        "summary": "List the Application Credential objects",
        "description": "List the Application Credential objects",
        "operationId": "credential_list",
        "security": [
          {
            "oauth": [
              "app:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application Credential"
        ]
      },
      "delete": {
        "summary": "Clear the Application Credential objects",
        "description": "Clear the Application Credential objects",
        "operationId": "credential_clear",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{app}/credentials/{credential}": {
      "description": "Application Credential object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/credential"
        }
      ],
      "get": {
        "summary": "Get the Application Credential object by name or id",
        "description": "Get the Application Credential object by name or id",
        "operationId": "credential_get",
        "security": [
          {
            "oauth": [
              "app:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application Credential"
        ]
      },
      "patch": {
        "summary": "Update the Application Credential object by name or id",
        "description": "Update the Application Credential object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - app_url\n",
        "operationId": "credential_update",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application Credential"
        ]
      },
      "delete": {
        "summary": "Delete the Application Credential object by name or id",
        "description": "Delete the Application Credential object by name or id",
        "operationId": "credential_del",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{app}/credentials/{credential}/reset": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/credential"
        }
      ],
      "post": {
        "summary": "Reset the client id and client secret",
        "description": "Reset the client id and client secret",
        "operationId": "credential_reset",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{app}/credentials/{credential}/reset-client-secret": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/credential"
        }
      ],
      "post": {
        "summary": "Reset the client secret",
        "description": "Reset the client secret",
        "operationId": "credential_resetClientSecret",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{app}/credentials/{credential}/verify-client-secret": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/credential"
        }
      ],
      "post": {
        "summary": "Verify the client secret",
        "description": "Verify the client secret",
        "operationId": "credential_verifyClientSecret",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Application Credential"
        ]
      }
    },
    "/apps/{org}/{app}/subscriptions": {
      "description": "The collection of Subscription operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/app"
        }
      ],
      "post": {
        "summary": "Create a Subscription object",
        "description": "Create a Subscription object\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - app_url\n",
        "operationId": "subscription_create",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Subscription"
        ]
      },
      "get": {
        "summary": "List the Subscription objects",
        "description": "List the Subscription objects",
        "operationId": "subscription_list",
        "security": [
          {
            "oauth": [
              "app:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Subscription"
        ]
      },
      "delete": {
        "summary": "Clear the Subscription objects",
        "description": "Clear the Subscription objects",
        "operationId": "subscription_clear",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/confirm"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Subscription"
        ]
      }
    },
    "/apps/{org}/{app}/subscriptions/{subscription}": {
      "description": "Subscription object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/subscription"
        }
      ],
      "get": {
        "summary": "Get the Subscription object by name or id",
        "description": "Get the Subscription object by name or id",
        "operationId": "subscription_get",
        "security": [
          {
            "oauth": [
              "app:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Subscription"
        ]
      },
      "patch": {
        "summary": "Update the Subscription object by name or id",
        "description": "Update the Subscription object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - org_url\n          - app_url\n",
        "operationId": "subscription_update",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Subscription"
        ]
      },
      "delete": {
        "summary": "Delete the Subscription object by name or id",
        "description": "Delete the Subscription object by name or id",
        "operationId": "subscription_del",
        "security": [
          {
            "oauth": [
              "app:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Application",
          "Resource: Subscription"
        ]
      }
    },
    "/billings": {
      "description": "The collection of Billing operations",
      "get": {
        "summary": "List the Billing objects",
        "description": "List the Billing objects",
        "operationId": "billing_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/BillingList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Billing"
        ]
      }
    },
    "/billings/{billing}": {
      "description": "Billing object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/billing"
        }
      ],
      "get": {
        "summary": "Get the Billing object by name or id",
        "description": "Get the Billing object by name or id",
        "operationId": "billing_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Billing"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Resources",
          "Resource: Billing"
        ]
      }
    },
    "/orgs/{org}/payment-methods": {
      "description": "The collection of Payment Method operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Create a Payment Method object",
        "description": "Create a Payment Method object\n          \n          Required fields:\n          - payment_method_type_url\n          - billing_url\n          - configuration\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - consumer_org_url\n",
        "operationId": "payment_method_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "302": {
            "description": "Redirect response",
            "headers": {
              "Location": {
                "description": "Redirect payload",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Payment Method"
        ]
      },
      "get": {
        "summary": "List the Payment Method objects",
        "description": "List the Payment Method objects",
        "operationId": "payment_method_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Payment Method"
        ]
      }
    },
    "/orgs/{org}/payment-methods/{payment-method}": {
      "description": "Payment Method object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/payment-method"
        }
      ],
      "get": {
        "summary": "Get the Payment Method object by name or id",
        "description": "Get the Payment Method object by name or id",
        "operationId": "payment_method_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Payment Method"
        ]
      },
      "patch": {
        "summary": "Update the Payment Method object by name or id",
        "description": "Update the Payment Method object by name or id\n          \n          Fields allowed but ignored:\n          - id\n          - type\n          - api_version\n          - scope\n          - created_at\n          - updated_at\n          - url\n          - consumer_org_url\n",
        "operationId": "payment_method_update",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Payment Method"
        ]
      },
      "delete": {
        "summary": "Delete the Payment Method object by name or id",
        "description": "Delete the Payment Method object by name or id",
        "operationId": "payment_method_del",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Organization Management",
          "Resource: Payment Method"
        ]
      }
    },
    "/payment-method-types": {
      "description": "The collection of Payment Method Type operations",
      "get": {
        "summary": "List the Payment Method Type objects",
        "description": "List the Payment Method Type objects",
        "operationId": "payment_method_type_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodTypeList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodTypeList"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Billing Management",
          "Resource: Payment Method Type"
        ]
      }
    },
    "/payment-method-types/{payment-method-type}": {
      "description": "Payment Method Type object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/payment-method-type"
        }
      ],
      "get": {
        "summary": "Get the Payment Method Type object by name or id",
        "description": "Get the Payment Method Type object by name or id",
        "operationId": "payment_method_type_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodType"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodType"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Billing Management",
          "Resource: Payment Method Type"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "X-IBM-Client-Id": {
        "name": "X-IBM-Client-Id",
        "in": "header",
        "description": "Registration client identifier",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "X-IBM-Client-Secret": {
        "name": "X-IBM-Client-Secret",
        "in": "header",
        "description": "Registration client secret",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "access-token": {
        "name": "access-token",
        "in": "path",
        "description": "Access Token name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "action": {
        "name": "action",
        "in": "query",
        "description": "oauth as part of signup or signin",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "activation_id": {
        "name": "activation_id",
        "in": "query",
        "description": "Activation name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api-id": {
        "name": "api-id",
        "in": "path",
        "description": "API name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api-name": {
        "name": "api-name",
        "in": "path",
        "description": "API name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api-version": {
        "name": "api-version",
        "in": "path",
        "description": "API version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api_type": {
        "name": "api_type",
        "in": "query",
        "description": "The type of api (asyncapi, rest, graphql, wsdl_to_rest, or wsdl)",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "app": {
        "name": "app",
        "in": "path",
        "description": "Application name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "associate": {
        "name": "associate",
        "in": "path",
        "description": "Associate name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "billing": {
        "name": "billing",
        "in": "path",
        "description": "Billing name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "cascade": {
        "name": "cascade",
        "in": "query",
        "description": "Cascade the behavior",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "client_id": {
        "name": "client_id",
        "in": "query",
        "description": "Registration client identifier",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "code": {
        "name": "code",
        "in": "query",
        "description": "Oauth2 code",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "confirm": {
        "name": "confirm",
        "in": "query",
        "description": "confirm clear",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "credential": {
        "name": "credential",
        "in": "path",
        "description": "Application Credential name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "endpoint": {
        "name": "endpoint",
        "in": "query",
        "description": "endpoint",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "error": {
        "name": "error",
        "in": "query",
        "description": "Oauth2 error",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "error_description": {
        "name": "error_description",
        "in": "query",
        "description": "Oauth2 error_description",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "error_uri": {
        "name": "error_uri",
        "in": "query",
        "description": "Oauth2 error_uri",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "expand": {
        "name": "expand",
        "in": "query",
        "description": "Expand the response object",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "fields": {
        "name": "fields",
        "in": "query",
        "description": "field name",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "group": {
        "name": "group",
        "in": "path",
        "description": "Group name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "invitation": {
        "name": "invitation",
        "in": "path",
        "description": "Organization Invitation name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "invitation-token": {
        "name": "invitation-token",
        "in": "path",
        "description": "Invitation Token name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "invitation_scope": {
        "name": "invitation_scope",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Maximum number of items to return",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "member": {
        "name": "member",
        "in": "path",
        "description": "Member name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "member-invitation": {
        "name": "member-invitation",
        "in": "path",
        "description": "Member Invitation name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "my-org": {
        "name": "my-org",
        "in": "path",
        "description": "My Organization name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "my-permission": {
        "name": "my-permission",
        "in": "path",
        "description": "My Permission name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "name": {
        "name": "name",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "oauth_token": {
        "name": "oauth_token",
        "in": "query",
        "description": "Oauth Token for Twitter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "oauth_verifier": {
        "name": "oauth_verifier",
        "in": "query",
        "description": "Oauth Verifier for Twitter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "Offset item number from list to begin return",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "org": {
        "name": "org",
        "in": "path",
        "description": "Organization name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "payment-method": {
        "name": "payment-method",
        "in": "path",
        "description": "Payment Method name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "payment-method-type": {
        "name": "payment-method-type",
        "in": "path",
        "description": "Payment Method Type name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "permission": {
        "name": "permission",
        "in": "path",
        "description": "Permission name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "product-id": {
        "name": "product-id",
        "in": "path",
        "description": "Product name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "product-name": {
        "name": "product-name",
        "in": "path",
        "description": "Product name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "product-version": {
        "name": "product-version",
        "in": "path",
        "description": "Product version name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "realm": {
        "name": "realm",
        "in": "query",
        "description": "User registry realm name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "redirect_uri": {
        "name": "redirect_uri",
        "in": "query",
        "description": "Redirect Url",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "response_type": {
        "name": "response_type",
        "in": "query",
        "description": "Oauth2 response_type",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "role": {
        "name": "role",
        "in": "path",
        "description": "Role name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "state": {
        "name": "state",
        "in": "query",
        "description": "Oauth2 state",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "subscription": {
        "name": "subscription",
        "in": "path",
        "description": "Subscription name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "summary": {
        "name": "summary",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "title": {
        "name": "title",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "token": {
        "name": "token",
        "in": "query",
        "description": "token",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "user": {
        "name": "user",
        "in": "path",
        "description": "User name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "user-registry": {
        "name": "user-registry",
        "in": "path",
        "description": "User Registry name or id",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "headers": {
      "Location": {
        "description": "URL referencing a newly created resource",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "API": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "api"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "staged",
              "online",
              "offline",
              "retired"
            ]
          },
          "api": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "swagger": {
                "type": "string"
              },
              "info": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "title",
                  "version"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "x-ibm-name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "x-ibm-summary": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "api_type": {
            "type": "string",
            "enum": [
              "rest",
              "wsdl",
              "graphql",
              "asyncapi"
            ]
          },
          "oai_version": {
            "type": "string",
            "enum": [
              "openapi2",
              "openapi3"
            ]
          },
          "enforced": {
            "type": "boolean"
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "APIList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/API"
            }
          }
        }
      },
      "App": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "app"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "lifecycle_state": {
            "type": "string",
            "enum": [
              "development",
              "production"
            ]
          },
          "lifecycle_state_pending": {
            "type": "string",
            "nullable": true,
            "enum": [
              "production"
            ]
          },
          "app_credential_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "redirect_endpoints": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "application_public_certificate_entry": {
            "type": "string"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "task_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "image_endpoint": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "application_type_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "AppList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          }
        }
      },
      "Associate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "associate"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "AssociateList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Associate"
            }
          }
        }
      },
      "Billing": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "billing"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "integration_url": {
            "type": "string",
            "format": "uri"
          },
          "product_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "payment_method_type_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "BillingList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Billing"
            }
          }
        }
      },
      "Credential": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "credential"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "client_id": {
            "type": "string"
          },
          "client_secret_hashed": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "app_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "CredentialList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Credential"
            }
          }
        }
      },
      "Group": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "group"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "GroupList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      },
      "Invitation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "invitation"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "notify": {
            "type": "boolean"
          },
          "activation_link": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "InvitationList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invitation"
            }
          }
        }
      },
      "Member": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "member"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "inherited_role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MemberList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member"
            }
          }
        }
      },
      "MemberInvitation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "member_invitation"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "notify": {
            "type": "boolean"
          },
          "activation_link": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "org_type": {
            "type": "string"
          },
          "role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MemberInvitationList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberInvitation"
            }
          }
        }
      },
      "MyOrgList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Org"
            }
          }
        }
      },
      "MyPermission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "my_permission"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope_url": {
            "type": "string",
            "format": "uri"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "MyPermissionList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyPermission"
            }
          }
        }
      },
      "Org": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "org"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "owner_url": {
            "type": "string",
            "format": "uri"
          },
          "group_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "subscription_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "billing_identifiers": {
            "description": "mapping of configured_billing ids to externally managed, non-sensitive identifiers of billing system resources",
            "type": "object",
            "additionalProperties": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "OrgList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Org"
            }
          }
        }
      },
      "PaymentMethod": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "payment_method"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "payment_method_type_url": {
            "type": "string",
            "format": "uri"
          },
          "consumer_org_url": {
            "type": "string",
            "format": "uri"
          },
          "billing_url": {
            "type": "string",
            "format": "uri"
          },
          "configuration": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PaymentMethodList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          }
        }
      },
      "PaymentMethodType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "payment_method_type"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "integration": {
            "$ref": "#/components/schemas/IntegrationDocument"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PaymentMethodTypeList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodType"
            }
          }
        }
      },
      "Permission": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "permission"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "permission_type": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "PermissionList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      "Product": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "product"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "version": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "published",
              "deprecated"
            ]
          },
          "product": {
            "type": "object",
            "additionalProperties": true
          },
          "api_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "billing_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "billing_identifiers": {
            "description": "mapping of configured_billing ids to externally managed, non-sensitive identifiers of billing system resources",
            "type": "object",
            "additionalProperties": true
          },
          "superseded_by": {
            "$ref": "#/components/schemas/ProductPlanMapping"
          },
          "supersedes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPlanMapping"
            }
          },
          "state_pending": {
            "type": "string",
            "nullable": true,
            "enum": [
              "pending",
              "staged",
              "published",
              "deprecated",
              "retired",
              "archived"
            ]
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "ProductList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "Role": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "role"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "scope": {
            "type": "string"
          },
          "permission_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "inherited_permission_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "member_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "RoleList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        }
      },
      "Subscription": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "subscription"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "enabled",
              "rejected",
              "disabled"
            ]
          },
          "product_url": {
            "type": "string",
            "format": "uri"
          },
          "plan": {
            "type": "string"
          },
          "task_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "state_pending": {
            "type": "string",
            "nullable": true,
            "enum": [
              "enabled"
            ]
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "app_url": {
            "type": "string",
            "format": "uri"
          },
          "billing_identifiers": {
            "description": "non-sensitive identifiers of billing system resources",
            "type": "object",
            "additionalProperties": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "SubscriptionList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "user"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "identity_provider": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "force_password_change": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "last_login_at": {
            "type": "string",
            "format": "date-time"
          },
          "member_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_url": {
            "type": "string",
            "format": "uri"
          },
          "user_registry_url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "UserList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "UserRegistry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "user_registry"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 1023
          },
          "summary": {
            "type": "string",
            "maxLength": 65535
          },
          "registry_type": {
            "type": "string"
          },
          "user_managed": {
            "type": "boolean"
          },
          "user_registry_managed": {
            "type": "boolean"
          },
          "onboarding": {
            "type": "string",
            "enum": [
              "null",
              "active",
              "suspended"
            ]
          },
          "case_sensitive": {
            "type": "boolean"
          },
          "email_required": {
            "type": "boolean",
            "default": false
          },
          "email_unique_if_exist": {
            "type": "boolean",
            "default": true
          },
          "identity_providers": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        }
      },
      "UserRegistryList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRegistry"
            }
          }
        }
      },
      "Me": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "me"
            ]
          },
          "api_version": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "2.0.0"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "username": {
            "type": "string"
          },
          "identity_provider": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "last_login_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "metadata": {
            "type": "object"
          },
          "org_info": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgInfo"
            }
          }
        }
      },
      "OrgInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "org": {
            "$ref": "#/components/schemas/Org"
          },
          "member_url": {
            "type": "string",
            "format": "uri"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyRole"
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MyRole": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "ChangePassword": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "current_password": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ResetPassword": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "RequestPasswordReset": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "realm": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "Regenerate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "notify": {
            "type": "boolean"
          }
        }
      },
      "InvitationRegister": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "realm": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              }
            }
          },
          "org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          }
        }
      },
      "SignUp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "org": {
            "type": "string"
          }
        }
      },
      "InvitationAccept": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "user": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "realm": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "token": {
                "type": "string",
                "format": "password"
              },
              "token_secret": {
                "type": "string",
                "format": "password"
              }
            }
          },
          "org": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          }
        }
      },
      "MemberInvitationRegister": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          }
        }
      },
      "MemberRegisterResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "member": {
            "$ref": "#/components/schemas/Member"
          },
          "credentials": {
            "$ref": "#/components/schemas/TokenResponse"
          }
        }
      },
      "MemberInvitationAccept": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "token": {
            "type": "string",
            "format": "password"
          },
          "token_secret": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "MemberAcceptResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "member": {
            "$ref": "#/components/schemas/Member"
          },
          "credentials": {
            "$ref": "#/components/schemas/TokenResponse"
          }
        }
      },
      "IdentityProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "registry_type": {
            "type": "string"
          },
          "user_managed": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          },
          "realm": {
            "type": "string"
          },
          "oidc_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "google",
              "github",
              "facebook",
              "linkedin",
              "windows_live",
              "slack",
              "twitter",
              "standard"
            ]
          }
        }
      },
      "IdentityProviderList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityProvider"
            }
          }
        }
      },
      "ProductPlanMapping": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "product_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceTargetPairs"
            }
          }
        }
      },
      "SourceTargetPairs": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "source",
          "target"
        ],
        "properties": {
          "source": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      },
      "ProductDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "APIDocument": {
        "type": "object",
        "additionalProperties": true
      },
      "IntegrationDocument": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "integration",
          "info"
        ],
        "properties": {
          "integration": {
            "type": "string",
            "enum": [
              "1.0.0"
            ]
          },
          "info": {
            "$ref": "#/components/schemas/InfoSection"
          },
          "configuration_schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "InfoSection": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "version"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "termsOfService": {
            "type": "string"
          },
          "contact": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              },
              "email": {
                "type": "string",
                "format": "email"
              }
            }
          },
          "license": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "x-ibm-languages": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ProductVisibility": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "public",
              "authenticated",
              "custom"
            ]
          },
          "group_urls": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_urls": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "ResourceVisibility": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "private",
              "public",
              "custom"
            ]
          },
          "group_urls": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "org_urls": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "TransferOwner": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "new_owner_associate_url": {
            "type": "string",
            "format": "uri"
          },
          "new_owner_member_url": {
            "type": "string",
            "format": "uri"
          },
          "old_owner_new_role_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "OauthRedirect": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "code": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "error_description": {
            "type": "string"
          },
          "error_uri": {
            "type": "string"
          }
        }
      },
      "TokenRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "grant_type"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "assertion": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "grant_type": {
            "type": "string",
            "enum": [
              "password",
              "client_credentials",
              "authorization_code",
              "refresh_token",
              "urn:ietf:params:oauth:grant-type:jwt-bearer"
            ]
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "access_token",
          "token_type",
          "expires_in"
        ],
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "refresh_token": {
            "type": "string"
          },
          "refresh_expires_in": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          }
        }
      },
      "UserSearch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "username": {
            "type": "string"
          },
          "remote": {
            "type": "boolean"
          }
        }
      },
      "SecuredEndpoint": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "endpoint"
        ],
        "properties": {
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "tls_client_profile_url": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "integer",
            "minimum": 400,
            "maximum": 599
          },
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Wsdl": {
        "type": "object",
        "additionalProperties": true
      }
    },
    "responses": {
      "Error": {
        "description": "Unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "/token",
            "refreshUrl": "/token",
            "scopes": {
              "app:manage": "Create a Application object, Clear the Application objects, Update the Application object by name or id, Delete the Application object by name or id, Create a Application Credential object, Clear the Application Credential objects, Update the Application Credential object by name or id, Delete the Application Credential object by name or id, Create a Subscription object, Clear the Subscription objects, Update the Subscription object by name or id, Delete the Subscription object by name or id",
              "app:view": "List the Application objects, Get the Application object by name or id, List the Application Credential objects, Get the Application Credential object by name or id, List the Subscription objects, Get the Subscription object by name or id",
              "my:manage": "Update the Me object, Delete the Me object",
              "my:view": "Get the Me object, List the My Permission objects, List the My Organization objects",
              "org:manage": "Create a My Organization object, Update the Organization object by name or id, Delete the Organization object by name or id, Create a Member Invitation object, Clear the Member Invitation objects, Delete the Member Invitation object by name or id, Create a Member object, Clear the Member objects, Update the Member object by name or id, Delete the Member object by name or id, Create a Payment Method object, Update the Payment Method object by name or id, Delete the Payment Method object by name or id",
              "org:view": "Get the Organization object by name or id, Get the Group object by name or id, List the Member Invitation objects, Get the Member Invitation object by name or id, List the User Registry objects, Get the User Registry object by name or id, Get the User object by name or id, List the Associate objects, Get the Associate object by name or id, List the Member objects, Get the Member object by name or id, List the Role objects, Get the Role object by name or id, Get the Billing object by name or id, List the Billing objects, List the Payment Method objects, Get the Payment Method object by name or id, List the Payment Method Type objects, Get the Payment Method Type object by name or id"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "/oauth2/authorize",
            "tokenUrl": "/token",
            "refreshUrl": "/token",
            "scopes": {
              "app:manage": "Create a Application object, Clear the Application objects, Update the Application object by name or id, Delete the Application object by name or id, Create a Application Credential object, Clear the Application Credential objects, Update the Application Credential object by name or id, Delete the Application Credential object by name or id, Create a Subscription object, Clear the Subscription objects, Update the Subscription object by name or id, Delete the Subscription object by name or id",
              "app:view": "List the Application objects, Get the Application object by name or id, List the Application Credential objects, Get the Application Credential object by name or id, List the Subscription objects, Get the Subscription object by name or id",
              "my:manage": "Update the Me object, Delete the Me object",
              "my:view": "Get the Me object, List the My Permission objects, List the My Organization objects",
              "org:manage": "Create a My Organization object, Update the Organization object by name or id, Delete the Organization object by name or id, Create a Member Invitation object, Clear the Member Invitation objects, Delete the Member Invitation object by name or id, Create a Member object, Clear the Member objects, Update the Member object by name or id, Delete the Member object by name or id, Create a Payment Method object, Update the Payment Method object by name or id, Delete the Payment Method object by name or id",
              "org:view": "Get the Organization object by name or id, Get the Group object by name or id, List the Member Invitation objects, Get the Member Invitation object by name or id, List the User Registry objects, Get the User Registry object by name or id, Get the User object by name or id, List the Associate objects, Get the Associate object by name or id, List the Member objects, Get the Member object by name or id, List the Role objects, Get the Role object by name or id, Get the Billing object by name or id, List the Billing objects, List the Payment Method objects, Get the Payment Method object by name or id, List the Payment Method Type objects, Get the Payment Method Type object by name or id"
            }
          }
        }
      }
    }
  },
  "x-ibm-configuration": {
    "testable": false
  }
},
{
  "openapi": "3.0.0",
  "info": {
    "x-ibm-name": "analytics",
    "version": "2.0.0",
    "title": "IBM API Connect Analytics API",
    "x-ibm-summary": "API for the API Connect Analytics subsystem",
    "description": "## API for the API Connect Analytics subsystem\nThis API includes the capability to retrieve information about API events stored in APIC Analytics,  retrieve the data used by the Analytics dashboards in the UI, obtain information on what filter parameters are supported  and also obtain information about internal cluster management, health and operations.\n### API Events\nThere are operations to retrieve a count of events, a list of events or a specific detailed API event at the following  scopes: cloud, provider organization, catalog and space. The API event operations all support a multitude of filter parameters to be able to select the exact events you wish. These filter parameters can be combined together in a single query.\n#### Data selection\nThere are advanced selectors available for these filter parameters too which allow operations such as these:\n- `.../events?consumer_org_id=1234567890` = select all events made by consumer org id 1234567890\n- `.../events?consumer_org_id=not:1234567890` = select all events made by consumer orgs other than id 1234567890\n- `.../events?product_name=contains:loan` = select all events where the product name contained the string 'loan' (equivalent to searching for `*loan*`)\n- `.../events?product_name=notcontains:loan` = select all events where the product name didn't contain the string 'loan'\n- `.../events?product_name=startswith:loa` = select all events where the product name starts with the string 'loa' (equivalent to searching for `loa*`)\n- `.../events?product_name=endswith:oan` = select all events where the product name ends with the string 'oan' (equivalent to searching for `*oan`)\n- `.../events?product_name=regex:[a-z]oan` = select all events where the product name begins with any lowercase alphabetical character and ends with the string 'oan' (WARNING: Regex based queries have a performance impact and should only be used if other queries cannot be used)\n- `.../events?product_name=oneof:loans,accounts,address` = select all events where the product name is loans, accounts or address\n- `.../events?product_name=oneof:loans\\,accounts,address` = select all events where the product name is either 'loans,account' or 'address' ('\\' escapes the first comma)\n- `.../events?product_name=oneof:loans,accounts\\,address` = select all events where the product name is either 'loans' or 'account,address' ('\\' escapes the second comma)\n- `.../events?product_name=notoneof:loans,accounts,address` = select all events where the product name is neither loans, accounts or address\n- `.../events?product_name=notoneof:loans\\,accounts,address` = select all events where the product name is neither 'loans,account' or 'address' ('\\' escapes the first comma)\n- `.../events?product_name=notoneof:loans,accounts\\,address` = select all events where the product name is neither 'loans' or 'account,address' ('\\' escapes the second comma)\n- `.../events?product_name=equals:not:loan` = select all events where the product name is exactly 'not:loan'\n- `.../events?product_name=not:not:loan` = select all events where the product name is not 'not:loan'\nThese ones only apply to numeric fields:\n- `.../events?bytes_received=1000` = select all events where the received bytes was exactly 1000\n- `.../events?bytes_received=gt:1000` = select all events where the received bytes was greater than 1000\n- `.../events?bytes_received=gte:1000` = select all events where the received bytes was greater than or equals to 1000\n- `.../events?bytes_received=lt:1000` = select all events where the received bytes was less than 1000\n- `.../events?bytes_received=lte:1000` = select all events where the received bytes was less than or equals to 1000\n\nThe full list of possible advanced operator prefixes are: `not`, `contains`, `notcontains`, `startswith`, `endswith`, `regex`, `gt`, `gte`, `lt`, `lte`, `oneof`.\n\nThe exception to the above are the IP address fields `client_ip`, `gateway_ip` and `immediate_client_ip` which only support equality checks and `not` but none of the other operators. However, they do support CIDR based queries, for example:\n- `.../events?client_ip=9.123.234.0/24` = select all events where the client IP address was in the 9.123.234.0 network (netmask 255.255.255.0)\n#### Pagination\nTo control how many results are returned and navigate through pages of results use the standard `limit` and `offset` query parameters. The event list operations will return a maximum of 10,000 api events, to retrieve larger amounts of data use the scroll operations at cloud or organization scope.\n#### Returning a subset of fields\nThe `fields` parameter can be used to only return a subset of fields in the api event records. Use a comma separated list of desired fields.\n### Dashboards\nThese operations allow you to download the data used by the APIC Analytics dashboards in the API Manager UI.  These are also at the same variety of scopes and also support the same filter parameters as usable with the API Event operations above.\n### Filter parameters\nThese operations define what filter parameters and operations are available at each scope.  This could be useful in a dynamically generated UI calling the API Event or dashboard operations above.\n### Cluster Management\nThese operations allow the retrieval of information on cluster health and status as well as the ability to perform  maintenance operations on it.\n",
    "termsOfService": "https://www.ibm.com/terms-of-service",
    "contact": {
      "name": "IBM",
      "url": "https://www.ibm.com",
      "email": "help@ibm.com"
    }
  },
  "servers": [
    {
      "url": "https://apimserver.example.com/analytics",
      "description": "Analytics V2 base path"
    }
  ],
  "paths": {
    "/{analytics-service}/cloud/events": {
      "description": "Return a result set of analytics API events scoped to the cloud. The items in the result set are determined by the passed in request query to this API. The order of the result set is sorted from newest to oldest events by specified 'datetime'.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "List events at cloud scope.",
        "description": "Returns a result set of analytics API events scoped to the cloud. The items in the result set are determined by the passed in request query to this API. The order of the result set is sorted from newest to oldest events by specified 'datetime'. In this API, references to 'field' refer to the analytics API event fields documented here: https://www.ibm.com/docs/en/api-connect/10.0.5.x_lts?topic=data-api-event-record-fields Note this operation is limited to only being able to return 10,000 events, if you need more than that then use the scroll operation.\n",
        "operationId": "events_cloudList",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/event_fields_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/cloud/events/scroll": {
      "description": "You can use the scroll operation to retrieve a large number of results. You can request an unlimited number of results in batches.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "post": {
        "summary": "Scroll through results in batches.",
        "description": "Returns an initial batch of results following the requested size or a default of 1000 as well as a 'scroll_id'. Pass this scroll ID to the next scroll operation to get back the next batch of results. Typically, the scroll ID does not change between requests, but it can change, so make sure to always use the latest scroll ID.\n",
        "operationId": "events_cloudScroll",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/event_fields_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScrollRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ScrollRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ScrollResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/cloud/events/scroll/delete": {
      "description": "Clears the search context and results for a scrolling search.",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "post": {
        "summary": "Clears the scroll search context.",
        "description": "Clears the scroll search context and results for a scrolling search. Should be used when the scroll context is not needed since otherwise it will stay open until it times out.\n",
        "operationId": "events_cloudScrollDelete",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScrollDeleteRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ScrollDeleteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ScrollDeleteResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/cloud/events/{event-id}": {
      "description": "Return a single analytics API event by ID scoped to the cloud. The item in the result set is determined by the passed in request query to this API.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/event-id"
        },
        {
          "$ref": "#/components/parameters/event_fields_optional"
        }
      ],
      "get": {
        "summary": "Get specific event at cloud scope.",
        "description": "Return a single analytics API event by ID scoped to the cloud. The item in the result set is determined by the passed in request query to this API. In this API, references to 'field' refer to the analytics API event fields documented here: https://www.ibm.com/docs/en/api-connect/10.0.5.x_lts?topic=data-api-event-record-fields\n",
        "operationId": "events_cloudGet",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/cloud/events/count": {
      "description": "Return a count of analytics API events scoped to the cloud. The count in the result is the number of API events that match the passed in request query.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Count events at cloud scope.",
        "description": "Return the count of analytics API events scoped to the cloud that match the passed in request query.\n",
        "operationId": "events_cloudCount",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventCountResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/events": {
      "description": "Return a result set of analytics API events scoped to the organization. The items in the result set are determined by the passed in request query to this API. The order of the result set is sorted from newest to oldest events by specified 'datetime'.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "List events at provider organization scope.",
        "description": "Return a result set of analytics API events scoped to the provider organization. The items in the result set are determined by the passed in request query to this API. The order of the result set is sorted from newest to oldest events by specified 'datetime'. In this API, references to 'field' refer to the analytics API event fields documented here: https://www.ibm.com/docs/en/api-connect/10.0.5.x_lts?topic=data-api-event-record-fields Note this operation is limited to only being able to return 10,000 events, if you need more than that then use the scroll operation.\n",
        "operationId": "events_orgList",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/event_fields_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/events/scroll": {
      "description": "You can use the scroll operation to retrieve a large number of results. You can request an unlimited number of results in batches.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Scroll through results in batches.",
        "description": "Returns an initial batch of results following the requested size or a default of 1000 as well as a 'scroll_id'. Pass this scroll ID to the next scroll operation to get back the next batch of results. Typically, the scroll ID does not change between requests, but it can change, so make sure to always use the latest scroll ID.\n",
        "operationId": "events_orgScroll",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/event_fields_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScrollRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ScrollRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ScrollResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/events/scroll/delete": {
      "description": "Clears the search context and results for a scrolling search.",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "post": {
        "summary": "Clears the scroll search context.",
        "description": "Clears the scroll search context and results for a scrolling search. Should be used when the scroll context is not needed since otherwise it will stay open until it times out.\n",
        "operationId": "events_orgScrollDelete",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScrollDeleteRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/ScrollDeleteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ScrollDeleteResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/events/{event-id}": {
      "description": "Return a single analytics API event by ID scoped to the provider organization. The item in the result set is determined by the passed in request query to this API.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/event-id"
        },
        {
          "$ref": "#/components/parameters/event_fields_optional"
        }
      ],
      "get": {
        "summary": "Get specific event at provider organization scope.\n",
        "description": "Return a single analytics API event by ID scoped to the provider organization. The item in the result set is determined by the passed in request query to this API. In this API, references to 'field' refer to the analytics API event fields documented here: https://www.ibm.com/docs/en/api-connect/10.0.5.x_lts?topic=data-api-event-record-fields\n",
        "operationId": "events_orgGet",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/events/count": {
      "description": "Return a count of analytics API events scoped to the provider organization. The count in the result is the number of API events that match the passed in request query.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Count events at provider organization scope.",
        "description": "Return the count of analytics API events scoped to the provider organization that match the passed in request query.\n",
        "operationId": "events_orgCount",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventCountResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/events": {
      "description": "Return a result set of analytics API events scoped to the catalog. The items in the result set are determined by the passed in request query to this API. The order of the result set is sorted from newest to oldest events by specified 'datetime'.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "List events at catalog scope.\n",
        "description": "Return a result set of analytics API events scoped to the catalog. The items in the result set are determined by the passed in request query to this API. The order of the result set is sorted from newest to oldest events by specified 'datetime'. In this API, references to 'field' refer to the analytics API event fields documented here: https://www.ibm.com/docs/en/api-connect/10.0.5.x_lts?topic=data-api-event-record-fields Note this operation is limited to only being able to return 10,000 events, if you need more than that then use the scroll operation at cloud or organization scope.\n",
        "operationId": "events_catalogList",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/event_fields_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/events/{event-id}": {
      "description": "Return a single analytics API event by ID scoped to the catalog. The item in the result set is determined by the passed in request query to this API.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/event-id"
        },
        {
          "$ref": "#/components/parameters/event_fields_optional"
        }
      ],
      "get": {
        "summary": "Get specific event at catalog scope.",
        "description": "Return a single analytics API event by ID scoped to the catalog. The item in the result set is determined by the passed in request query to this API. In this API, references to 'field' refer to the analytics API event fields documented here: https://www.ibm.com/docs/en/api-connect/10.0.5.x_lts?topic=data-api-event-record-fields\n",
        "operationId": "events_catalogGet",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/events/count": {
      "description": "Return a count of analytics API events scoped to the catalog. The count in the result is the number of API events that match the passed in request query.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Count events at catalog scope.",
        "description": "Return the count of analytics API events scoped to the catalog that match the passed in request query.\n",
        "operationId": "events_catalogCount",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventCountResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/events": {
      "description": "Return a result set of analytics API events scoped to the space. The items in the result set are determined by the passed in request query to this API. The order of the result set is sorted from newest to oldest events by specified 'datetime'.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "List events at space scope.",
        "description": "Return a result set of analytics API events scoped to the space. The items in the result set are determined by the passed in request query to this API. The order of the result set is sorted from newest to oldest events by specified 'datetime'. In this API, references to 'field' refer to the analytics API event fields documented here: https://www.ibm.com/docs/en/api-connect/10.0.5.x_lts?topic=data-api-event-record-fields Note this operation is limited to only being able to return 10,000 events, if you need more than that then use the scroll operation at cloud or organization scope.\n",
        "operationId": "events_spaceList",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/event_fields_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/events/{event-id}": {
      "description": "Return a single analytics API event by ID scoped to the space. The item in the result set is determined by the passed in request query to this API.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/event-id"
        },
        {
          "$ref": "#/components/parameters/event_fields_optional"
        }
      ],
      "get": {
        "summary": "Get specific event at space scope.",
        "description": "Return a single analytics API event by ID scoped to the space. The item in the result set is determined by the passed in request query to this API. In this API, references to 'field' refer to the analytics API event fields documented here: https://www.ibm.com/docs/en/api-connect/10.0.5.x_lts?topic=data-api-event-record-fields\n",
        "operationId": "events_spaceGet",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/events/count": {
      "description": "Return a count of analytics API events scoped to the space. The count in the result is the number of API events that match the passed in request query.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Count events at space scope.",
        "description": "Return a count of analytics API events scoped to the space.\n",
        "operationId": "events_spaceCount",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventCountResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/cloud/discover-timeline": {
      "description": "Return the data needed to populate the Timeline chart in discover view at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Timeline chart in discover view at cloud scope.",
        "description": "Return the data needed to populate the Timeline chart in discover view at cloud scope.\n",
        "operationId": "events_cloudTimeline",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/event_fields_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DiscoverTimelineResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/discover-timeline": {
      "description": "Return the data needed to populate the Timeline chart in discover view at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Timeline chart in discover view at org scope.\n",
        "description": "Return the data needed to populate the Timeline chart in discover view at org scope.\n",
        "operationId": "events_orgTimeline",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/event_fields_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DiscoverTimelineResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/discover-timeline": {
      "description": "Return the data needed to populate the Timeline chart in discover view at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Timeline chart in discover view at catalog scope.",
        "description": "Return the data needed to populate the Timeline chart in discover view at catalog scope.\n",
        "operationId": "events_catalogTimeline",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/event_fields_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DiscoverTimelineResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/discover-timeline": {
      "description": "Return the data needed to populate the Timeline chart in discover view at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Timeline chart in discover view at space scope.",
        "description": "Return the data needed to populate the Timeline chart in discover view at space scope.\n",
        "operationId": "events_spaceTimeline",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/event_fields_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DiscoverTimelineResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Events"
        ]
      }
    },
    "/{analytics-service}/cloud/dashboards/api": {
      "description": "Return the data needed to populate the API dashboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API dashboard at cloud scope.\n",
        "description": "Return the data needed to populate the API dashboard at cloud scope.\n",
        "operationId": "dashboards_cloudApi",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/include_others_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/cloud/dashboards/gateway": {
      "description": "Return the data needed to populate the Gateway Operations dashboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Gateway Operations dashboard at cloud scope.\n",
        "description": "Return the data needed to populate the Gateway Operations dashboard at cloud scope.\n",
        "operationId": "dashboards_cloudGateway",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GatewayDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/cloud/dashboards/latency": {
      "description": "Return the data needed to populate the Latency dashboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Latency dashboard at cloud scope.\n",
        "description": "Return the data needed to populate the Latency dashboard at cloud scope.\n",
        "operationId": "dashboards_cloudLatency",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LatencyDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/cloud/dashboards/product": {
      "description": "Return the data needed to populate the Product dashboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Product dashboard at cloud scope.\n",
        "description": "Return the data needed to populate the Product dashboard at cloud scope.\n",
        "operationId": "dashboards_cloudProduct",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProductDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/cloud/dashboards/status": {
      "description": "Return the data needed to populate the Status dashboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Status dashboard at cloud scope.\n",
        "description": "Return the data needed to populate the Status dashboard at cloud scope.\n",
        "operationId": "dashboards_cloudStatus",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StatusDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/cloud/dashboards/usage": {
      "description": "Return the data needed to populate the Usage dashboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Usage dashboard at cloud scope.\n",
        "description": "Return the data needed to populate the Usage dashboard at cloud scope.\n",
        "operationId": "dashboards_cloudUsage",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsageDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/cloud/dashboards/consumption": {
      "description": "Return the data needed to populate the Consumption dashboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Consumption dashboard at cloud scope.\n",
        "description": "Return the data needed to populate the Consumption dashboard at cloud scope.\n",
        "operationId": "dashboards_cloudConsumption",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/daily_limit_optional"
          },
          {
            "$ref": "#/components/parameters/daily_offset_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumptionDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/cloud/dashboards/data": {
      "description": "Return the data needed to populate the Data dashboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Data dashboard at cloud scope.\n",
        "description": "Return the data needed to populate the Data dashboard at cloud scope.\n",
        "operationId": "dashboards_cloudData",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DataDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/dashboards/api": {
      "description": "Return the data needed to populate the API dashboard at provider organization scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API dashboard at provider organization scope.\n",
        "description": "Return the data needed to populate the API dashboard at provider organization scope.\n",
        "operationId": "dashboards_orgApi",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/include_others_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/dashboards/gateway": {
      "description": "Return the data needed to populate the Gateway Operations dashboard at provider organization scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Gateway Operations dashboard at provider organization scope.\n",
        "description": "Return the data needed to populate the Gateway Operations dashboard at provider organization scope.\n",
        "operationId": "dashboards_orgGateway",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GatewayDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/dashboards/latency": {
      "description": "Return the data needed to populate the Latency dashboard at provider organization scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Latency dashboard at provider organization scope.\n",
        "description": "Return the data needed to populate the Latency dashboard at provider organization scope.\n",
        "operationId": "dashboards_orgLatency",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LatencyDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/dashboards/product": {
      "description": "Return the data needed to populate the Product dashboard at provider organization scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Product dashboard at provider organization scope.\n",
        "description": "Return the data needed to populate the Product dashboard at provider organization scope.\n",
        "operationId": "dashboards_orgProduct",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProductDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/dashboards/status": {
      "description": "Return the data needed to populate the Status dashboard at provider organization scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Status dashboard at provider organization scope.\n",
        "description": "Return the data needed to populate the Status dashboard at provider organization scope.\n",
        "operationId": "dashboards_orgStatus",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StatusDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/dashboards/usage": {
      "description": "Return the data needed to populate the Usage dashboard at provider organization scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Usage dashboard at provider organization scope.\n",
        "description": "Return the data needed to populate the Usage dashboard at provider organization scope.\n",
        "operationId": "dashboards_orgUsage",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsageDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/dashboards/consumption": {
      "description": "Return the data needed to populate the Consumption dashboard at provider organization scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Consumption dashboard at provider organization scope.\n",
        "description": "Return the data needed to populate the Consumption dashboard at provider organization scope.\n",
        "operationId": "dashboards_orgConsumption",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/daily_limit_optional"
          },
          {
            "$ref": "#/components/parameters/daily_offset_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumptionDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/dashboards/data": {
      "description": "Return the data needed to populate the Data dashboard at provider organization scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Data dashboard at provider organization scope.\n",
        "description": "Return the data needed to populate the Data dashboard at provider organization scope.\n",
        "operationId": "dashboards_orgData",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_id_optional"
          },
          {
            "$ref": "#/components/parameters/catalog_name_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DataDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/dashboards/api": {
      "description": "Return the data needed to populate the API dashboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API dashboard at catalog scope.\n",
        "description": "Return the data needed to populate the API dashboard at catalog scope.\n",
        "operationId": "dashboards_catalogApi",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/include_others_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/dashboards/gateway": {
      "description": "Return the data needed to populate the Gateway Operations dashboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Gateway Operations dashboard at catalog scope.\n",
        "description": "Return the data needed to populate the Gateway Operations dashboard at catalog scope.\n",
        "operationId": "dashboards_catalogGateway",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GatewayDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/dashboards/latency": {
      "description": "Return the data needed to populate the Latency dashboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Latency dashboard at catalog scope.\n",
        "description": "Return the data needed to populate the Latency dashboard at catalog scope.\n",
        "operationId": "dashboards_catalogLatency",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LatencyDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/dashboards/product": {
      "description": "Return the data needed to populate the Product dashboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Product dashboard at catalog scope.\n",
        "description": "Return the data needed to populate the Product dashboard at catalog scope.\n",
        "operationId": "dashboards_catalogProduct",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProductDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/dashboards/status": {
      "description": "Return the data needed to populate the Status dashboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Status dashboard at catalog scope.\n",
        "description": "Return the data needed to populate the Status dashboard at catalog scope.\n",
        "operationId": "dashboards_catalogStatus",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StatusDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/dashboards/usage": {
      "description": "Return the data needed to populate the Usage dashboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Usage dashboard at catalog scope.\n",
        "description": "Return the data needed to populate the Usage dashboard at catalog scope.\n",
        "operationId": "dashboards_catalogUsage",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsageDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/dashboards/consumption": {
      "description": "Return the data needed to populate the Consumption dashboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Consumption dashboard at catalog scope.\n",
        "description": "Return the data needed to populate the Consumption dashboard at catalog scope.\n",
        "operationId": "dashboards_catalogConsumption",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/daily_limit_optional"
          },
          {
            "$ref": "#/components/parameters/daily_offset_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumptionDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/dashboards/data": {
      "description": "Return the data needed to populate the Data dashboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Data dashboard at catalog scope.\n",
        "description": "Return the data needed to populate the Data dashboard at catalog scope.\n",
        "operationId": "dashboards_catalogData",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/space_id_optional"
          },
          {
            "$ref": "#/components/parameters/space_name_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DataDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/dashboards/api": {
      "description": "Return the data needed to populate the API dashboard at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API dashboard at space scope.\n",
        "description": "Return the data needed to populate the API dashboard at space scope.\n",
        "operationId": "dashboards_spaceApi",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/include_others_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/dashboards/gateway": {
      "description": "Return the data needed to populate the Gateway Operations dashboard at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Gateway Operations dashboard at space scope.\n",
        "description": "Return the data needed to populate the Gateway Operations dashboard at space scope.\n",
        "operationId": "dashboards_spaceGateway",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GatewayDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/dashboards/latency": {
      "description": "Return the data needed to populate the Latency dashboard at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Latency dashboard at space scope.\n",
        "description": "Return the data needed to populate the Latency dashboard at space scope.\n",
        "operationId": "dashboards_spaceLatency",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LatencyDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/dashboards/product": {
      "description": "Return the data needed to populate the Product dashboard at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Product dashboard at space scope.\n",
        "description": "Return the data needed to populate the Product dashboard at space scope.\n",
        "operationId": "dashboards_spaceProduct",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProductDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/dashboards/status": {
      "description": "Return the data needed to populate the Status dashboard at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Status dashboard at space scope.\n",
        "description": "Return the data needed to populate the Status dashboard at space scope.\n",
        "operationId": "dashboards_spaceStatus",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StatusDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/dashboards/usage": {
      "description": "Return the data needed to populate the Usage dashboard at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Usage dashboard at space scope.\n",
        "description": "Return the data needed to populate the Usage dashboard at space scope.\n",
        "operationId": "dashboards_spaceUsage",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsageDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/dashboards/consumption": {
      "description": "Return the data needed to populate the Consumption dashboard at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Consumption dashboard at space scope.\n",
        "description": "Return the data needed to populate the Consumption dashboard at space scope.\n",
        "operationId": "dashboards_spaceConsumption",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/daily_limit_optional"
          },
          {
            "$ref": "#/components/parameters/daily_offset_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumptionDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/dashboards/data": {
      "description": "Return the data needed to populate the Data dashboard at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Data dashboard at space scope.\n",
        "description": "Return the data needed to populate the Data dashboard at space scope.\n",
        "operationId": "dashboards_spaceData",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/api_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_name_optional"
          },
          {
            "$ref": "#/components/parameters/api_resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/api_version_optional"
          },
          {
            "$ref": "#/components/parameters/app_id_optional"
          },
          {
            "$ref": "#/components/parameters/app_lifecycle_state_optional"
          },
          {
            "$ref": "#/components/parameters/app_name_optional"
          },
          {
            "$ref": "#/components/parameters/bucket_interval_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_received_optional"
          },
          {
            "$ref": "#/components/parameters/bytes_sent_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_optional"
          },
          {
            "$ref": "#/components/parameters/client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_id_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/consumer_org_title_optional"
          },
          {
            "$ref": "#/components/parameters/custom_data_optional"
          },
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/endpoint_url_optional"
          },
          {
            "$ref": "#/components/parameters/event_id_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_ip_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_service_name_optional"
          },
          {
            "$ref": "#/components/parameters/gateway_type_optional"
          },
          {
            "$ref": "#/components/parameters/global_transaction_id_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_document_hash_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_error_count_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_name_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_operation_type_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_field_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_request_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/graphql_response_type_cost_optional"
          },
          {
            "$ref": "#/components/parameters/http_user_agent_optional"
          },
          {
            "$ref": "#/components/parameters/immediate_client_ip_optional"
          },
          {
            "$ref": "#/components/parameters/log_policy_optional"
          },
          {
            "$ref": "#/components/parameters/method_optional"
          },
          {
            "$ref": "#/components/parameters/opentracing_info_optional"
          },
          {
            "$ref": "#/components/parameters/path_optional"
          },
          {
            "$ref": "#/components/parameters/path_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_id_optional"
          },
          {
            "$ref": "#/components/parameters/plan_name_optional"
          },
          {
            "$ref": "#/components/parameters/plan_version_optional"
          },
          {
            "$ref": "#/components/parameters/product_id_optional"
          },
          {
            "$ref": "#/components/parameters/product_name_optional"
          },
          {
            "$ref": "#/components/parameters/product_title_optional"
          },
          {
            "$ref": "#/components/parameters/product_version_optional"
          },
          {
            "$ref": "#/components/parameters/query_string_optional"
          },
          {
            "$ref": "#/components/parameters/request_body_optional"
          },
          {
            "$ref": "#/components/parameters/request_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/resource_id_optional"
          },
          {
            "$ref": "#/components/parameters/response_body_optional"
          },
          {
            "$ref": "#/components/parameters/response_http_headers_optional"
          },
          {
            "$ref": "#/components/parameters/status_code_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/time_to_serve_request_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_id_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DataDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Dashboards"
        ]
      }
    },
    "/{analytics-service}/cloud/filterparameters": {
      "description": "Return the list of filter parameters supported at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "List of filter parameters supported at cloud scope.",
        "description": "Return the list of filter parameters supported at cloud scope.\n",
        "operationId": "filterparams_cloudList",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/FilterParamListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Filterparams"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/filterparameters": {
      "description": "Return the list of filter parameters supported at provider organization scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "List of filter parameters supported at provider organization scope.",
        "description": "Return the list of filter parameters supported at provider organization scope.\n",
        "operationId": "filterparams_orgList",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/FilterParamListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Filterparams"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/filterparameters": {
      "description": "Return the list of filter parameters supported at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "List of filter parameters supported at catalog scope.",
        "description": "Return the list of filter parameters supported at catalog scope.\n",
        "operationId": "filterparams_catalogList",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/FilterParamListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Filterparams"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/filterparameters": {
      "description": "Return the list of filter parameters supported at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "List of filter parameters supported at space scope.",
        "description": "Return the list of filter parameters supported at space scope.\n",
        "operationId": "filterparams_spaceList",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/FilterParamListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Filterparams"
        ]
      }
    },
    "/{analytics-service}/cloud/queries": {
      "description": "The root of the 'queries' resource at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "List saved queries at cloud scope.",
        "description": "List saved queries owned by the user making the request, at cloud scope.\n",
        "operationId": "queries_cloudList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/saved_query_search_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      },
      "post": {
        "summary": "Create a query at cloud scope.",
        "description": "Save a query scoped to the cloud.\n",
        "operationId": "queries_cloudCreate",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/cloud/queries/shared": {
      "description": "Return a list of saved queries shared by others at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "List shared queries at cloud scope.",
        "description": "Return a list of saved queries shared by others at cloud scope.\n",
        "operationId": "queries_cloudListShared",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/saved_query_search_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/cloud/queries/{query-id}": {
      "description": "Return a single saved query by name or ID scoped to the cloud.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "get": {
        "summary": "Get a specific query at cloud scope.",
        "description": "Return a query by name or ID scoped to the cloud.\n",
        "operationId": "queries_cloudGet",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      },
      "put": {
        "summary": "Update a specific query at cloud scope.",
        "description": "Replace a query with contents of the request body.\n",
        "operationId": "queries_cloudUpdate",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryUpdateRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/QueryUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      },
      "delete": {
        "summary": "Deletes the specified query at cloud scope.",
        "description": "Deletes the saved query. If it was shared, it will no longer be available.\n",
        "operationId": "queries_cloudDelete",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContentResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/cloud/queries/{query-id}/transfer-owner": {
      "description": "Transfer ownership of a specified query to a different user. You must be the owner of this query to do this.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Transfer ownership of a saved query to a different user.",
        "description": "Provide a body with new_owner_user_url: /api/user-registries/{org}/{user-registry}/users/{user} to transfer this query to a new owner.",
        "operationId": "queries_cloudTransferOwner",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryTransferOwnerRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/QueryTransferOwnerRequest"
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/cloud/queries/{query-id}/share": {
      "description": "Share a query with others users at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Share a saved query.",
        "description": "Share a saved query.",
        "operationId": "queries_cloudShare",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/cloud/queries/{query-id}/unshare": {
      "description": "Unshare a query at cloud scope. Other users at this scope will no longer be able to view or clone this query.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Unshare a saved query.",
        "description": "Unshare a saved query.",
        "operationId": "queries_cloudUnshare",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/cloud/queries/{query-id}/clone": {
      "description": "Make a copy of a shared query at cloud scope. The user comitting this action will be the owner of the cloned query.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Make a personal copy of a shared query.",
        "description": "Make a personal copy of a shared query.",
        "operationId": "queries_cloudClone",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/queries": {
      "description": "The root of the 'queries' resource at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "List saved queries at org scope.",
        "description": "List saved queries owned by the user making the request, at org scope.\n",
        "operationId": "queries_orgList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/saved_query_search_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      },
      "post": {
        "summary": "Create a query at org scope.",
        "description": "Return a single query by name or ID scoped to the org.\n",
        "operationId": "queries_orgCreate",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/queries/shared": {
      "description": "Return a list of saved queries shared by others at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "List shared queries at org scope.",
        "description": "Return a list of saved queries shared by others at org scope.\n",
        "operationId": "queries_orgListShared",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/saved_query_search_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/queries/{query-id}": {
      "description": "Return a single saved query by name or ID scoped to the org.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "get": {
        "summary": "Get a specific query at org scope.",
        "description": "Return a query by name or ID scoped to the org.\n",
        "operationId": "queries_orgGet",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      },
      "put": {
        "summary": "Update a specific query at org scope.",
        "description": "Replace a query with contents of the request body.\n",
        "operationId": "queries_orgUpdate",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryUpdateRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/QueryUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      },
      "delete": {
        "summary": "Deletes the specified query at org scope.",
        "description": "Deletes the saved query. If it was shared, it will no longer be available.\n",
        "operationId": "queries_orgDelete",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContentResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/queries/{query-id}/transfer-owner": {
      "description": "Transfer ownership of a specified query to a different user. You must be the owner of this query to do this.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Transfer ownership of a saved query to a different user.",
        "description": "Provide a body with new_owner_user_url: /api/user-registries/{org}/{user-registry}/users/{user} to transfer this query to a new owner.",
        "operationId": "queries_orgTransferOwner",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryTransferOwnerRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/QueryTransferOwnerRequest"
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/queries/{query-id}/share": {
      "description": "Share a query with others users at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Share a saved query.",
        "description": "Share a saved query.",
        "operationId": "queries_orgShare",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/queries/{query-id}/unshare": {
      "description": "Unshare a query at org scope. Other users at this scope will no longer be able to view or clone this query.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Unshare a saved query.",
        "description": "Unshare a saved query.",
        "operationId": "queries_orgUnshare",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/queries/{query-id}/clone": {
      "description": "Make a copy of a shared query at org scope. The user comitting this action will be the owner of the cloned query.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Make a personal copy of a shared query.",
        "description": "Make a personal copy of a shared query.",
        "operationId": "queries_orgClone",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/queries": {
      "description": "The root of the 'queries' resource at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "List saved queries at catalog scope.",
        "description": "List saved queries owned by the user making the request, at catalog scope.\n",
        "operationId": "queries_catalogList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/saved_query_search_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      },
      "post": {
        "summary": "Create a query at catalog scope.",
        "description": "Return a single query by name or ID scoped to the catalog.\n",
        "operationId": "queries_catalogCreate",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/queries/shared": {
      "description": "Return a list of saved queries shared by others at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "List shared queries at catalog scope.",
        "description": "Return a list of saved queries shared by others at catalog scope.\n",
        "operationId": "queries_catalogListShared",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/saved_query_search_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/queries/{query-id}": {
      "description": "Return a single saved query by name or ID scoped to the catalog.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "get": {
        "summary": "Get a specific query at catalog scope.",
        "description": "Return a query by name or ID scoped to the catalog.\n",
        "operationId": "queries_catalogGet",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      },
      "put": {
        "summary": "Update a specific query at catalog scope.",
        "description": "Replace a query with contents of the request body.\n",
        "operationId": "queries_catalogUpdate",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryUpdateRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/QueryUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      },
      "delete": {
        "summary": "Deletes the specified query at catalog scope.",
        "description": "Deletes the saved query. If it was shared, it will no longer be available.\n",
        "operationId": "queries_catalogDelete",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContentResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/queries/{query-id}/transfer-owner": {
      "description": "Transfer ownership of a specified query to a different user. You must be the owner of this query to do this.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Transfer ownership of a saved query to a different user.",
        "description": "Provide a body with new_owner_user_url: /api/user-registries/{org}/{user-registry}/users/{user} to transfer this query to a new owner.",
        "operationId": "queries_catalogTransferOwner",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryTransferOwnerRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/QueryTransferOwnerRequest"
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/queries/{query-id}/share": {
      "description": "Share a query with others users at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Share a saved query.",
        "description": "Share a saved query.",
        "operationId": "queries_catalogShare",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/queries/{query-id}/unshare": {
      "description": "Unshare a query at catalog scope. Other users at this scope will no longer be able to view or clone this query.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Unshare a saved query.",
        "description": "Unshare a saved query.",
        "operationId": "queries_catalogUnshare",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/queries/{query-id}/clone": {
      "description": "Make a copy of a shared query at catalog scope. The user comitting this action will be the owner of the cloned query.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Make a personal copy of a shared query.",
        "description": "Make a personal copy of a shared query.",
        "operationId": "queries_catalogClone",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/queries": {
      "description": "The root of the 'queries' resource at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "List saved queries at space scope.",
        "description": "List saved queries owned by the user making the request, at space scope.\n",
        "operationId": "queries_spaceList",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/saved_query_search_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      },
      "post": {
        "summary": "Create a query at space scope.",
        "description": "Return a single query by name or ID scoped to the space.\n",
        "operationId": "queries_spaceCreate",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/queries/shared": {
      "description": "Return a list of saved queries shared by others at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "List shared queries at space scope.",
        "description": "Return a list of saved queries shared by others at space scope.\n",
        "operationId": "queries_spaceListShared",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/saved_query_search_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryListResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/queries/{query-id}": {
      "description": "Return a single saved query by name or ID scoped to the space.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "get": {
        "summary": "Get a specific query at space scope.",
        "description": "Return a query by name or ID scoped to the space.\n",
        "operationId": "queries_spaceGet",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      },
      "put": {
        "summary": "Update a specific query at space scope.",
        "description": "Replace a query with contents of the request body.\n",
        "operationId": "queries_spaceUpdate",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryUpdateRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/QueryUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      },
      "delete": {
        "summary": "Deletes the specified query at space scope.",
        "description": "Deletes the saved query. If it was shared, it will no longer be available.\n",
        "operationId": "queries_spaceDelete",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContentResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/queries/{query-id}/transfer-owner": {
      "description": "Transfer ownership of a specified query to a different user. You must be the owner of this query to do this.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Transfer ownership of a saved query to a different user.",
        "description": "Provide a body with new_owner_user_url: /api/user-registries/{org}/{user-registry}/users/{user} to transfer this query to a new owner.",
        "operationId": "queries_spaceTransferOwner",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryTransferOwnerRequest"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/QueryTransferOwnerRequest"
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/queries/{query-id}/share": {
      "description": "Share a query with others users at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Share a saved query.",
        "description": "Share a saved query.",
        "operationId": "queries_spaceShare",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/queries/{query-id}/unshare": {
      "description": "Unshare a query at space scope. Other users at this scope will no longer be able to view or clone this query.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Unshare a saved query.",
        "description": "Unshare a saved query.",
        "operationId": "queries_spaceUnshare",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/queries/{query-id}/clone": {
      "description": "Make a copy of a shared query at space scope. The user comitting this action will be the owner of the cloned query.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/query-id"
        }
      ],
      "post": {
        "summary": "Make a personal copy of a shared query.",
        "description": "Make a personal copy of a shared query.",
        "operationId": "queries_spaceClone",
        "security": [
          {
            "oauth": [
              "api-analytics:manage"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueryResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Queries"
        ]
      }
    },
    "/{analytics-service}/cloud/service-status": {
      "description": "Used by the UI to get the analytics service status\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Used by the UI to get the analytics service status.\n",
        "description": "Used by the UI to get the analytics service status.\n",
        "operationId": "service_cloudServicestatus",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ServiceStatusResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Service"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/service-status": {
      "description": "Used by the UI to get the analytics service status\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Used by the UI to get the analytics service status.\n",
        "description": "Used by the UI to get the analytics service status.\n",
        "operationId": "service_orgServicestatus",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ServiceStatusResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Service"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/service-status": {
      "description": "Used by the UI to get the analytics service status\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Used by the UI to get the analytics service status.\n",
        "description": "Used by the UI to get the analytics service status.\n",
        "operationId": "service_catalogServicestatus",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ServiceStatusResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Service"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/service-status": {
      "description": "Used by the UI to get the analytics service status\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Used by the UI to get the analytics service status.\n",
        "description": "Used by the UI to get the analytics service status.\n",
        "operationId": "service_spaceServicestatus",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ServiceStatusResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Service"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/apiusage": {
      "description": "Return the data needed to populate the API usage report at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API usage report at cloud scope.\n",
        "description": "Return the data needed to populate the API usage report at cloud scope.\n",
        "operationId": "reports_cloudApiusage",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/apiusage/mini-leaderboards/apis": {
      "description": "Return the data needed to populate the API leaderboard for the API usage report at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API leaderboard for the API usage report at cloud scope.\n",
        "description": "Return the data needed to populate the API leaderboard for the API usage report at cloud scope.\n",
        "operationId": "reports_cloudApiusageApisLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/apiusage/mini-leaderboards/products": {
      "description": "Return the data needed to populate the product leaderboard for the API usage report at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the product leaderboard for the API usage report at cloud scope.\n",
        "description": "Return the data needed to populate the product leaderboard for the API usage report at cloud scope.\n",
        "operationId": "reports_cloudApiusageProductsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/apiusage/mini-leaderboards/plans": {
      "description": "Return the data needed to populate the plan leaderboard for the API usage report at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the plan leaderboard for the API usage report at cloud scope.\n",
        "description": "Return the data needed to populate the plan leaderboard for the API usage report at cloud scope.\n",
        "operationId": "reports_cloudApiusagePlansLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/apis/{apiref}": {
      "description": "Return the data needed to populate an API for the leaderboard for the API usage report at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/apiref"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate an API for the leaderboard for the API usage report at cloud scope.\n",
        "description": "Return the data needed to populate an API for the leaderboard for the API usage report at cloud scope.\n",
        "operationId": "reports_cloudApiDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/products/{productref}": {
      "description": "Return the data needed to populate a product for the leaderboard for the API usage report at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/productref"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a product for the leaderboard for the API usage report at cloud scope.\n",
        "description": "Return the data needed to populate a product for the leaderboard for the API usage report at cloud scope.\n",
        "operationId": "reports_cloudProductDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/plans/{planref}": {
      "description": "Return the data needed to populate a plan for the leaderboard for the API usage report at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/planref"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a plan for the leaderboard for the API usage report at cloud scope.\n",
        "description": "Return the data needed to populate a plan for the leaderboard for the API usage report at cloud scope.\n",
        "operationId": "reports_cloudPlanDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/leaderboards/apis": {
      "description": "Return the data needed to populate the API leaderboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API leaderboard at cloud scope.\n",
        "description": "Return the data needed to populate the API leaderboard at cloud scope.\n",
        "operationId": "reports_cloudApisLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/leaderboards/products": {
      "description": "Return the data needed to populate the Products leaderboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Products leaderboard at cloud scope.\n",
        "description": "Return the data needed to populate the Products leaderboard at cloud scope.\n",
        "operationId": "reports_cloudProductsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/leaderboards/plans": {
      "description": "Return the data needed to populate the Plans leaderboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Plans leaderboard at cloud scope.\n",
        "description": "Return the data needed to populate the Plans leaderboard at cloud scope.\n",
        "operationId": "reports_cloudPlanLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/leaderboards/applications": {
      "description": "Return the data needed to populate the Applications leaderboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Applications leaderboard at cloud scope.\n",
        "description": "Return the data needed to populate the Applications leaderboard at cloud scope.\n",
        "operationId": "reports_cloudApplicationsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/leaderboards/consumerorgs": {
      "description": "Return the data needed to populate the Consumer Organization leaderboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Consumer Organization leaderboard at cloud scope.\n",
        "description": "Return the data needed to populate the Consumer Organization leaderboard at cloud scope.\n",
        "operationId": "reports_cloudConsumerorgsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/leaderboards/breakdown": {
      "description": "Return the data needed to populate the Breakdown leaderboard at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Breakdown leaderboard at cloud scope.\n",
        "description": "Return the data needed to populate the Breakdown leaderboard at cloud scope.\n",
        "operationId": "reports_cloudBreakdownLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/inactive/consumerorgs": {
      "description": "Return the data needed to populate the Inactive consumer organizations report funnel at cloud scope\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Inactive consumer organizations report funnel at cloud scope\n",
        "description": "Return the data needed to populate the Inactive consumer organizations report funnel at cloud scope\n",
        "operationId": "reports_cloudInactiveCorgReportFunnel",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/regenerate_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/InactiveCorgFunnelResponse"
          },
          "202": {
            "$ref": "#/components/responses/InactivePollingResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/inactive/consumerorgs/{inactive-consumer-report-type}": {
      "description": "Return the data needed to populate the Inactive consumer organizations report table at cloud scope\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/inactive-consumer-report-type"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Inactive consumer organizations report table at cloud scope\n",
        "description": "Return the data needed to populate the Inactive consumer organizations report table at cloud scope\n",
        "operationId": "reports_cloudInactiveCorgReportTable",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/search_optional"
          },
          {
            "$ref": "#/components/parameters/regenerate_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/InactiveCorgTableResponse"
          },
          "202": {
            "$ref": "#/components/responses/InactivePollingResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/inactive/products/{inactive-product-report-type}": {
      "description": "Return the data needed to populate the Inactive product report at cloud scope\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/inactive-product-report-type"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Inactive product report table at cloud scope\n",
        "description": "Return the data needed to populate the Inactive product report table at cloud scope\n",
        "operationId": "reports_cloudInactiveProductReport",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/search_optional"
          },
          {
            "$ref": "#/components/parameters/regenerate_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/InactiveProductResponse"
          },
          "202": {
            "$ref": "#/components/responses/InactivePollingResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/deprecated/products": {
      "description": "Return the data needed to populate the Deprecated product report at cloud scope\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Deprecated product report table at cloud scope\n",
        "description": "Return the data needed to populate the Deprecated product report table at cloud scope\n",
        "operationId": "reports_cloudDeprecatedProduct",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/search_optional"
          },
          {
            "$ref": "#/components/parameters/regenerate_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeprecatedProductResponse"
          },
          "202": {
            "$ref": "#/components/responses/DeprecatedPollingResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/consumertrend": {
      "description": "Return the data needed to populate the consumer trend report, including trends and data of consumers, applications, and subscriptions, at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the consumer trend report at cloud scope.\n",
        "description": "Return the data needed to populate the consumer trend report, including trends and data of consumers, applications, and subscriptions, at cloud scope.\n",
        "operationId": "reports_cloudConsumerTrend",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/consumertrend/mini-leaderboards/applications": {
      "description": "Return the data for the application leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Application leaderboard for the consumer trend report at cloud scope.\n",
        "description": "Return the data for the application leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at cloud scope.\n",
        "operationId": "reports_cloudConsumerTrendApplicationsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/consumertrend/mini-leaderboards/consumerorgs": {
      "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the consumerorg leaderboard for the  consumer trend report at cloud scope.\n",
        "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at cloud scope.\n",
        "operationId": "reports_cloudConsumerTrendConsumerorgsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/applications/{app-name}": {
      "description": "Return the data for the application leaderboard in the consumer trend report, including API call counts and other metrics over time at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/app-name"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a application for the leaderboard for the consumer trend report at cloud scope.\n",
        "description": "Return the data for the application leaderboard in the consumer trend report, including API call counts and other metrics over time at cloud scope.\n",
        "operationId": "reports_cloudApplicationDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/reports/consumerorgs/{consumer-org-name}": {
      "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including API call counts and other metrics over time at cloud scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/consumer-org-name"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a consumerorg for the leaderboard for the consumer trend report at cloud scope.\n",
        "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including API call counts and other metrics over time at cloud scope.\n",
        "operationId": "reports_cloudConsumerorgDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/apiusage": {
      "description": "Return the data needed to populate the API usage report at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API usage report at org scope.\n",
        "description": "Return the data needed to populate the API usage report at org scope.\n",
        "operationId": "reports_orgApiusage",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/apiusage/mini-leaderboards/apis": {
      "description": "Return the data needed to populate the API leaderboard for the API usage report at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API leaderboard for the API usage report at org scope.\n",
        "description": "Return the data needed to populate the API leaderboard for the API usage report at org scope.\n",
        "operationId": "reports_orgApiusageApisLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/apiusage/mini-leaderboards/products": {
      "description": "Return the data needed to populate the product leaderboard for the API usage report at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the product leaderboard for the API usage report at org scope.\n",
        "description": "Return the data needed to populate the product leaderboard for the API usage report at org scope.\n",
        "operationId": "reports_orgApiusageProductsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/apiusage/mini-leaderboards/plans": {
      "description": "Return the data needed to populate the plan leaderboard for the API usage report at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the plan leaderboard for the API usage report at org scope.\n",
        "description": "Return the data needed to populate the plan leaderboard for the API usage report at org scope.\n",
        "operationId": "reports_orgApiusagePlansLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/apis/{apiref}": {
      "description": "Return the data needed to populate an API for the leaderboard for the API usage report at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/apiref"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate an API for the leaderboard for the API usage report at org scope.\n",
        "description": "Return the data needed to populate an API for the leaderboard for the API usage report at org scope.\n",
        "operationId": "reports_orgApiDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/products/{productref}": {
      "description": "Return the data needed to populate a product for the leaderboard for the API usage report at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/productref"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a product for the leaderboard for the API usage report at org scope.\n",
        "description": "Return the data needed to populate a product for the leaderboard for the API usage report at org scope.\n",
        "operationId": "reports_orgProductDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/plans/{planref}": {
      "description": "Return the data needed to populate a plan for the leaderboard for the API usage report at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/planref"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a plan for the leaderboard for the API usage report at org scope.\n",
        "description": "Return the data needed to populate a plan for the leaderboard for the API usage report at org scope.\n",
        "operationId": "reports_orgPlanDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/leaderboards/apis": {
      "description": "Return the data needed to populate the API leaderboard at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API leaderboard at org scope.\n",
        "description": "Return the data needed to populate the API leaderboard at org scope.\n",
        "operationId": "reports_orgApisLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/leaderboards/products": {
      "description": "Return the data needed to populate the Product leaderboard at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Product leaderboard at org scope.\n",
        "description": "Return the data needed to populate the Product leaderboard a at org scope.\n",
        "operationId": "reports_orgProductsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/leaderboards/plans": {
      "description": "Return the data needed to populate the Plans leaderboard at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Plans leaderboard at org scope.\n",
        "description": "Return the data needed to populate the Plans leaderboard at org scope.\n",
        "operationId": "reports_orgPlanLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/leaderboards/applications": {
      "description": "Return the data needed to populate the Applications leaderboard at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Applications leaderboard at org scope.\n",
        "description": "Return the data needed to populate the Applications leaderboard at org scope.\n",
        "operationId": "reports_orgApplicationsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/leaderboards/consumerorgs": {
      "description": "Return the data needed to populate the Consumer Organization leaderboard at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Consumer Organization leaderboard at org scope.\n",
        "description": "Return the data needed to populate the Consumer Organization leaderboard at org scope.\n",
        "operationId": "reports_orgConsumerorgsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/leaderboards/breakdown": {
      "description": "Return the data needed to populate the Breakdown leaderboard at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Breakdown leaderboard at org scope.\n",
        "description": "Return the data needed to populate the Breakdown leaderboard at org scope.\n",
        "operationId": "reports_orgBreakdownLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/inactive/consumerorgs": {
      "description": "Return the data needed to populate the Inactive consumer organizations report funnel at org scope\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Inactive consumer organizations report funnel at org scope\n",
        "description": "Return the data needed to populate the Inactive consumer organizations report funnel at org scope\n",
        "operationId": "reports_orgInactiveCorgReportFunnel",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/regenerate_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/InactiveCorgFunnelResponse"
          },
          "202": {
            "$ref": "#/components/responses/InactivePollingResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/inactive/consumerorgs/{inactive-consumer-report-type}": {
      "description": "Return the data needed to populate the Inactive consumer organizations report table at org scope\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/inactive-consumer-report-type"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Inactive consumer organizations report table at org scope\n",
        "description": "Return the data needed to populate the Inactive consumer organizations report table at org scope\n",
        "operationId": "reports_orgInactiveCorgReportTable",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/search_optional"
          },
          {
            "$ref": "#/components/parameters/regenerate_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/InactiveCorgTableResponse"
          },
          "202": {
            "$ref": "#/components/responses/InactivePollingResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/inactive/products/{inactive-product-report-type}": {
      "description": "Return the data needed to populate the Inactive product report at org scope\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/inactive-product-report-type"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Inactive product report table at org scope\n",
        "description": "Return the data needed to populate the Inactive product report table at org scope\n",
        "operationId": "reports_orgInactiveProductReport",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/search_optional"
          },
          {
            "$ref": "#/components/parameters/regenerate_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/InactiveProductResponse"
          },
          "202": {
            "$ref": "#/components/responses/InactivePollingResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/deprecated/products": {
      "description": "Return the data needed to populate the Deprecated product report at org scope\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Deprecated product report table at org scope\n",
        "description": "Return the data needed to populate the Deprecated product report table at org scope\n",
        "operationId": "reports_orgDeprecatedProduct",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/search_optional"
          },
          {
            "$ref": "#/components/parameters/regenerate_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeprecatedProductResponse"
          },
          "202": {
            "$ref": "#/components/responses/DeprecatedPollingResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/consumertrend": {
      "description": "Return the data needed to populate the consumer trend report, including trends and data of consumers, applications, and subscriptions, at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the consumer trend report at org scope.\n",
        "description": "Return the data needed to populate the consumer trend report, including trends and data of consumers, applications, and subscriptions, at org scope.\n",
        "operationId": "reports_orgConsumerTrend",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/consumertrend/mini-leaderboards/applications": {
      "description": "Return the data for the application leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Application leaderboard for the consumer trend report at org scope.\n",
        "description": "Return the data for the application leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at org scope.\n",
        "operationId": "reports_orgConsumerTrendApplicationsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/consumertrend/mini-leaderboards/consumerorgs": {
      "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the consumerorg leaderboard for the  consumer trend report at org scope.\n",
        "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at org scope.\n",
        "operationId": "reports_orgConsumerTrendConsumerorgsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/applications/{app-name}": {
      "description": "Return the data for the application leaderboard in the consumer trend report, including API call counts and other metrics over time at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/app-name"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a application for the leaderboard for the consumer trend report at org scope.\n",
        "description": "Return the data for the application leaderboard in the consumer trend report, including API call counts and other metrics over time at org scope.\n",
        "operationId": "reports_orgApplicationDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/orgs/{org}/reports/consumerorgs/{consumer-org-name}": {
      "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including API call counts and other metrics over time at org scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/consumer-org-name"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a consumerorg for the leaderboard for the consumer trend report at org scope.\n",
        "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including API call counts and other metrics over time at org scope.\n",
        "operationId": "reports_orgConsumerorgDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/apiusage": {
      "description": "Return the data needed to populate the API usage report at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API usage report at catalog scope.\n",
        "description": "Return the data needed to populate the API usage report at catalog scope.\n",
        "operationId": "reports_catalogApiusage",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/apiusage/mini-leaderboards/apis": {
      "description": "Return the data needed to populate the API leaderboard for the API usage report at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API leaderboard for the API usage report at catalog scope.\n",
        "description": "Return the data needed to populate the API leaderboard for the API usage report at catalog scope.\n",
        "operationId": "reports_catalogApiusageApisLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/apiusage/mini-leaderboards/products": {
      "description": "Return the data needed to populate the product leaderboard for the API usage report at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the product leaderboard for the API usage report at catalog scope.\n",
        "description": "Return the data needed to populate the product leaderboard for the API usage report at catalog scope.\n",
        "operationId": "reports_catalogApiusageProductsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/apiusage/mini-leaderboards/plans": {
      "description": "Return the data needed to populate the plan leaderboard for the API usage report at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the plan leaderboard for the API usage report at catalog scope.\n",
        "description": "Return the data needed to populate the plan leaderboard for the API usage report at catalog scope.\n",
        "operationId": "reports_catalogApiusagePlansLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/apis/{apiref}": {
      "description": "Return the data needed to populate an API for the leaderboard for the API usage report at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/apiref"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate an API for the leaderboard for the API usage report at catalog scope.\n",
        "description": "Return the data needed to populate an API for the leaderboard for the API usage report at catalog scope.\n",
        "operationId": "reports_catalogApiDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/products/{productref}": {
      "description": "Return the data needed to populate a product for the leaderboard for the API usage report at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/productref"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a product for the leaderboard for the API usage report at catalog scope.\n",
        "description": "Return the data needed to populate a product for the leaderboard for the API usage report at catalog scope.\n",
        "operationId": "reports_catalogProductDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/plans/{planref}": {
      "description": "Return the data needed to populate a plan for the leaderboard for the API usage report at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/planref"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a plan for the leaderboard for the API usage report at catalog scope.\n",
        "description": "Return the data needed to populate a plan for the leaderboard for the API usage report at catalog scope.\n",
        "operationId": "reports_catalogPlanDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/leaderboards/apis": {
      "description": "Return the data needed to populate the API leaderboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API leaderboard at catalog scope.\n",
        "description": "Return the data needed to populate the API leaderboard at catalog scope.\n",
        "operationId": "reports_catalogApisLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/leaderboards/products": {
      "description": "Return the data needed to populate the Product leaderboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Product leaderboard at catalog scope.\n",
        "description": "Return the data needed to populate the Product leaderboard at catalog scope.\n",
        "operationId": "reports_catalogProductsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/leaderboards/plans": {
      "description": "Return the data needed to populate the Plan leaderboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Plan leaderboard at catalog scope.\n",
        "description": "Return the data needed to populate the Plan leaderboard at catalog scope.\n",
        "operationId": "reports_catalogPlanLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/leaderboards/applications": {
      "description": "Return the data needed to populate the Applications leaderboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Applications leaderboard at catalog scope.\n",
        "description": "Return the data needed to populate the Applications leaderboard at catalog scope.\n",
        "operationId": "reports_catalogApplicationsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/leaderboards/consumerorgs": {
      "description": "Return the data needed to populate the Consumer Organization leaderboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Consumer Organization leaderboard at catalog scope.\n",
        "description": "Return the data needed to populate the Consumer Organization leaderboard at catalog scope.\n",
        "operationId": "reports_catalogConsumerorgsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/leaderboards/breakdown": {
      "description": "Return the data needed to populate the Breakdown leaderboard at catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        },
        {
          "$ref": "#/components/parameters/search_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Breakdown leaderboard at catalog scope.\n",
        "description": "Return the data needed to populate the Breakdown leaderboard at catalog scope.\n",
        "operationId": "reports_catalogBreakdownLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/inactive/consumerorgs": {
      "description": "Return the data needed to populate the Inactive consumer organizations report funnel at catalog scope\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Inactive consumer organizations report funnel at catalog scope\n",
        "description": "Return the data needed to populate the Inactive consumer organizations report funnel at catalog scope\n",
        "operationId": "reports_catalogInactiveCorgReportFunnel",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/regenerate_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/InactiveCorgFunnelResponse"
          },
          "202": {
            "$ref": "#/components/responses/InactivePollingResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/inactive/consumerorgs/{inactive-consumer-report-type}": {
      "description": "Return the data needed to populate the Inactive consumer organizations report table at catalog scope\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/inactive-consumer-report-type"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Inactive consumer organizations report table at catalog scope\n",
        "description": "Return the data needed to populate the Inactive consumer organizations report table at catalog scope\n",
        "operationId": "reports_catalogInactiveCorgReportTable",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/search_optional"
          },
          {
            "$ref": "#/components/parameters/regenerate_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/InactiveCorgTableResponse"
          },
          "202": {
            "$ref": "#/components/responses/InactivePollingResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/inactive/products/{inactive-product-report-type}": {
      "description": "Return the data needed to populate the Inactive product report at catalog scope\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/inactive-product-report-type"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Inactive product report table at catalog scope\n",
        "description": "Return the data needed to populate the Inactive product report table at catalog scope\n",
        "operationId": "reports_catalogInactiveProductReport",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/search_optional"
          },
          {
            "$ref": "#/components/parameters/regenerate_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/InactiveProductResponse"
          },
          "202": {
            "$ref": "#/components/responses/InactivePollingResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/deprecated/products": {
      "description": "Return the data needed to populate the deprecated product report at catalog scope\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Deprecated product report table at catalog scope\n",
        "description": "Return the data needed to populate the Deprecated product report table at catalog scope\n",
        "operationId": "reports_catalogDeprecatedProduct",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/provider_org_name_optional"
          },
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/search_optional"
          },
          {
            "$ref": "#/components/parameters/regenerate_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeprecatedProductResponse"
          },
          "202": {
            "$ref": "#/components/responses/DeprecatedPollingResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/consumertrend": {
      "description": "Return the data needed to populate the consumer trend report, including trends and data of consumers, applications, and subscriptions, at the catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the consumer trend report at catalog scope.\n",
        "description": "Return the data needed to populate the consumer trend report, including trends and data of consumers, applications, and subscriptions, at the catalog scope.\n",
        "operationId": "reports_catalogConsumerTrend",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/consumertrend/mini-leaderboards/applications": {
      "description": "Return the data for the application leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at the catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Application leaderboard for the consumer trend report at catalog scope.\n",
        "description": "Return the data for the application leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at the catalog scope.\n",
        "operationId": "reports_catalogConsumerTrendApplicationsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/consumertrend/mini-leaderboards/consumerorgs": {
      "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at the catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the consumerorg leaderboard for the  consumer trend report at catalog scope.\n",
        "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at the catalog scope.\n",
        "operationId": "reports_catalogConsumerTrendConsumerorgsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/applications/{app-name}": {
      "description": "Return the data for the application leaderboard in the consumer trend report, including API call counts and other metrics over time at the catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/app-name"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a application for the leaderboard for the consumer trend report at catalog scope.\n",
        "description": "Return the data for the application leaderboard in the consumer trend report, including API call counts and other metrics over time at the catalog scope.\n",
        "operationId": "reports_catalogApplicationDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/catalogs/{org}/{catalog}/reports/consumerorgs/{consumer-org-name}": {
      "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including API call counts and other metrics over time at the catalog scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/consumer-org-name"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a consumerorg for the leaderboard for the consumer trend report at catalog scope.\n",
        "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including API call counts and other metrics over time at the catalog scope.\n",
        "operationId": "reports_catalogConsumerorgDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/apiusage": {
      "description": "Return the data needed to populate the API usage report at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API usage report at space scope.\n",
        "description": "Return the data needed to populate the API usage report at space scope.\n",
        "operationId": "reports_spaceApiusage",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/apiusage/mini-leaderboards/apis": {
      "description": "Return the data needed to populate the API leaderboard for the API usage report at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API leaderboard for the API usage report at space scope.\n",
        "description": "Return the data needed to populate the API leaderboard for the API usage report at space scope.\n",
        "operationId": "reports_spaceApiusageApisLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/apiusage/mini-leaderboards/products": {
      "description": "Return the data needed to populate the product leaderboard for the API usage report at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the product leaderboard for the API usage report at space scope.\n",
        "description": "Return the data needed to populate the product leaderboard for the API usage report at space scope.\n",
        "operationId": "reports_spaceApiusageProductsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/apiusage/mini-leaderboards/plans": {
      "description": "Return the data needed to populate the plan leaderboard for the API usage report at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the plan leaderboard for the API usage report at space scope.\n",
        "description": "Return the data needed to populate the plan leaderboard for the API usage report at space scope.\n",
        "operationId": "reports_spaceApiusagePlansLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/apis/{apiref}": {
      "description": "Return the data needed to populate an API for the leaderboard for the API usage report at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/apiref"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate an API for the leaderboard for the API usage report at space scope.\n",
        "description": "Return the data needed to populate an API for the leaderboard for the API usage report at space scope.\n",
        "operationId": "reports_spaceApiDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/products/{productref}": {
      "description": "Return the data needed to populate a product for the leaderboard for the API usage report at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/productref"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a product for the leaderboard for the API usage report at space scope.\n",
        "description": "Return the data needed to populate a product for the leaderboard for the API usage report at space scope.\n",
        "operationId": "reports_spaceProductDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/plans/{planref}": {
      "description": "Return the data needed to populate a plan for the leaderboard for the API usage report at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/planref"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a plan for the leaderboard for the API usage report at space scope.\n",
        "description": "Return the data needed to populate a plan for the leaderboard for the API usage report at space scope.\n",
        "operationId": "reports_spacePlanDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUsageLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/leaderboards/apis": {
      "description": "Return the data needed to populate the API leaderboard at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the API leaderboard at space scope.\n",
        "description": "Return the data needed to populate the API leaderboard at space scope.\n",
        "operationId": "reports_spaceApisLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/leaderboards/products": {
      "description": "Return the data needed to populate the Product leaderboard at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Product leaderboard at space scope.\n",
        "description": "Return the data needed to populate the Product leaderboard at space scope.\n",
        "operationId": "reports_spaceProductsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/leaderboards/plans": {
      "description": "Return the data needed to populate the Plans leaderboard at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Plans leaderboard at space scope.\n",
        "description": "Return the data needed to populate the Plans leaderboard at space scope.\n",
        "operationId": "reports_spacePlanLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/leaderboards/applications": {
      "description": "Return the data needed to populate the Applications leaderboard at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Applications leaderboard at space scope.\n",
        "description": "Return the data needed to populate the Applications leaderboard at space scope.\n",
        "operationId": "reports_spaceApplicationsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/leaderboards/consumerorgs": {
      "description": "Return the data needed to populate the Consumer Organization leaderboard at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/limit_optional"
        },
        {
          "$ref": "#/components/parameters/offset_optional"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Consumer Organization leaderboard at space scope.\n",
        "description": "Return the data needed to populate the Consumer Organization leaderboard at space scope.\n",
        "operationId": "reports_spaceConsumerorgsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeaderboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/consumertrend": {
      "description": "Return the data needed to populate the consumer trend report, including trends and data of consumers, applications, and subscriptions, at space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the consumer trend report at space scope.\n",
        "description": "Return the data needed to populate the consumer trend report, including trends and data of consumers, applications, and subscriptions, at space scope.\n",
        "operationId": "reports_spaceConsumerTrend",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/consumertrend/mini-leaderboards/applications": {
      "description": "Return the data for the application leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at the space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the Application leaderboard for the consumer trend report at space scope.\n",
        "description": "Return the data for the application leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at the space scope.\n",
        "operationId": "reports_spaceConsumerTrendApplicationsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/consumertrend/mini-leaderboards/consumerorgs": {
      "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at the space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate the consumerorg leaderboard for the  consumer trend report at space scope.\n",
        "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at the space scope.\n",
        "operationId": "reports_spacespaceConsumerTrendConsumerorgsLeaderboard",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/applications/{app-name}": {
      "description": "Return the data for the application leaderboard in the consumer trend report, including API call counts and other metrics over time at the space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/app-name"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a application for the leaderboard for the consumer trend report at space scope.\n",
        "description": "Return the data for the application leaderboard in the consumer trend report, including API call counts and other metrics over time at the space scope.\n",
        "operationId": "reports_spaceApplicationDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/spaces/{org}/{catalog}/{space}/reports/consumerorgs/{consumer-org-name}": {
      "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including API call counts and other metrics over time at the space scope.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/space"
        },
        {
          "$ref": "#/components/parameters/consumer-org-name"
        }
      ],
      "get": {
        "summary": "Get the data needed to populate a consumerorg for the leaderboard for the consumer trend report at space scope.\n",
        "description": "Return the data for the consumerorg leaderboard in the consumer trend report, including API call counts and other metrics over time at the space scope.\n",
        "operationId": "reports_spaceConsumerorgDetail",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report_timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/report_end_date_optional"
          },
          {
            "$ref": "#/components/parameters/report_start_date_optional"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerTrendLeaderboardDetailReportResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Reports"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cat/allocation": {
      "description": "Provides a snapshot of the number of shards allocated to each data node and their disk space.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/bytes_optional"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/local_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/h_optional"
        },
        {
          "$ref": "#/components/parameters/help_optional"
        },
        {
          "$ref": "#/components/parameters/s_optional"
        },
        {
          "$ref": "#/components/parameters/v_columns_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Snapshot of the number of shards allocated to each data node and their disk space.",
        "description": "Provides a snapshot of the number of shards allocated to each data node and their disk space.\n",
        "operationId": "clustermgmt_cat_getAllocation",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the _cat/allocation command",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtTextResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtCatResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtCatResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cat/indices": {
      "description": "Returns high-level information about indices in a cluster, including backing indices for data streams.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/bytes_optional"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/h_optional"
        },
        {
          "$ref": "#/components/parameters/health_optional"
        },
        {
          "$ref": "#/components/parameters/help_optional"
        },
        {
          "$ref": "#/components/parameters/include_unloaded_segments_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pri_optional"
        },
        {
          "$ref": "#/components/parameters/s_optional"
        },
        {
          "$ref": "#/components/parameters/time_optional"
        },
        {
          "$ref": "#/components/parameters/v_columns_optional"
        },
        {
          "$ref": "#/components/parameters/expand_wildcards_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns high-level information about indices in a cluster.",
        "description": "Returns high-level information about indices in a cluster, including backing indices for data streams.\n",
        "operationId": "clustermgmt_cat_getIndices",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the _cat/indices command",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtTextResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtCatResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtCatResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cat/nodes": {
      "description": "Returns information about a cluster’s nodes.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/bytes_optional"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/full_id_optional"
        },
        {
          "$ref": "#/components/parameters/h_optional"
        },
        {
          "$ref": "#/components/parameters/help_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/s_optional"
        },
        {
          "$ref": "#/components/parameters/time_optional"
        },
        {
          "$ref": "#/components/parameters/v_columns_optional"
        },
        {
          "$ref": "#/components/parameters/include_unloaded_segments_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Information about a cluster’s nodes.",
        "description": "Returns information about a cluster’s nodes.\n",
        "operationId": "clustermgmt_cat_getNodes",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the _cat/nodes command",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtTextResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtCatResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtCatResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cat/recovery": {
      "description": "Returns information about ongoing and completed shard recoveries, similar to the index recovery API. For data streams, the API returns information about the stream’s backing indices.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/bytes_optional"
        },
        {
          "$ref": "#/components/parameters/detailed_optional"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/h_optional"
        },
        {
          "$ref": "#/components/parameters/help_optional"
        },
        {
          "$ref": "#/components/parameters/index_optional"
        },
        {
          "$ref": "#/components/parameters/s_optional"
        },
        {
          "$ref": "#/components/parameters/time_optional"
        },
        {
          "$ref": "#/components/parameters/v_columns_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns information about ongoing and completed shard recoveries.",
        "description": "Returns information about ongoing and completed shard recoveries, similar to the index recovery API. For data streams, the API returns information about the stream’s backing indices.\n",
        "operationId": "clustermgmt_cat_getRecovery",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the _cat/recovery command",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtTextResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtCatResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtCatResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cat/shards": {
      "description": "The shards command is the detailed view of what nodes contain which shards. It will tell you if it’s a primary or replica, the number of docs, the bytes it takes on disk, and the node where it’s located. For data streams, the API returns information about the stream’s backing indices.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/bytes_optional"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/h_optional"
        },
        {
          "$ref": "#/components/parameters/help_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/s_optional"
        },
        {
          "$ref": "#/components/parameters/time_optional"
        },
        {
          "$ref": "#/components/parameters/v_columns_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Detailed view of what nodes contain which shards.",
        "description": "The shards command is the detailed view of what nodes contain which shards. It will tell you if it’s a primary or replica, the number of docs, the bytes it takes on disk, and the node where it’s located. For data streams, the API returns information about the stream’s backing indices.\n",
        "operationId": "clustermgmt_cat_getShards",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the _cat/shards command",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtTextResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtCatResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtCatResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cat/aliases": {
      "description": "Retrieves the cluster’s index aliases, including filter and routing information. The API does not return data stream aliases.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/h_optional"
        },
        {
          "$ref": "#/components/parameters/help_optional"
        },
        {
          "$ref": "#/components/parameters/s_optional"
        },
        {
          "$ref": "#/components/parameters/v_columns_optional"
        },
        {
          "$ref": "#/components/parameters/expand_wildcards_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Retrieves the cluster’s index aliases, including filter and routing information.",
        "description": "Retrieves the cluster’s index aliases, including filter and routing information. The API does not return data stream aliases.\n",
        "operationId": "clustermgmt_cat_getAliases",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the _cat/aliases command",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtTextResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtCatResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterMgmtCatResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes": {
      "description": "The cluster nodes info API allows to retrieve one or more (or all) of the cluster nodes information. All the nodes selective options are explained here. By default, it returns all attributes and core settings for a node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/flat_settings_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns cluster nodes information.",
        "description": "The cluster nodes info API allows to retrieve one or more (or all) of the cluster nodes information. All the nodes selective options are explained here. By default, it returns all attributes and core settings for a node.\n",
        "operationId": "clustermgmt_nodes_getNodes",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/hot-threads": {
      "description": "This API yields a breakdown of the hot threads on each selected node in the cluster. The output is plain text with a breakdown of each node’s top hot threads.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/ignore_idle_threads_optional"
        },
        {
          "$ref": "#/components/parameters/interval_optional"
        },
        {
          "$ref": "#/components/parameters/snapshots_optional"
        },
        {
          "$ref": "#/components/parameters/threads_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/type_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns the hot threads on each selected node in the cluster.",
        "description": "This API yields a breakdown of the hot threads on each selected node in the cluster. The output is plain text with a breakdown of each node’s top hot threads.\n",
        "operationId": "clustermgmt_nodes_getNodesHotThreads",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/stats": {
      "description": "You can use the cluster nodes stats API to retrieve statistics for nodes in a cluster. All the nodes selective options are explained here. By default, all stats are returned. You can limit the returned information by using metrics.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/completion_fields_optional"
        },
        {
          "$ref": "#/components/parameters/fielddata_fields_optional"
        },
        {
          "$ref": "#/components/parameters/fields_optional"
        },
        {
          "$ref": "#/components/parameters/groups_optional"
        },
        {
          "$ref": "#/components/parameters/level_optional"
        },
        {
          "$ref": "#/components/parameters/types_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/include_segment_file_sizes_optional"
        },
        {
          "$ref": "#/components/parameters/include_unloaded_segments_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns cluster nodes statistics.",
        "description": "You can use the cluster nodes stats API to retrieve statistics for nodes in a cluster. All the nodes selective options are explained here. By default, all stats are returned. You can limit the returned information by using metrics.\n",
        "operationId": "clustermgmt_nodes_getNodesStats",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/usage": {
      "description": "The cluster nodes usage API allows you to retrieve information on the usage of features for each node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns information on the usage of features.",
        "description": "The cluster nodes usage API allows you to retrieve information on the usage of features for each node.\n",
        "operationId": "clustermgmt_nodes_getNodesUsage",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/stats/{metric}": {
      "description": "You can use the cluster nodes stats API to retrieve statistics for nodes in a cluster. All the nodes selective options are explained here. By default, all stats are returned. You can limit the returned information by using metrics.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/metric"
        },
        {
          "$ref": "#/components/parameters/completion_fields_optional"
        },
        {
          "$ref": "#/components/parameters/fielddata_fields_optional"
        },
        {
          "$ref": "#/components/parameters/groups_optional"
        },
        {
          "$ref": "#/components/parameters/level_optional"
        },
        {
          "$ref": "#/components/parameters/types_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/include_segment_file_sizes_optional"
        },
        {
          "$ref": "#/components/parameters/include_unloaded_segments_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns cluster nodes statistics.",
        "description": "You can use the cluster nodes stats API to retrieve statistics for nodes in a cluster. All the nodes selective options are explained here. By default, all stats are returned. You can limit the returned information by using metrics.\n",
        "operationId": "clustermgmt_nodes_getStatsMetric",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/usage/{metric}": {
      "description": "The cluster nodes usage API allows you to retrieve information on the usage of features for each node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/metric"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns information on the usage of features.",
        "description": "The cluster nodes usage API allows you to retrieve information on the usage of features for each node.\n",
        "operationId": "clustermgmt_nodes_getUsageMetric",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/{node-id-or-metric}": {
      "description": "The cluster nodes info API allows to retrieve one or more (or all) of the cluster nodes information. By default, it returns all attributes and core settings for a node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/node-id-or-metric"
        },
        {
          "$ref": "#/components/parameters/flat_settings_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns cluster nodes information.",
        "description": "The cluster nodes info API allows to retrieve one or more (or all) of the cluster nodes information. By default, it returns all attributes and core settings for a node.\n",
        "operationId": "clustermgmt_nodes_getNodesByIdOrMetric",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/{node-id}/hot-threads": {
      "description": "This API yields a breakdown of the hot threads on each selected node in the cluster.  The output is plain text with a breakdown of each node’s top hot threads.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/node-id"
        },
        {
          "$ref": "#/components/parameters/ignore_idle_threads_optional"
        },
        {
          "$ref": "#/components/parameters/interval_optional"
        },
        {
          "$ref": "#/components/parameters/snapshots_optional"
        },
        {
          "$ref": "#/components/parameters/threads_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/type_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns the hot threads on each selected node in the cluster.",
        "description": "This API yields a breakdown of the hot threads on each selected node in the cluster.  The output is plain text with a breakdown of each node’s top hot threads.\n",
        "operationId": "clustermgmt_nodes_getNodesHotThreadsById",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/{node-id}/stats": {
      "description": "You can use the cluster nodes stats API to retrieve statistics for nodes in a cluster. All the nodes selective options are explained here. By default, all stats are returned. You can limit the returned information by using metrics.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/node-id"
        },
        {
          "$ref": "#/components/parameters/completion_fields_optional"
        },
        {
          "$ref": "#/components/parameters/fielddata_fields_optional"
        },
        {
          "$ref": "#/components/parameters/fields_optional"
        },
        {
          "$ref": "#/components/parameters/groups_optional"
        },
        {
          "$ref": "#/components/parameters/level_optional"
        },
        {
          "$ref": "#/components/parameters/types_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/include_segment_file_sizes_optional"
        },
        {
          "$ref": "#/components/parameters/include_unloaded_segments_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns cluster nodes statistics.",
        "description": "You can use the cluster nodes stats API to retrieve statistics for nodes in a cluster. All the nodes selective options are explained here. By default, all stats are returned. You can limit the returned information by using metrics.\n",
        "operationId": "clustermgmt_nodes_getNodesStatsById",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/{node-id}/usage": {
      "description": "The cluster nodes usage API allows you to retrieve information on the usage of features for each node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/node-id"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns information on the usage of features.",
        "description": "The cluster nodes usage API allows you to retrieve information on the usage of features for each node.\n",
        "operationId": "clustermgmt_nodes_getNodesUsageById",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/{node-id}/{metric}": {
      "description": "The cluster nodes info API allows to retrieve one or more (or all) of the cluster nodes information. By default, it returns all attributes and core settings for a node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/node-id"
        },
        {
          "$ref": "#/components/parameters/metric"
        },
        {
          "$ref": "#/components/parameters/flat_settings_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns cluster nodes information.",
        "description": "The cluster nodes info API allows to retrieve one or more (or all) of the cluster nodes information. By default, it returns all attributes and core settings for a node.\n",
        "operationId": "clustermgmt_nodes_getNodeMetricById",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/{node-id}/stats/{metric}": {
      "description": "You can use the cluster nodes stats API to retrieve statistics for nodes in a cluster. All the nodes selective options are explained here. By default, all stats are returned. You can limit the returned information by using metrics.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/node-id"
        },
        {
          "$ref": "#/components/parameters/metric"
        },
        {
          "$ref": "#/components/parameters/completion_fields_optional"
        },
        {
          "$ref": "#/components/parameters/fielddata_fields_optional"
        },
        {
          "$ref": "#/components/parameters/fields_optional"
        },
        {
          "$ref": "#/components/parameters/groups_optional"
        },
        {
          "$ref": "#/components/parameters/level_optional"
        },
        {
          "$ref": "#/components/parameters/types_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/include_segment_file_sizes_optional"
        },
        {
          "$ref": "#/components/parameters/include_unloaded_segments_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns cluster nodes statistics.",
        "description": "You can use the cluster nodes stats API to retrieve statistics for nodes in a cluster. All the nodes selective options are explained here. By default, all stats are returned. You can limit the returned information by using metrics.\n",
        "operationId": "clustermgmt_nodes_getNodesStatsByIdMetric",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/{node-id}/stats/{metric}/{index-metric}": {
      "description": "You can use the cluster nodes stats API to retrieve statistics for nodes in a cluster. All the nodes selective options are explained here. By default, all stats are returned. You can limit the returned information by using metrics.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/node-id"
        },
        {
          "$ref": "#/components/parameters/metric"
        },
        {
          "$ref": "#/components/parameters/index-metric"
        },
        {
          "$ref": "#/components/parameters/completion_fields_optional"
        },
        {
          "$ref": "#/components/parameters/fielddata_fields_optional"
        },
        {
          "$ref": "#/components/parameters/fields_optional"
        },
        {
          "$ref": "#/components/parameters/groups_optional"
        },
        {
          "$ref": "#/components/parameters/level_optional"
        },
        {
          "$ref": "#/components/parameters/types_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/include_segment_file_sizes_optional"
        },
        {
          "$ref": "#/components/parameters/include_unloaded_segments_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Result of _nodes/:nodeId",
        "description": "Returns the result of nodes/:nodeId on OpenSearch\n",
        "operationId": "clustermgmt_nodes_getNodeMetricByIdMetricIndex",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/{node-id}/usage/{metric}": {
      "description": "The cluster nodes usage API allows you to retrieve information on the usage of features for each node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/node-id"
        },
        {
          "$ref": "#/components/parameters/metric"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns information on the usage of features.",
        "description": "The cluster nodes usage API allows you to retrieve information on the usage of features for each node.\n",
        "operationId": "clustermgmt_nodes_getNodesUsageByIdMetric",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/reload-secure-settings": {
      "description": "Secure settings are stored in an on-disk keystore. Certain of these settings are reloadable. That is, you can change them on disk and reload them without restarting any nodes in the cluster. When you have updated reloadable secure settings in your keystore, you can use this API to reload those settings on each node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "post": {
        "summary": "Reloads the keystore on nodes in the cluster.",
        "description": "Secure settings are stored in an on-disk keystore. Certain of these settings are reloadable. That is, you can change them on disk and reload them without restarting any nodes in the cluster. When you have updated reloadable secure settings in your keystore, you can use this API to reload those settings on each node.\n",
        "operationId": "clustermgmt_nodes_postReloadSecureSettings",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecureSettingsPassword"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/SecureSettingsPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/nodes/{node-id}/reload-secure-settings": {
      "description": "Secure settings are stored in an on-disk keystore. Certain of these settings are reloadable. That is, you can change them on disk and reload them without restarting any nodes in the cluster. When you have updated reloadable secure settings in your keystore, you can use this API to reload those settings on each node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/node-id"
        }
      ],
      "post": {
        "summary": "Reloads the keystore on nodes in the cluster.",
        "description": "Secure settings are stored in an on-disk keystore. Certain of these settings are reloadable. That is, you can change them on disk and reload them without restarting any nodes in the cluster. When you have updated reloadable secure settings in your keystore, you can use this API to reload those settings on each node.\n",
        "operationId": "clustermgmt_nodes_postReloadSecureSettingsById",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecureSettingsPassword"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/SecureSettingsPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cluster/allocation/explain": {
      "description": "The purpose of the cluster allocation explain API is to provide explanations for shard allocations in the cluster. For unassigned shards, the explain API provides an explanation for why the shard is unassigned.  For assigned shards, the explain API provides an explanation for why the shard is remaining on its current node and has not moved or rebalanced to another node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/include_disk_info_optional"
        },
        {
          "$ref": "#/components/parameters/include_yes_decisions_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Result of _cluster/allocation/explain",
        "description": "The purpose of the cluster allocation explain API is to provide explanations for shard allocations in the cluster. For unassigned shards, the explain API provides an explanation for why the shard is unassigned.  For assigned shards, the explain API provides an explanation for why the shard is remaining on its current node and has not moved or rebalanced to another node.\n",
        "operationId": "clustermgmt_cluster_getAllocationExplain",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cluster/voting-config-exclusions": {
      "description": "By default, if there are more than three master-eligible nodes in the cluster and you remove fewer than half of the master-eligible nodes in the cluster at once, the voting configuration automatically shrinks. If you want to shrink the voting configuration to contain fewer than three nodes or to remove half or more of the master-eligible nodes in the cluster at once, you must use this API to remove departed nodes from the voting configuration manually. It adds an entry for that node in the voting configuration exclusions list. The cluster then tries to reconfigure the voting configuration to remove that node and to prevent it from returning.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        }
      ],
      "delete": {
        "summary": "Removes master-eligible nodes from the voting configuration exclusion list.",
        "description": "Removes master-eligible nodes from the voting configuration exclusion list.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/wait_for_removal_optional"
          }
        ],
        "operationId": "clustermgmt_cluster_deleteVotingConfigExclusions",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      },
      "post": {
        "summary": "Adds master-eligible nodes from the voting configuration exclusion list.",
        "description": "Adds master-eligible nodes from the voting configuration exclusion list.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/node_names_optional"
          },
          {
            "$ref": "#/components/parameters/node_ids_optional"
          },
          {
            "$ref": "#/components/parameters/voting_timeout_optional"
          }
        ],
        "operationId": "clustermgmt_cluster_postVotingConfigExclusions",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cluster/health": {
      "description": "The cluster health API returns a simple status on the health of the cluster. You can also use the API to get the health status of only specified data streams and indices. For data streams, the API retrieves the health status of the stream’s backing indices.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/level_optional"
        },
        {
          "$ref": "#/components/parameters/local_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_active_shards_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_events_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_no_initializing_shards_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_no_relocating_shards_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_nodes_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_status_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns the health status of a cluster.",
        "description": "The cluster health API returns a simple status on the health of the cluster. You can also use the API to get the health status of only specified data streams and indices. For data streams, the API retrieves the health status of the stream’s backing indices.\n",
        "operationId": "clustermgmt_cluster_getHealth",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cluster/pending-tasks": {
      "description": "The pending cluster tasks API returns a list of any cluster-level changes (e.g. create index, update mapping, allocate or fail shard) which have not yet been executed.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/local_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns cluster-level changes that have not yet been executed.",
        "description": "The pending cluster tasks API returns a list of any cluster-level changes (e.g. create index, update mapping, allocate or fail shard) which have not yet been executed.\n",
        "operationId": "clustermgmt_cluster_getPendingTasks",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cluster/settings": {
      "description": "Manages cluster-wide settings.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/flat_settings_optional"
        },
        {
          "$ref": "#/components/parameters/include_defaults_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns cluster-wide settings.",
        "description": "By default, this API call only returns settings that have been explicitly defined, but can also include the default settings by calling the include_defaults parameter.\n",
        "operationId": "clustermgmt_cluster_getSettings",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      },
      "put": {
        "summary": "Configures dynamic cluster settings.",
        "description": "You can configure and update dynamic settings on a running cluster using the cluster update settings API. Updates made using the cluster update settings API can be persistent, which apply across cluster restarts, or transient, which reset after a cluster restart. You can also reset transient or persistent settings by assigning them a null value using the API.\n",
        "operationId": "clustermgmt_cluster_putSettings",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Settings"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Settings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cluster/state": {
      "description": "The cluster state is an internal data structure which keeps track of a variety of information needed by every node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/allow_no_indices_optional"
        },
        {
          "$ref": "#/components/parameters/expand_wildcards_optional"
        },
        {
          "$ref": "#/components/parameters/flat_settings_optional"
        },
        {
          "$ref": "#/components/parameters/ignore_unavailable_optional"
        },
        {
          "$ref": "#/components/parameters/local_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_metadata_version_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns an internal representation of the cluster state for debugging or diagnostic purposes.",
        "description": "The cluster state is an internal data structure which keeps track of a variety of information needed by every node.\n",
        "operationId": "clustermgmt_cluster_getState",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cluster/state/{metrics}": {
      "description": "The cluster state is an internal data structure which keeps track of a variety of information needed by every node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/metrics"
        },
        {
          "$ref": "#/components/parameters/allow_no_indices_optional"
        },
        {
          "$ref": "#/components/parameters/expand_wildcards_optional"
        },
        {
          "$ref": "#/components/parameters/flat_settings_optional"
        },
        {
          "$ref": "#/components/parameters/ignore_unavailable_optional"
        },
        {
          "$ref": "#/components/parameters/local_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_metadata_version_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns an internal representation of the cluster state for debugging or diagnostic purposes.",
        "description": "The cluster state is an internal data structure which keeps track of a variety of information needed by every node.\n",
        "operationId": "clustermgmt_cluster_getStateByMetrics",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cluster/state/{metrics}/{target}": {
      "description": "The cluster state is an internal data structure which keeps track of a variety of information needed by every node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/metrics"
        },
        {
          "$ref": "#/components/parameters/target"
        },
        {
          "$ref": "#/components/parameters/allow_no_indices_optional"
        },
        {
          "$ref": "#/components/parameters/expand_wildcards_optional"
        },
        {
          "$ref": "#/components/parameters/flat_settings_optional"
        },
        {
          "$ref": "#/components/parameters/ignore_unavailable_optional"
        },
        {
          "$ref": "#/components/parameters/local_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_metadata_version_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns an internal representation of the cluster state for debugging or diagnostic purposes.",
        "description": "The cluster state is an internal data structure which keeps track of a variety of information needed by every node.\n",
        "operationId": "clustermgmt_cluster_getStateByMetricsTarget",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cluster/stats": {
      "description": "The Cluster Stats API allows to retrieve statistics from a cluster wide perspective. The API returns basic index metrics (shard numbers, store size, memory usage) and information about the current nodes that form the cluster (number, roles, os, jvm versions, memory usage, cpu and installed plugins).\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns cluster statistics.",
        "description": "The Cluster Stats API allows to retrieve statistics from a cluster wide perspective. The API returns basic index metrics (shard numbers, store size, memory usage) and information about the current nodes that form the cluster (number, roles, os, jvm versions, memory usage, cpu and installed plugins).\n",
        "operationId": "clustermgmt_cluster_getStats",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cluster/stats/nodes/{node-filter}": {
      "description": "The Cluster Stats API allows to retrieve statistics from a cluster wide perspective. The API returns basic index metrics (shard numbers, store size, memory usage) and information about the current nodes that form the cluster (number, roles, os, jvm versions, memory usage, cpu and installed plugins).\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/node-filter"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Returns cluster statistics.",
        "description": "The Cluster Stats API allows to retrieve statistics from a cluster wide perspective. The API returns basic index metrics (shard numbers, store size, memory usage) and information about the current nodes that form the cluster (number, roles, os, jvm versions, memory usage, cpu and installed plugins).\n",
        "operationId": "clustermgmt_cluster_getStatsByNodeFilter",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/cluster/reroute": {
      "description": "The reroute command allows for manual changes to the allocation of individual shards in the cluster. For example, a shard can be moved from one node to another explicitly, an allocation can be cancelled, and an unassigned shard can be explicitly allocated to a specific node.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/dry_run_optional"
        },
        {
          "$ref": "#/components/parameters/explain_optional"
        },
        {
          "$ref": "#/components/parameters/metric_optional"
        },
        {
          "$ref": "#/components/parameters/retry_failed_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "post": {
        "summary": "Changes the allocation of shards in a cluster.",
        "description": "The reroute command allows for manual changes to the allocation of individual shards in the cluster. For example, a shard can be moved from one node to another explicitly, an allocation can be cancelled, and an unassigned shard can be explicitly allocated to a specific node.\n",
        "operationId": "clustermgmt_cluster_postReroute",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RerouteBody"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/RerouteBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node/pipelines": {
      "description": "Provides pipeline-specific information and settings for each pipeline.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Pipeline-specific information and settings for each pipeline.",
        "description": "Provides pipeline-specific information and settings for each pipeline.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionPipelines",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node/os": {
      "description": "Provides node-level info about the OS.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Node-level info about the OS.",
        "description": "Provides node-level info about the OS.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionOs",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node/jvm": {
      "description": "Provides node-level JVM info, including info about threads.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Node-level JVM info, including info about threads.",
        "description": "Provides node-level JVM info, including info about threads.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionJvm",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node/plugins": {
      "description": "Provides information about all Logstash plugins that are currently installed.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Information about all Logstash plugins that are currently installed.",
        "description": "Provides information about all Logstash plugins that are currently installed.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionPlugins",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node/hot_threads": {
      "description": "Provides information about the the current hot threads for Logstash. It contains a breakdown of the top hot threads.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Information about the the current hot threads for Logstash.",
        "description": "Provides information about the the current hot threads for Logstash. It contains a breakdown of the top hot threads.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionHotThreads",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node/stats/jvm": {
      "description": "Provides JVM stats, including stats about threads, memory usage, garbage collectors, and uptime.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "JVM stats, including stats about threads, memory usage, garbage collectors, and uptime.",
        "description": "Provides JVM stats, including stats about threads, memory usage, garbage collectors, and uptime.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionJvmNodeStats",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node/stats/process": {
      "description": "Provides process stats, including stats about file descriptors, memory consumption, and CPU usage.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Process stats, including stats about file descriptors, memory consumption, and CPU usage.",
        "description": "Provides process stats, including stats about file descriptors, memory consumption, and CPU usage.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionProcessNodeStats",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node/stats/events": {
      "description": "Provides event-related statistics for the Logstash instance regardless of how many pipelines were created and destroyed.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Event-related statistics for the Logstash instance regardless of how many pipelines were created and destroyed.",
        "description": "Provides event-related statistics for the Logstash instance regardless of how many pipelines were created and destroyed.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionEventsNodeStats",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node/stats/flow": {
      "description": "Provides flow-related statistics for the Logstash instance regardless of how many pipelines were created and destroyed.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Flow-related statistics for the Logstash instance regardless of how many pipelines were created and destroyed.",
        "description": "Provides flow-related statistics for the Logstash instance regardless of how many pipelines were created and destroyed.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionFlowNodeStats",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node/stats/pipelines": {
      "description": "Provides runtime stats about each Logstash pipeline.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Runtime stats about each Logstash pipeline.",
        "description": "Provides runtime stats about each Logstash pipeline.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionPipelinesNodeStats",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node/stats/reloads": {
      "description": "Provides runtime stats about config reload successes and failures.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Runtime stats about config reload successes and failures.",
        "description": "Provides runtime stats about config reload successes and failures.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionReloadsNodeStats",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node/stats/os": {
      "description": "Provides runtime stats about cgroups when Logstash is running in a container.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Runtime stats about cgroups when Logstash is running in a container.",
        "description": "Provides runtime stats about cgroups when Logstash is running in a container.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionOsNodeStats",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node/stats/geoip_download_manager": {
      "description": "Provides stats for databases used with the Geoip filter plugin.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Stats for databases used with the Geoip filter plugin.",
        "description": "Provides stats for databases used with the Geoip filter plugin.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionGeoipDownloadManagerNodeStats",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/ingestion/node": {
      "description": "Provides cluster nodes information.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/return_format_optional"
        },
        {
          "$ref": "#/components/parameters/pretty_optional"
        }
      ],
      "get": {
        "summary": "Cluster nodes information.",
        "description": "Provides cluster nodes information.\n",
        "operationId": "clustermgmt_ingestionNode_getIngestionNodeInfo",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtIngestionResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (ingestion)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/remote/info": {
      "description": "The cluster remote info API allows you to retrieve all of the configured remote cluster information. It returns connection and endpoint information keyed by the configured remote cluster alias.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Returns configured remote cluster information.",
        "description": "The cluster remote info API allows you to retrieve all of the configured remote cluster information. It returns connection and endpoint information keyed by the configured remote cluster alias.\n",
        "operationId": "clustermgmt_cluster_getRemoteInfo",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/settings": {
      "description": "Manage opensearch settings.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        }
      ],
      "get": {
        "summary": "Get opensearch settings.",
        "description": "Get opensearch settings.\n",
        "operationId": "clustermgmt_settings_getStorageSettings",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SettingsBodyResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      },
      "put": {
        "summary": "Put opensearch settings.",
        "description": "Put opensearch settings.\n",
        "operationId": "clustermgmt_settings_putStorageSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsBody"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/SettingsBody"
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SettingsBodyResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/recovery": {
      "description": "Returns information about ongoing and completed shard recoveries for one or more indices. For data streams, the API returns information for the stream’s backing indices.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/active_only_optional"
        },
        {
          "$ref": "#/components/parameters/detailed_optional"
        }
      ],
      "get": {
        "summary": "Use the index recovery API to get information about ongoing and completed shard recoveries.",
        "description": "Returns information about ongoing and completed shard recoveries for one or more indices. For data streams, the API returns information for the stream’s backing indices.\n",
        "operationId": "clustermgmt_index_getRecovery",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/{index}/recovery": {
      "description": "Returns information about ongoing and completed shard recoveries for one or more indices. For data streams, the API returns information for the stream’s backing indices.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/index"
        },
        {
          "$ref": "#/components/parameters/active_only_optional"
        },
        {
          "$ref": "#/components/parameters/detailed_optional"
        }
      ],
      "get": {
        "summary": "Use the index recovery API to get information about ongoing and completed shard recoveries.",
        "description": "Returns information about ongoing and completed shard recoveries for one or more indices. For data streams, the API returns information for the stream’s backing indices.\n",
        "operationId": "clustermgmt_index_getRecoveryByIndex",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/snapshot": {
      "parameters": [
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/local_optional"
        },
        {
          "$ref": "#/components/parameters/cluster_manager_timeout_optional"
        }
      ],
      "get": {
        "summary": "Get snapshot repositories.",
        "description": "Gets information about one or more registered snapshot repositories.",
        "operationId": "clustermgmt_snapshot_getRepositories",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/snapshot/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/ignore_unavailable_optional"
        }
      ],
      "get": {
        "summary": "Get snapshot status.",
        "description": "Returns the status of all currently running snapshots in all repositories.",
        "operationId": "clustermgmt_snapshot_getStatus",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/snapshot/{repository}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/repository"
        },
        {
          "$ref": "#/components/parameters/local_optional"
        },
        {
          "$ref": "#/components/parameters/cluster_manager_timeout_optional"
        }
      ],
      "get": {
        "summary": "Get snapshot repository.",
        "description": "Gets information about one or more registered snapshot repositories by name.",
        "operationId": "clustermgmt_snapshot_getRepository",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/snapshot/{repository}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/repository"
        },
        {
          "$ref": "#/components/parameters/ignore_unavailable_optional"
        }
      ],
      "get": {
        "summary": "Get snapshot status by repository.",
        "description": "Returns the status of all currently running snapshots in a repository.",
        "operationId": "clustermgmt_snapshot_getStatusByRepository",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/snapshot/{repository}/{snapshot}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/snapshot"
        },
        {
          "$ref": "#/components/parameters/repository"
        }
      ],
      "get": {
        "summary": "Get snapshot.",
        "description": "Retrieves information about one or more snapshots.",
        "operationId": "clustermgmt_snapshot_getSnapshot",
        "parameters": [
          {
            "$ref": "#/components/parameters/verbose_optional"
          },
          {
            "$ref": "#/components/parameters/ignore_unavailable_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      },
      "delete": {
        "summary": "Delete snapshot.",
        "description": "Deletes one or more snapshots",
        "operationId": "clustermgmt_snapshot_deleteSnapshot",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/snapshot/{repository}/{snapshot}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/snapshot"
        },
        {
          "$ref": "#/components/parameters/repository"
        },
        {
          "$ref": "#/components/parameters/ignore_unavailable_optional"
        }
      ],
      "get": {
        "summary": "Get snapshot status by repository and snapshot.",
        "description": "Returns the status of a snapshot in a repository.",
        "operationId": "clustermgmt_snapshot_getStatusByRepositorySnapshot",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/snapshot/{repository}/verify": {
      "parameters": [
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/repository"
        },
        {
          "$ref": "#/components/parameters/cluster_manager_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        }
      ],
      "post": {
        "summary": "Verify snapshot repository.",
        "description": "Verifies that a snapshot repository is functional.",
        "operationId": "clustermgmt_snapshot_verifyRepository",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/{index}": {
      "description": "Index APIs are used to manage individual indices, index settings, aliases, mappings, and index templates.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/index"
        }
      ],
      "get": {
        "summary": "Returns indices information.",
        "description": "Returns information about one or more indices. For data streams, the API returns information about the stream’s backing indices.\n",
        "operationId": "clustermgmt_index_getIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/allow_no_indices_optional"
          },
          {
            "$ref": "#/components/parameters/expand_wildcards_optional"
          },
          {
            "$ref": "#/components/parameters/features_optional"
          },
          {
            "$ref": "#/components/parameters/flat_settings_optional"
          },
          {
            "$ref": "#/components/parameters/include_defaults_optional"
          },
          {
            "$ref": "#/components/parameters/ignore_unavailable_optional"
          },
          {
            "$ref": "#/components/parameters/local_optional"
          },
          {
            "$ref": "#/components/parameters/master_timeout_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      },
      "delete": {
        "summary": "Deletes one or more indices.",
        "description": "Deleting an index deletes its documents, shards, and metadata.\n",
        "operationId": "clustermgmt_index_deleteIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/allow_no_indices_optional"
          },
          {
            "$ref": "#/components/parameters/expand_wildcards_optional"
          },
          {
            "$ref": "#/components/parameters/force_delete_optional"
          },
          {
            "$ref": "#/components/parameters/ignore_unavailable_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      },
      "put": {
        "summary": "Creates a new index.",
        "description": "You can use the create index API to add a new index to a cluster.\n",
        "operationId": "clustermgmt_index_createIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/master_timeout_optional"
          },
          {
            "$ref": "#/components/parameters/timeout_optional"
          },
          {
            "$ref": "#/components/parameters/wait_for_active_shards_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndexBody"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/IndexBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/{index}/close": {
      "description": "You use the close index API to close open indices.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/index"
        },
        {
          "$ref": "#/components/parameters/allow_no_indices_optional"
        },
        {
          "$ref": "#/components/parameters/expand_wildcards_optional"
        },
        {
          "$ref": "#/components/parameters/ignore_unavailable_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_active_shards_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        }
      ],
      "post": {
        "summary": "Closes an index.",
        "description": "You use the close index API to close open indices.\n",
        "operationId": "clustermgmt_index_closeIndex",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/{index}/open": {
      "description": "You can use the open index API to re-open closed indices. If the request targets a data stream, the request re-opens any of the stream’s closed backing indices.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/index"
        },
        {
          "$ref": "#/components/parameters/allow_no_indices_optional"
        },
        {
          "$ref": "#/components/parameters/expand_wildcards_optional"
        },
        {
          "$ref": "#/components/parameters/ignore_unavailable_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_active_shards_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        }
      ],
      "post": {
        "summary": "Opens a closed index. For data streams, the API opens any closed backing indices.",
        "description": "You can use the open index API to re-open closed indices. If the request targets a data stream, the request re-opens any of the stream’s closed backing indices.\n",
        "operationId": "clustermgmt_index_openIndex",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/{index}/shrink/{target}": {
      "description": "The shrink index API allows you to shrink an existing index into a new index with fewer primary shards. The requested number of primary shards in the target index must be a factor of the number of shards in the source index.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/index"
        },
        {
          "$ref": "#/components/parameters/target"
        },
        {
          "$ref": "#/components/parameters/wait_for_active_shards_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        }
      ],
      "post": {
        "summary": "Shrinks an existing index into a new index with fewer primary shards.",
        "description": "The shrink index API allows you to shrink an existing index into a new index with fewer primary shards. The requested number of primary shards in the target index must be a factor of the number of shards in the source index.\n",
        "operationId": "clustermgmt_index_shrinkIndex",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/{index}/split/{target}": {
      "description": "The split index API allows you to split an existing index into a new index, where each original primary shard is split into two or more primary shards in the new index.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/index"
        },
        {
          "$ref": "#/components/parameters/target"
        },
        {
          "$ref": "#/components/parameters/wait_for_active_shards_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        }
      ],
      "post": {
        "summary": "Splits an existing index into a new index with more primary shards.",
        "description": "The split index API allows you to split an existing index into a new index, where each original primary shard is split into two or more primary shards in the new index.\n",
        "operationId": "clustermgmt_index_splitIndex",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitBody"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/SplitBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/{index}/clone/{target}": {
      "description": "Use the clone index API to clone an existing index into a new index, where each original primary shard is cloned into a new primary shard in the new index.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/index"
        },
        {
          "$ref": "#/components/parameters/target"
        },
        {
          "$ref": "#/components/parameters/wait_for_active_shards_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        }
      ],
      "post": {
        "summary": "Clones an existing index.",
        "description": "Use the clone index API to clone an existing index into a new index, where each original primary shard is cloned into a new primary shard in the new index.\n",
        "operationId": "clustermgmt_index_cloneIndex",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/{index}/rollover": {
      "description": "The rollover API creates a new index for a data stream or index alias.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/index"
        },
        {
          "$ref": "#/components/parameters/dry_run_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_active_shards_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        }
      ],
      "post": {
        "summary": "Creates a new index for a data stream or index alias.",
        "description": "The rollover API creates a new index for a data stream or index alias.\n",
        "operationId": "clustermgmt_index_rolloverIndex",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/{index}/rollover/{target}": {
      "description": "The rollover API creates a new index for a data stream or index alias.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/index"
        },
        {
          "$ref": "#/components/parameters/target"
        },
        {
          "$ref": "#/components/parameters/dry_run_optional"
        },
        {
          "$ref": "#/components/parameters/wait_for_active_shards_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        }
      ],
      "post": {
        "summary": "Creates a new index for a data stream or index alias.",
        "description": "The rollover API creates a new index for a data stream or index alias.\n",
        "operationId": "clustermgmt_index_rolloverToTarget",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/resolve/index/{index-name}": {
      "description": "Resolves the specified name(s) and/or index patterns for indices, aliases and data streams. Multiple patterns and remote clusters are supported.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/index-name"
        },
        {
          "$ref": "#/components/parameters/expand_wildcards_optional"
        }
      ],
      "get": {
        "summary": "Resolve name and index patterns for indices, aliases and data streams",
        "description": "Resolves the specified name(s) and/or index patterns for indices, aliases and data streams. Multiple patterns and remote clusters are supported.\n",
        "operationId": "clustermgmt_index_resolveIndex",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/{index}/flush": {
      "description": "Flushing a data stream or index is the process of making sure that any data that is currently only stored in the transaction log is also permanently stored in the Lucene index.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/index"
        },
        {
          "$ref": "#/components/parameters/allow_no_indices_optional"
        },
        {
          "$ref": "#/components/parameters/expand_wildcards_optional"
        },
        {
          "$ref": "#/components/parameters/force_optional"
        },
        {
          "$ref": "#/components/parameters/ignore_unavailable_optional"
        },
        {
          "$ref": "#/components/parameters/wait_if_ongoing_optional"
        }
      ],
      "get": {
        "summary": "Flushes one or more data streams or indices.",
        "description": "Flushing a data stream or index is the process of making sure that any data that is currently only stored in the transaction log is also permanently stored in the Lucene index.\n",
        "operationId": "clustermgmt_index_getFlushByIndex",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      },
      "post": {
        "summary": "Flushes one or more data streams or indices.",
        "description": "Flushing a data stream or index is the process of making sure that any data that is currently only stored in the transaction log is also permanently stored in the Lucene index.\n",
        "operationId": "clustermgmt_index_postFlushByIndex",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/flush": {
      "description": "Flushing a data stream or index is the process of making sure that any data that is currently only stored in the transaction log is also permanently stored in the Lucene index.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/allow_no_indices_optional"
        },
        {
          "$ref": "#/components/parameters/expand_wildcards_optional"
        },
        {
          "$ref": "#/components/parameters/force_optional"
        },
        {
          "$ref": "#/components/parameters/ignore_unavailable_optional"
        },
        {
          "$ref": "#/components/parameters/wait_if_ongoing_optional"
        }
      ],
      "get": {
        "summary": "Flushes one or more data streams or indices.",
        "description": "Flushing a data stream or index is the process of making sure that any data that is currently only stored in the transaction log is also permanently stored in the Lucene index.\n",
        "operationId": "clustermgmt_index_getFlush",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      },
      "post": {
        "summary": "Flushes one or more data streams or indices.",
        "description": "Flushing a data stream or index is the process of making sure that any data that is currently only stored in the transaction log is also permanently stored in the Lucene index.\n",
        "operationId": "clustermgmt_index_postFlush",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/{target}/alias/{alias}": {
      "description": "Performs an action for one or more aliases.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/target"
        },
        {
          "$ref": "#/components/parameters/alias"
        }
      ],
      "get": {
        "summary": "Retrieves information for one or more aliases.",
        "description": "Retrieves information for one or more aliases.\n",
        "operationId": "clustermgmt_index_getAliasByIndexAlias",
        "parameters": [
          {
            "$ref": "#/components/parameters/allow_no_indices_optional"
          },
          {
            "$ref": "#/components/parameters/expand_wildcards_optional"
          },
          {
            "$ref": "#/components/parameters/ignore_unavailable_optional"
          },
          {
            "$ref": "#/components/parameters/local_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      },
      "put": {
        "summary": "Adds a data stream or index to an alias.",
        "description": "Adds a data stream or index to an alias.\n",
        "operationId": "clustermgmt_index_putAliasByIndexAlias",
        "parameters": [
          {
            "$ref": "#/components/parameters/master_timeout_optional"
          },
          {
            "$ref": "#/components/parameters/timeout_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasBody"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/AliasBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      },
      "post": {
        "summary": "Adds a data stream or index to an alias.",
        "description": "Adds a data stream or index to an alias.\n",
        "operationId": "clustermgmt_index_postAliasByIndexAlias",
        "parameters": [
          {
            "$ref": "#/components/parameters/master_timeout_optional"
          },
          {
            "$ref": "#/components/parameters/timeout_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasBody"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/AliasBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      },
      "delete": {
        "summary": "Removes a data stream or index from an alias.",
        "description": "Removes a data stream or index from an alias.\n",
        "operationId": "clustermgmt_index_deleteAliasByIndexAlias",
        "parameters": [
          {
            "$ref": "#/components/parameters/master_timeout_optional"
          },
          {
            "$ref": "#/components/parameters/timeout_optional"
          }
        ],
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/alias": {
      "description": "Retrieves information for one or more aliases.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/allow_no_indices_optional"
        },
        {
          "$ref": "#/components/parameters/expand_wildcards_optional"
        },
        {
          "$ref": "#/components/parameters/ignore_unavailable_optional"
        },
        {
          "$ref": "#/components/parameters/local_optional"
        }
      ],
      "get": {
        "summary": "Retrieves information for one or more aliases.",
        "description": "Retrieves information for one or more aliases.\n",
        "operationId": "clustermgmt_index_getAlias",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/alias/{alias}": {
      "description": "Retrieves information for one or more aliases.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/alias"
        },
        {
          "$ref": "#/components/parameters/allow_no_indices_optional"
        },
        {
          "$ref": "#/components/parameters/expand_wildcards_optional"
        },
        {
          "$ref": "#/components/parameters/ignore_unavailable_optional"
        },
        {
          "$ref": "#/components/parameters/local_optional"
        }
      ],
      "get": {
        "summary": "Retrieves information for one or more aliases.",
        "description": "Retrieves information for one or more aliases.\n",
        "operationId": "clustermgmt_index_getAliasbyName",
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    },
    "/{analytics-service}/cloud/clustermgmt/storage/aliases": {
      "description": "Performs one or more alias actions in a single atomic operation.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/accept_language_optional"
        },
        {
          "$ref": "#/components/parameters/analytics-service"
        },
        {
          "$ref": "#/components/parameters/master_timeout_optional"
        },
        {
          "$ref": "#/components/parameters/timeout_optional"
        }
      ],
      "post": {
        "summary": "Performs one or more alias actions in a single atomic operation.",
        "description": "Performs one or more alias actions in a single atomic operation.\n",
        "operationId": "clustermgmt_index_postAliases",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AliasesBody"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/AliasesBody"
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "api-analytics:view"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ClusterMgmtObjectResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Analytics",
          "Resource: Clustermgmt (storage)"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "alias": {
        "name": "alias",
        "in": "path",
        "description": "Analytics service name or ID.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "analytics-service": {
        "name": "analytics-service",
        "in": "path",
        "description": "Analytics service name or ID.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "apiref": {
        "name": "apiref",
        "in": "path",
        "description": "API reference (name:version)",
        "required": true,
        "schema": {
          "type": "string",
          "example": "custom_api:1.0.0"
        }
      },
      "catalog": {
        "name": "catalog",
        "in": "path",
        "description": "Catalog name or ID.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "event-id": {
        "name": "event-id",
        "in": "path",
        "description": "Analytics API event ID. This ID is globally unique across the analytics service.\n",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "inactive-consumer-report-type": {
        "name": "inactive-consumer-report-type",
        "in": "path",
        "description": "Type of inactive consumer report to query",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "no_applications",
            "no_subscriptions",
            "no_traffic",
            "no_recent_traffic"
          ]
        }
      },
      "inactive-product-report-type": {
        "name": "inactive-product-report-type",
        "in": "path",
        "description": "Type of inactive product report to query",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "no_subscriptions",
            "no_traffic",
            "no_recent_traffic"
          ]
        }
      },
      "inactivetype": {
        "name": "inactivetype",
        "in": "path",
        "description": "Type of inactive report to query\n",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "consumerorg",
            "product_nosubs",
            "product_nocalls"
          ]
        }
      },
      "index-metric": {
        "name": "index-metric",
        "in": "path",
        "description": "Limit the information returned for indices metric to the specific index metrics.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "index-name": {
        "name": "index-name",
        "in": "path",
        "description": "Comma-separated name(s) or index pattern(s) of the indices, aliases, and data streams to resolve. Resources on remote clusters can be specified using the <cluster>:<name> syntax.\n",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "index": {
        "name": "index",
        "in": "path",
        "description": "Comma-separated list or wildcard expression of index names used to limit the request.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "org": {
        "name": "org",
        "in": "path",
        "description": "Provider organization name or ID.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "planref": {
        "name": "planref",
        "in": "path",
        "description": "Plan reference (productname:version:plan)",
        "required": true,
        "schema": {
          "type": "string",
          "example": "custom_product:1.0.0:default"
        }
      },
      "productref": {
        "name": "productref",
        "in": "path",
        "description": "Product reference (name:version)",
        "required": true,
        "schema": {
          "type": "string",
          "example": "custom_product:1.0.0"
        }
      },
      "app-name": {
        "name": "app-name",
        "in": "path",
        "description": "Filter results by application name.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "custom_app"
        }
      },
      "consumer-org-name": {
        "name": "consumer-org-name",
        "in": "path",
        "description": "Filter results by consumer organization name (filters on the `developer_org_name` data field).",
        "required": true,
        "schema": {
          "type": "string",
          "example": "my_consumer_org"
        }
      },
      "space": {
        "name": "space",
        "in": "path",
        "description": "Space name or ID.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "metric": {
        "name": "metric",
        "in": "path",
        "description": "Limits the information returned to the specific metrics. Supports a comma-separated list, such as http,ingest.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "metrics": {
        "name": "metrics",
        "in": "path",
        "description": "A comma-separated list of metrics",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "node-filter": {
        "name": "node-filter",
        "in": "path",
        "description": "Comma-separated list of node filters used to limit returned information. Defaults to all nodes in the cluster.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "node-id": {
        "name": "node-id",
        "in": "path",
        "description": "Node ID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "node-id-or-metric": {
        "name": "node-id-or-metric",
        "in": "path",
        "description": "Node ID or metric",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "query-id": {
        "name": "query-id",
        "in": "path",
        "description": "Query ID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "repository": {
        "name": "repository",
        "in": "path",
        "description": "Comma-separated list of snapshot repository names.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "snapshot": {
        "name": "snapshot",
        "in": "path",
        "description": "Comma-separated list of snapshot names to retrieve.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "target": {
        "name": "target",
        "in": "path",
        "description": "Comma-separated list of data streams, indices, and aliases used to limit the request. Supports wildcards (*). To target all data streams and indices, omit this parameter or use * or _all.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "active_only_optional": {
        "name": "active_only",
        "in": "query",
        "description": "If true, the response only includes ongoing shard recoveries. Defaults to false.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "allow_no_indices_optional": {
        "name": "allow_no_indices",
        "in": "query",
        "description": "If true, the wildcard indices expression that resolves into no concrete indices will be ignored. (This includes _all string or when no indices have been specified). Defaults to true.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "api_id_optional": {
        "name": "api_id",
        "in": "query",
        "description": "Filter results by API ID.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "dd371dba-035c-476b-acf5-6c81376b2311"
        }
      },
      "api_name_optional": {
        "name": "api_name",
        "in": "query",
        "description": "Filter results by API name.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "custom_api"
        }
      },
      "api_version_optional": {
        "name": "api_version",
        "in": "query",
        "description": "Filter results by API version.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "1.0.0"
        }
      },
      "app_id_optional": {
        "name": "app_id",
        "in": "query",
        "description": "Filter results by application ID.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "4d98ed08-0f11-42ad-a0e5-93093a5bc2d0"
        }
      },
      "app_lifecycle_state_optional": {
        "name": "app_lifecycle_state",
        "in": "query",
        "description": "Filter results by application lifecycle state.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "production"
        }
      },
      "api_resource_id_optional": {
        "name": "api_resource_id",
        "in": "query",
        "description": "Filter results by API resource ID.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "70848db2-5d5f-4df3-87e1-dd63f61f290c"
        }
      },
      "app_name_optional": {
        "name": "app_name",
        "in": "query",
        "description": "Filter results by application name.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "custom_app"
        }
      },
      "bucket_interval_optional": {
        "name": "bucket_interval",
        "in": "query",
        "description": "If set, return events with this specific bucket interval in the dashboard. The value would be in the format of xy, where x is a positive integer and y is the time unit (d, h, m or s). For example '8h', '2d', '5m'.\n",
        "required": false,
        "schema": {
          "type": "string",
          "example": "1d"
        }
      },
      "bytes_optional": {
        "name": "bytes",
        "in": "query",
        "description": "Unit used to display byte values.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "b",
            "kb",
            "mb",
            "gb",
            "tb",
            "pb"
          ]
        }
      },
      "bytes_received_optional": {
        "name": "bytes_received",
        "in": "query",
        "description": "Filter results by the number of bytes received.",
        "required": false,
        "schema": {
          "type": "string",
          "example": 500
        }
      },
      "bytes_sent_optional": {
        "name": "bytes_sent",
        "in": "query",
        "description": "Filter results by the number of bytes sent.",
        "required": false,
        "schema": {
          "type": "string",
          "example": 500
        }
      },
      "catalog_id_optional": {
        "name": "catalog_id",
        "in": "query",
        "description": "Filter results by catalog ID.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "6c592723-b2b7-49dc-b956-14596b6cc8f3"
        }
      },
      "catalog_name_optional": {
        "name": "catalog_name",
        "in": "query",
        "description": "Filter results by catalog name.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "prod"
        }
      },
      "client_id_optional": {
        "name": "client_id",
        "in": "query",
        "description": "Filter results by client ID.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "afd9d43cdc0fec584b42b0c9448d1989"
        }
      },
      "client_ip_optional": {
        "name": "client_ip",
        "in": "query",
        "description": "Filter results by client IP address. Only supports equality checks and `not` but no other operator prefixes. Supports CIDR notation based queries, e.g. `client_ip=9.123.234.0/24`",
        "required": false,
        "schema": {
          "type": "string",
          "example": "9.12.34.56"
        }
      },
      "cluster_manager_timeout_optional": {
        "name": "cluster_manager_timeout",
        "in": "query",
        "description": "Amount of time to wait for a connection to the master node. Optional, defaults to 30 seconds.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "completion_fields_optional": {
        "name": "completion_fields",
        "in": "query",
        "description": "Comma-separated list or wildcard expressions of fields to include in fielddata and suggest statistics.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "consumer_org_id_optional": {
        "name": "consumer_org_id",
        "in": "query",
        "description": "Filter results by consumer organization ID (filters on the `developer_org_id` data field).",
        "required": false,
        "schema": {
          "type": "string",
          "example": "ddcaf2b9-0460-4783-a743-f773dd3c7e64"
        }
      },
      "consumer_org_name_optional": {
        "name": "consumer_org_name",
        "in": "query",
        "description": "Filter results by consumer organization name (filters on the `developer_org_name` data field).",
        "required": false,
        "schema": {
          "type": "string",
          "example": "my_consumer_org"
        }
      },
      "consumer_org_title_optional": {
        "name": "consumer_org_title",
        "in": "query",
        "description": "Filter results by consumer organization title (filters on the `developer_org_title` data field).",
        "required": false,
        "schema": {
          "type": "string",
          "example": "My Consumer Org"
        }
      },
      "custom_data_optional": {
        "name": "custom_data",
        "in": "query",
        "description": "Filter results by a custom data attribute.",
        "required": false,
        "schema": {
          "type": "object"
        },
        "example": {
          "CustomArg": "customValue"
        },
        "style": "deepObject",
        "explode": true
      },
      "daily_limit_optional": {
        "name": "daily_limit",
        "in": "query",
        "description": "If set, the number of items to return when requesting daily consumption data.\n",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "daily_offset_optional": {
        "name": "daily_offset",
        "in": "query",
        "description": "If set, the offset to be applied when requesting daily consumption data.\n",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "detailed_optional": {
        "name": "detailed",
        "in": "query",
        "description": "If true, the response includes detailed information about shard recoveries.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "dry_run_optional": {
        "name": "dry_run",
        "in": "query",
        "description": "If true, then the request simulates the operation only and returns the resulting state.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "end_time_optional": {
        "name": "end",
        "in": "query",
        "description": "If set, only return events with a datetime equal or older than this. The value must follow the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z. See https://datatracker.ietf.org/doc/html/rfc3339#section-5.6.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "endpoint_url_optional": {
        "name": "endpoint_url",
        "in": "query",
        "description": "Filter results by endpoint_url, note this field is only set on failed API events.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "error_limit_optional": {
        "name": "error_limit",
        "in": "query",
        "description": "If set, the number of items to return when requesting errors data.\n",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "error_offset_optional": {
        "name": "error_offset",
        "in": "query",
        "description": "If set, the offset to be applied when requesting errors data.\n",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "event_id_optional": {
        "name": "event_id",
        "in": "query",
        "description": "If set, only return this specific event ID.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "pLjDDYYBeE56v55xyHfQ"
        }
      },
      "event_fields_optional": {
        "name": "fields",
        "in": "query",
        "description": "A list of the event fields that you want included in each event. You can use a comma as a separator when specifying the fields. Use this parameter if you require only a subset of the event fields rather than the full set.\n",
        "required": false,
        "schema": {
          "type": "string",
          "example": "api_version,api_name,api_id"
        }
      },
      "expand_wildcards_optional": {
        "name": "expand_wildcards",
        "in": "query",
        "description": "Type of index that wildcard patterns can match. If the request can target data streams, this argument determines whether wildcard expressions match hidden data streams. Supports comma-separated values, such as open,hidden.\n",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "open",
            "closed",
            "hidden",
            "none"
          ]
        }
      },
      "explain_optional": {
        "name": "explain",
        "in": "query",
        "description": "If true, then the response contains an explanation of why the commands can or cannot be executed.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "fielddata_fields_optional": {
        "name": "fielddata_fields",
        "in": "query",
        "description": "Comma-separated list or wildcard expressions of fields to include in fielddata statistics.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "fields_optional": {
        "name": "fields",
        "in": "query",
        "description": "Comma-separated list or wildcard expressions of fields to include in the statistics.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "force_optional": {
        "name": "force",
        "in": "query",
        "description": "If true, the request forces a flush even if there are no changes to commit to the index. Defaults to true.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "force_delete_optional": {
        "name": "force",
        "in": "query",
        "description": "If true, this request forces a delete even if it is the current write alias target and will prevent the ingestion of new analytics data. Defaults to false.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "include_others_optional": {
        "name": "include_others",
        "in": "query",
        "description": "If true the dashboard top x charts will include a representation of what share of the whole the top x represents.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "provider_org_id_optional": {
        "name": "provider_org_id",
        "in": "query",
        "description": "Filter results by provider organization ID.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "dc299ac1-223d-4f53-94ce-2f264ea32d81"
        }
      },
      "provider_org_name_optional": {
        "name": "provider_org_name",
        "in": "query",
        "description": "Filter results by provider organization name.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "custom_prov_org"
        }
      },
      "return_format_optional": {
        "name": "return_format",
        "in": "query",
        "description": "Short version of the HTTP accept header. Valid values include JSON, YAML, etc.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "features_optional": {
        "name": "features",
        "in": "query",
        "description": "Return information about specific index features. Supports comma- separated values.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "aliases",
            "mappings",
            "settings"
          ]
        }
      },
      "flat_settings_optional": {
        "name": "flat_settings",
        "in": "query",
        "description": "If true, returns settings in flat format.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "full_id_optional": {
        "name": "full_id",
        "in": "query",
        "description": "If true, return the full node ID. If false, return the shortened node ID.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "gateway_ip_optional": {
        "name": "gateway_ip",
        "in": "query",
        "description": "Filter results by gateway IP address. Only supports equality checks and `not` but no other operator prefixes. Supports CIDR notation based queries, e.g. `gateway_ip=9.123.234.0/24`",
        "required": false,
        "schema": {
          "type": "string",
          "example": "9.12.34.56"
        }
      },
      "gateway_service_name_optional": {
        "name": "gateway_service_name",
        "in": "query",
        "description": "Filter results by gateway service name (only included for apigw services).",
        "required": false,
        "schema": {
          "type": "string",
          "example": "gateway-service1"
        }
      },
      "gateway_type_optional": {
        "name": "gateway_type",
        "in": "query",
        "description": "Filter results by gateway type (not included for v5c services).",
        "required": false,
        "schema": {
          "type": "string",
          "example": "apigw/10.5.3.0"
        }
      },
      "global_transaction_id_optional": {
        "name": "global_transaction_id",
        "in": "query",
        "description": "Filter results by global transaction ID.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "65587a5963da90530007ad30"
        }
      },
      "graphql_document_hash_optional": {
        "name": "graphql_document_hash",
        "in": "query",
        "description": "Filter results by graphql document hash value.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "graphql_error_count_optional": {
        "name": "graphql_error_count",
        "in": "query",
        "description": "Filter results by graphql error count value.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "graphql_operation_name_optional": {
        "name": "graphql_operation_name",
        "in": "query",
        "description": "Filter results by graphql operation name value.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "graphql_operation_type_optional": {
        "name": "graphql_operation_type",
        "in": "query",
        "description": "Filter results by graphql operation type value.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "graphql_request_field_cost_optional": {
        "name": "graphql_request_field_cost",
        "in": "query",
        "description": "Filter results by graphql request field cost value.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "graphql_request_type_cost_optional": {
        "name": "graphql_request_type_cost",
        "in": "query",
        "description": "Filter results by graphql request type cost value.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "graphql_response_type_cost_optional": {
        "name": "graphql_response_type_cost",
        "in": "query",
        "description": "Filter results by graphql response type cost value.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "groups_optional": {
        "name": "groups",
        "in": "query",
        "description": "Comma-separated list of search groups to include in the search statistics.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "h_optional": {
        "name": "h",
        "in": "query",
        "description": "Comma-separated list of column names to display.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "health_optional": {
        "name": "health",
        "in": "query",
        "description": "Health status used to limit returned indices.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "green",
            "yellow",
            "red"
          ]
        }
      },
      "help_optional": {
        "name": "help",
        "in": "query",
        "description": "If true, the response includes help information.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "http_user_agent_optional": {
        "name": "http_user_agent",
        "in": "query",
        "description": "Filter results by HTTP user agent.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36"
        }
      },
      "immediate_client_ip_optional": {
        "name": "immediate_client_ip",
        "in": "query",
        "description": "Filter results by immediate client IP address. Only supports equality checks and `not` but no other operator prefixes. Supports CIDR notation based queries, e.g. `immediate_client_ip=9.123.234.0/24`",
        "required": false,
        "schema": {
          "type": "string",
          "example": "9.12.34.56"
        }
      },
      "include_defaults_optional": {
        "name": "include_defaults",
        "in": "query",
        "description": "If true, returns all default cluster settings. Defaults to false.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "include_disk_info_optional": {
        "name": "include_disk_info_optional",
        "in": "query",
        "description": "If true, returns information about disk usage and shard sizes. Defaults to false.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "include_yes_decisions_optional": {
        "name": "include_yes_decisions",
        "in": "query",
        "description": "If true, returns YES decisions in explanation. Defaults to false.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "ignore_idle_threads_optional": {
        "name": "ignore_idle_threads",
        "in": "query",
        "description": "If true, known idle threads (e.g. waiting in a socket select, or to get a task from an empty queue) are filtered out. Defaults to true.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "ignore_unavailable_optional": {
        "name": "ignore_unavailable",
        "in": "query",
        "description": "For operations about indices, if true, unavailable indices (missing or closed) will be ignored. For operations about snapshots, if true, unavailable snapshots (corrupted or otherwise temporarily can’t be returned) will be ignored. Defaults to false.\n",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "include_segment_file_sizes_optional": {
        "name": "include_segment_file_sizes",
        "in": "query",
        "description": "If true, the call reports the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested). Defaults to false.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "include_unloaded_segments_optional": {
        "name": "include_unloaded_segments",
        "in": "query",
        "description": "If true, the response includes information from segments that are not loaded into memory.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "index_optional": {
        "name": "index",
        "in": "query",
        "description": "Comma-separated list or wildcard expression of index names used to limit the request.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "interval_optional": {
        "name": "interval",
        "in": "query",
        "description": "The interval to do the second sampling of threads. Defaults to 500ms.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "500ms"
        }
      },
      "level_optional": {
        "name": "level",
        "in": "query",
        "description": "Indicates whether statistics are aggregated at the cluster, index, or shard level.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "indices",
            "shards",
            "node"
          ]
        }
      },
      "limit_optional": {
        "name": "limit",
        "in": "query",
        "description": "If set, the number of items to return when requesting a list. Maximum: 500",
        "required": false,
        "schema": {
          "type": "string",
          "example": "50"
        }
      },
      "local_optional": {
        "name": "local",
        "in": "query",
        "description": "Whether to get information from the local node.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            true,
            false
          ]
        }
      },
      "log_policy_optional": {
        "name": "log_policy",
        "in": "query",
        "description": "Filter results by log_policy type. Values include: activity, header, payload",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "master_timeout_optional": {
        "name": "master_timeout",
        "in": "query",
        "description": "Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "method_optional": {
        "name": "method",
        "in": "query",
        "description": "Filter results by HTTP method e.g. GET, PUT, POST, DELETE, HEAD, TRACE, OPTIONS.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "GET"
        }
      },
      "metric_optional": {
        "name": "metric",
        "in": "query",
        "description": "Limits the information returned to the specified metrics. Defaults to all but metadata.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "node_names_optional": {
        "name": "node_names",
        "in": "query",
        "description": "A comma-separated list of the names of the nodes.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "node_ids_optional": {
        "name": "node_ids",
        "in": "query",
        "description": "A comma-separated list of the persistent ids of nodes.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "offset_optional": {
        "name": "offset",
        "in": "query",
        "description": "If set, the offset to be applied when requesting a list. e.g. return events starting from the 100th result",
        "required": false,
        "schema": {
          "type": "string",
          "example": "100"
        }
      },
      "opentracing_info_optional": {
        "name": "opentracing_info",
        "in": "query",
        "description": "If set, the value for a given key must match in the opentracing_info array.",
        "required": false,
        "schema": {
          "type": "object",
          "properties": {
            "span_id": {
              "type": "string"
            },
            "trace_id": {
              "type": "string"
            }
          }
        },
        "example": {
          "span_id": "400e90d0-b5ea-4ab4-81f0-d336958b97c8",
          "trace_id": "7fa28820-ac69-4f87-8678-b5868f5601bd"
        },
        "style": "deepObject",
        "explode": true
      },
      "path_optional": {
        "name": "path",
        "in": "query",
        "description": "If set, only return events that contain this path value.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "/path/to/something"
        }
      },
      "path_id_optional": {
        "name": "path_id",
        "in": "query",
        "description": "Filter results by path_id",
        "required": false,
        "schema": {
          "type": "string",
          "example": "default:1.0.0:GET:/apath"
        }
      },
      "plan_id_optional": {
        "name": "plan_id",
        "in": "query",
        "description": "Filter results by plan ID",
        "required": false,
        "schema": {
          "type": "string",
          "example": "surfing-products:1.0.0:default"
        }
      },
      "plan_name_optional": {
        "name": "plan_name",
        "in": "query",
        "description": "Filter results by plan name",
        "required": false,
        "schema": {
          "type": "string",
          "example": "default_plan"
        }
      },
      "plan_version_optional": {
        "name": "plan_version",
        "in": "query",
        "description": "Filter results by plan version",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2.0.0"
        }
      },
      "pretty_optional": {
        "name": "pretty",
        "in": "query",
        "description": "Prettify response",
        "required": false,
        "schema": {
          "type": "boolean",
          "nullable": true
        }
      },
      "pri_optional": {
        "name": "pri",
        "in": "query",
        "description": "If true, the response only includes information from primary shards.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "product_id_optional": {
        "name": "product_id",
        "in": "query",
        "description": "Filter results by product ID.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "d3fcc626-bf11-4318-8045-8d8502608c88"
        }
      },
      "product_name_optional": {
        "name": "product_name",
        "in": "query",
        "description": "Filter results by product name.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "custom_product"
        }
      },
      "product_title_optional": {
        "name": "product_title",
        "in": "query",
        "description": "Filter results by product title.",
        "schema": {
          "type": "string",
          "example": "Custom Product"
        }
      },
      "product_version_optional": {
        "name": "product_version",
        "in": "query",
        "description": "Filter results by product version.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2.0.0"
        }
      },
      "query_string_optional": {
        "name": "query_string",
        "in": "query",
        "description": "Filter results by query_string.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "name=john&client_id=cd16fbb0001f11c73cf6c00bd0b3b70d"
        }
      },
      "search_optional": {
        "name": "search",
        "in": "query",
        "description": "Filter results by search string",
        "required": false,
        "schema": {
          "type": "string",
          "example": "dev-product-1"
        }
      },
      "space_id_optional": {
        "name": "space_id",
        "in": "query",
        "description": "Filter results by space ID.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "c3ac3e87-fe39-4866-9ea4-01517d6e90cd"
        }
      },
      "space_name_optional": {
        "name": "space_name",
        "in": "query",
        "description": "Filter results by space name.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "space1"
        }
      },
      "regenerate_optional": {
        "name": "regenerate",
        "in": "query",
        "description": "If true, then forces the regeneration of an analytics report.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "report_end_date_optional": {
        "name": "end",
        "in": "query",
        "description": "If set, only return events with a datetime equal or older than this. The date-time value must be such that the time component represents midnight. for example, 2021-07-21T00:00:000Z.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "report_timeframe_optional": {
        "name": "timeframe",
        "in": "query",
        "description": "If set, only return events within the indicated timeframe. Timeframe values are in the format of 'last<value><unit>' where <value> is a positive integer greater than one, and <unit> can be one of day, month, quarter or year.\n",
        "required": false,
        "schema": {
          "type": "string",
          "example": "last2year"
        }
      },
      "report_start_date_optional": {
        "name": "start",
        "in": "query",
        "description": "If set, only return events with a date equal to or newer than this. The date-time value must be such that the time component represents midnight. for example, 2021-07-21T00:00:000Z.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "request_body_optional": {
        "name": "request_body",
        "in": "query",
        "description": "Filter results by request body.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "{\"app_name\":\"Weather app\"}"
        }
      },
      "request_http_headers_optional": {
        "name": "request_http_headers",
        "in": "query",
        "description": "If set, the value for a given key must match in the request_http_headers array.",
        "required": false,
        "schema": {
          "type": "object"
        },
        "example": {
          "Accept": "application/json",
          "Host": "example.ibm.com"
        },
        "style": "deepObject",
        "explode": true
      },
      "resource_id_optional": {
        "name": "resource_id",
        "in": "query",
        "description": "Filter results by resource ID.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "70848db2-5d5f-4df3-87e1-dd63f61f290c"
        }
      },
      "response_body_optional": {
        "name": "response_body",
        "in": "query",
        "description": "Filter results by response body.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "{\"message\":\"success\"}"
        }
      },
      "response_http_headers_optional": {
        "name": "response_http_headers",
        "in": "query",
        "description": "If set, the value for a given key must match in the response_http_headers array.",
        "required": false,
        "schema": {
          "type": "object"
        },
        "example": {
          "Content-Type": "application/json",
          "Access-Control-Allow-Origin": "example.ibm.com"
        },
        "style": "deepObject",
        "explode": true
      },
      "retry_failed_optional": {
        "name": "retry_failed",
        "in": "query",
        "description": "If true, then it retries allocation of shards that are blocked due to too many subsequent allocation failures.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "s_optional": {
        "name": "s",
        "in": "query",
        "description": "Comma-separated list of column names or column aliases used to sort the response.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "saved_query_search_optional": {
        "name": "search",
        "in": "query",
        "description": "Search for a saved query by either title, description or query_string.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "snapshots_optional": {
        "name": "snapshots",
        "in": "query",
        "description": "Number of samples of thread stacktrace. Defaults to 10.",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "status_code_optional": {
        "name": "status_code",
        "in": "query",
        "description": "If set, only return events that match this response code e.g. 200 OK, 404 Not Found. It is also possible to use wildcard based values 10x, 20x, 30x, 40x, 50x.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "404 Not Found"
        }
      },
      "start_time_optional": {
        "name": "start",
        "in": "query",
        "description": "If set, only return events with a datetime equal to or newer than this. The value must follow the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z. See https://datatracker.ietf.org/doc/html/rfc3339#section-5.6.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "threads_optional": {
        "name": "threads",
        "in": "query",
        "description": "Specifies the number of hot threads to provide information for. Defaults to 3.",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "time_optional": {
        "name": "time",
        "in": "query",
        "description": "Unit used to display time values.",
        "schema": {
          "type": "string"
        }
      },
      "time_to_serve_request_optional": {
        "name": "time_to_serve_request",
        "in": "query",
        "description": "The time in milliseconds to serve the request.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "143"
        }
      },
      "timeout_optional": {
        "name": "timeout",
        "in": "query",
        "description": "Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "timeframe_optional": {
        "name": "timeframe",
        "in": "query",
        "description": "If set, only return events within the indicated timeframe. This parameter will be ignored if either start or end have been specified.\n",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "last1minute",
            "last5minutes",
            "last15minutes",
            "last30minutes",
            "last1hour",
            "last4hours",
            "last12hours",
            "last24hours",
            "last7days",
            "last30days"
          ]
        }
      },
      "transaction_id_optional": {
        "name": "transaction_id",
        "in": "query",
        "description": "Filter by transaction ID from the gateway.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "167472"
        }
      },
      "type_optional": {
        "name": "type",
        "in": "query",
        "description": "The type to sample. Defaults to cpu.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "block",
            "cpu",
            "wait"
          ]
        }
      },
      "types_optional": {
        "name": "types",
        "in": "query",
        "description": "A comma-separated list of document types for the indexing index metric.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "v_columns_optional": {
        "name": "v_columns",
        "in": "query",
        "description": "If true, the response includes column headings.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "verbose_optional": {
        "name": "verbose",
        "in": "query",
        "description": "Whether to show all, or just basic snapshot information. If true, returns all information. If false, omits information like start/end times, failures, and shards. Optional, defaults to true.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "voting_timeout_optional": {
        "name": "timeout",
        "in": "query",
        "description": "Time to wait for the specified nodes to be excluded from the voting configuration before returning. Defaults to 30s.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "wait_for_active_shards_optional": {
        "name": "wait_for_active_shards",
        "in": "query",
        "description": "A number controlling to how many active shards to wait for, all to wait for all shards in the cluster to be active, or 0 to not wait. Defaults to 0.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "wait_for_events_optional": {
        "name": "wait_for_events",
        "in": "query",
        "description": "Wait until all currently queued events with the given priority are processed.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "immediate",
            "urgent",
            "high",
            "normal",
            "low",
            "languid"
          ]
        }
      },
      "wait_for_metadata_version_optional": {
        "name": "wait_for_metadata_version",
        "in": "query",
        "description": "Waits for the metadata version to be equal or greater than the specified metadata version.",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "wait_for_no_initializing_shards_optional": {
        "name": "wait_for_no_initializing_shards",
        "in": "query",
        "description": "boolean value which controls whether to wait (until the timeout provided) for the cluster to have no shard initializations. Defaults to false, which means it will not wait for initializing shards.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "wait_for_no_relocating_shards_optional": {
        "name": "wait_for_no_relocating_shards",
        "in": "query",
        "description": "A boolean value which controls whether to wait (until the timeout provided) for the cluster to have no shard relocations. Defaults to false, which means it will not wait for relocating shards.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "wait_for_removal_optional": {
        "name": "wait_for_removal",
        "in": "query",
        "description": "Specifies whether to wait for all excluded nodes to be removed from the cluster before clearing the voting configuration exclusions list. Defaults to true.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "wait_for_nodes_optional": {
        "name": "wait_for_nodes",
        "in": "query",
        "description": "The request waits until the specified number N of nodes is available. It also accepts >=N, <=N, >N and <N. Alternatively, it is possible to use ge(N), le(N), gt(N) and lt(N) notation.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "wait_for_status_optional": {
        "name": "wait_for_status",
        "in": "query",
        "description": "Will wait (until the timeout provided) until the status of the cluster changes to the one provided or better, i.e. green > yellow > red. By default, will not wait for any status.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "green",
            "yellow",
            "red"
          ]
        }
      },
      "wait_for_timeout_optional": {
        "name": "wait_for_timeout",
        "in": "query",
        "description": "Specifies the maximum time to wait for wait_for_metadata_version before timing out.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "wait_if_ongoing_optional": {
        "name": "wait_if_ongoing",
        "in": "query",
        "description": "If true, the flush operation blocks until execution when another flush operation is running",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "accept_language_optional": {
        "name": "accept-language",
        "in": "header",
        "description": "Natural language and locale that the client prefers.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "en"
        }
      }
    },
    "schemas": {
      "AliasBody": {
        "type": "object",
        "description": "OpenSearch alias",
        "additionalProperties": true
      },
      "AliasesBody": {
        "type": "object",
        "description": "OpenSearch aliases request body",
        "properties": {
          "action": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ApiDashboardResponse": {
        "type": "object",
        "description": "Data to display on the API Dashboard.",
        "properties": {
          "search_time": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "status_codes": {
            "$ref": "#/components/schemas/GroupValueDataList"
          },
          "min_response_time": {
            "$ref": "#/components/schemas/DataItem"
          },
          "avg_response_time": {
            "$ref": "#/components/schemas/DataItem"
          },
          "max_response_time": {
            "$ref": "#/components/schemas/DataItem"
          },
          "total_api_calls": {
            "$ref": "#/components/schemas/DataItem"
          },
          "total_errors": {
            "$ref": "#/components/schemas/DataItem"
          },
          "errors": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "response_times": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "api_calls_per_day": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "top_apis_over_time": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "top_apps_over_time": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "top_corgs_over_time": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "api_calls_per_day_per_hour": {
            "$ref": "#/components/schemas/DateHourValueData"
          }
        }
      },
      "ApiUsageReportResponse": {
        "type": "object",
        "description": "Data to display on the API usage report.",
        "properties": {
          "org_name": {
            "type": "string"
          },
          "catalog_name": {
            "type": "string"
          },
          "space_name": {
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "trends": {
            "$ref": "#/components/schemas/ProviderReportTrends"
          },
          "api_call_volume": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "bytes_received": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "bytes_sent": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "total_apis": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "total_products": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "breakdown": {
            "$ref": "#/components/schemas/BreakDownData"
          },
          "response_times": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          }
        }
      },
      "BreakDownData": {
        "type": "object",
        "description": "Data to display the breakdown of API calls per catalog/org",
        "properties": {
          "total_api_calls": {
            "$ref": "#/components/schemas/GroupValueDataList"
          },
          "errors": {
            "$ref": "#/components/schemas/GroupValueDataList"
          },
          "successes": {
            "$ref": "#/components/schemas/GroupValueDataList"
          },
          "bytes_received": {
            "$ref": "#/components/schemas/GroupValueDataList"
          },
          "bytes_sent": {
            "$ref": "#/components/schemas/GroupValueDataList"
          }
        }
      },
      "CustomDataItem": {
        "type": "object",
        "description": "An optional object containing custom_data information if in use.",
        "additionalProperties": true
      },
      "ClusterMgmtCatResponse": {
        "type": "object",
        "description": "ClusterMgmt array response content",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      },
      "ClusterMgmtIngestionResponse": {
        "type": "object",
        "description": "ClusterMgmt ingestion response content",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ClusterMgmtTextResponse": {
        "type": "string",
        "description": "ClusterMgmt text/plain response content",
        "example": "6 1.1mb 47.9gb 201.9gb 249.8gb 19 192.168.62.17 192.168.62.17 os-node"
      },
      "ClusterMgmtObjectResponse": {
        "type": "object",
        "description": "ClusterMgmt object response content",
        "additionalProperties": true
      },
      "ClusterName": {
        "type": "string",
        "description": "Number of the cluster"
      },
      "ConsumptionDashboardResponse": {
        "type": "object",
        "description": "Data to display on the Consumption Dashboard.",
        "properties": {
          "monthly_summary": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          },
          "monthly_data": {
            "$ref": "#/components/schemas/ConsumptionDataList"
          },
          "daily_summary": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          },
          "daily_data": {
            "$ref": "#/components/schemas/ConsumptionDataList"
          }
        }
      },
      "ConsumptionDataList": {
        "type": "object",
        "description": "A list of data points on API usage by response code over time",
        "properties": {
          "total": {
            "type": "number"
          },
          "filter": {
            "description": "The query filter string used for this search",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ConsumptionDataItemList"
          }
        }
      },
      "ConsumptionDataItem": {
        "type": "object",
        "description": "An individual data point of API usage by response code",
        "additionalProperties": true,
        "properties": {
          "id": {
            "type": "string"
          },
          "total": {
            "type": "number"
          },
          "other": {
            "type": "number"
          }
        }
      },
      "ConsumptionDataItemList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ConsumptionDataItem"
        }
      },
      "DataItem": {
        "type": "object",
        "properties": {
          "data": {
            "type": "number"
          }
        }
      },
      "DateHourValueData": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                },
                "hour": {
                  "type": "string"
                },
                "value": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "description": "Generic error response.",
        "additionalProperties": true,
        "properties": {
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "message": {
            "$ref": "#/components/schemas/Message"
          },
          "errors": {
            "$ref": "#/components/schemas/ErrorModels"
          }
        }
      },
      "ErrorModels": {
        "type": "array",
        "description": "Array of more detailed error information.",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "A snake case string succinctly identifying the problem."
            },
            "message": {
              "type": "string",
              "description": "A plainly-written, developer-oriented explanation of the solution to the problem in complete, well-formed sentences."
            },
            "more_info": {
              "type": "string",
              "description": "A publicly-accessible URL where information about the error can be read."
            },
            "target": {
              "$ref": "#/components/schemas/ErrorTargetModel"
            }
          }
        }
      },
      "ErrorTargetModel": {
        "type": "object",
        "description": "Contains information about specific error targets.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Either field, parameter, or header."
          },
          "name": {
            "type": "string",
            "description": "The name of the problematic field (with dot-syntax if necessary), query parameter, or header."
          }
        }
      },
      "Event": {
        "type": "object",
        "description": "API event.",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "event": {
            "$ref": "#/components/schemas/EventBody"
          }
        }
      },
      "EventBody": {
        "type": "object",
        "description": "The API Event logged by the gateway",
        "additionalProperties": true,
        "properties": {
          "api_version": {
            "type": "string",
            "description": "The version of the API"
          },
          "api_name": {
            "type": "string",
            "description": "The name of the API"
          },
          "api_id": {
            "type": "string",
            "description": "The ID of the API"
          },
          "api_resource_id": {
            "type": "string",
            "description": "The API resource ID"
          },
          "app_lifecycle_state": {
            "type": "string",
            "description": "The lifecycle state of the calling application"
          },
          "billing": {
            "type": "object",
            "description": "Billing information if monetization is being used",
            "properties": {
              "trial_period_days": {
                "description": "The number of trial days",
                "type": "number"
              },
              "currency": {
                "type": "string",
                "description": "The billing currency",
                "example": "USD"
              },
              "model": {
                "type": "string",
                "description": "The billing model in use",
                "example": "free"
              },
              "amount": {
                "description": "The billing price",
                "type": "number"
              },
              "provider": {
                "type": "string",
                "description": "The billing provider URL",
                "example": "none"
              }
            }
          },
          "bytes_received": {
            "type": "number",
            "description": "The number of bytes received by the gateway"
          },
          "bytes_sent": {
            "type": "number",
            "description": "The number of bytes sent by the gateway"
          },
          "catalog_id": {
            "type": "string",
            "description": "The catalog ID"
          },
          "catalog_name": {
            "type": "string",
            "description": "The catalog name"
          },
          "client_id": {
            "type": "string",
            "description": "The application client ID used"
          },
          "client_ip": {
            "type": "string",
            "description": "The consumer IP address"
          },
          "client_geoip": {
            "type": "object",
            "description": "The geographical data for the client IP address if GeoIP filtering is enabled in ingestion",
            "properties": {
              "country_name": {
                "type": "string",
                "description": "The consumer country name",
                "example": "United States"
              },
              "continent_code": {
                "type": "string",
                "description": "The consumer continent code",
                "example": "NA"
              },
              "location": {
                "type": "object",
                "description": "The geographical data for the client IP address",
                "properties": {
                  "lat": {
                    "type": "string",
                    "description": "The consumer latitude coordinate"
                  },
                  "long": {
                    "type": "string",
                    "description": "The consumer longitude coordinate"
                  }
                }
              },
              "timezone": {
                "type": "string",
                "description": "The consumer timezone",
                "example": "America/New York"
              },
              "country_code3": {
                "type": "string",
                "description": "A three letter code representing the consumer country",
                "example": "US"
              },
              "latitude": {
                "type": "string",
                "description": "The consumer latitude coordinate"
              },
              "country_code2": {
                "type": "string",
                "description": "A two letter code representing the consumer country",
                "example": "US"
              },
              "longitude": {
                "type": "string",
                "description": "The consumer longitude coordinate"
              },
              "ip": {
                "type": "string",
                "description": "The consumer IP address"
              }
            }
          },
          "custom_data": {
            "type": "array",
            "description": "Optional custom_data information",
            "items": {
              "$ref": "#/components/schemas/CustomDataItem"
            }
          },
          "datetime": {
            "type": "string",
            "format": "date-time",
            "description": "The date time of the API event from the gateway"
          },
          "developer_org_id": {
            "type": "string",
            "description": "The consumer organization ID"
          },
          "developer_org_name": {
            "type": "string",
            "description": "The consumer organization name"
          },
          "developer_org_title": {
            "type": "string",
            "description": "The consumer organization title"
          },
          "domain_name": {
            "type": "string",
            "example": "apiconnect",
            "description": "The gateway domain name"
          },
          "endpoint_url": {
            "type": "string"
          },
          "gateway_ip": {
            "type": "string",
            "description": "The IP address of the gateway"
          },
          "gateway_geoip": {
            "type": "object",
            "description": "The geographical data for the gateway IP address if GeoIP filtering is enabled in ingestion",
            "properties": {
              "country_name": {
                "type": "string",
                "description": "The gateway country name",
                "example": "United States"
              },
              "continent_code": {
                "type": "string",
                "description": "The gateway continent code",
                "example": "NA"
              },
              "location": {
                "type": "object",
                "description": "The geographical data for the gateway IP address",
                "properties": {
                  "lat": {
                    "type": "string",
                    "description": "The gateway latitude coordinate"
                  },
                  "long": {
                    "type": "string",
                    "description": "The gateway longitude coordinate"
                  }
                }
              },
              "timezone": {
                "type": "string",
                "description": "The gateway timezone",
                "example": "America/New York"
              },
              "country_code3": {
                "type": "string",
                "description": "A three letter code representing the gateway country",
                "example": "US"
              },
              "latitude": {
                "type": "string",
                "description": "The gateway latitude coordinate"
              },
              "country_code2": {
                "type": "string",
                "description": "A two letter code representing the gateway country",
                "example": "US"
              },
              "longitude": {
                "type": "string",
                "description": "The gateway longitude coordinate"
              },
              "ip": {
                "type": "string",
                "description": "The gateway IP address"
              }
            }
          },
          "gateway_service_name": {
            "type": "string",
            "description": "The service name of the gateway (apigw only)"
          },
          "global_transaction_id": {
            "type": "string",
            "description": "The transaction ID from the gateway"
          },
          "headers": {
            "type": "object",
            "description": "Internal headers array from ingestion"
          },
          "host": {
            "type": "string",
            "description": "The ingestion host IP address"
          },
          "http_user_agent": {
            "type": "string",
            "description": "The caller user agent string",
            "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36"
          },
          "immediate_client_ip": {
            "type": "string"
          },
          "latency_info": {
            "type": "array",
            "description": "Latency information for the assembly policies",
            "items": {
              "$ref": "#/components/schemas/LatencyInfoItem"
            }
          },
          "log_policy": {
            "type": "string",
            "description": "The log policy used"
          },
          "opentracing_info": {
            "type": "array",
            "description": "Optional opentracing information",
            "items": {
              "$ref": "#/components/schemas/OpentracingInfoItem"
            }
          },
          "org_name": {
            "type": "string",
            "description": "The provider organization name"
          },
          "org_id": {
            "type": "string",
            "description": "The provider organization ID"
          },
          "plan_id": {
            "type": "string",
            "description": "The plan ID"
          },
          "plan_name": {
            "type": "string",
            "description": "The plan name"
          },
          "product_version": {
            "type": "string",
            "description": "The product version"
          },
          "product_name": {
            "type": "string",
            "description": "The product name"
          },
          "product_id": {
            "type": "string",
            "description": "The product ID"
          },
          "product_title": {
            "type": "string",
            "description": "The product title"
          },
          "query_string": {
            "type": "string",
            "description": "Any provided query parameters"
          },
          "request_body": {
            "type": "string",
            "description": "The request body payload"
          },
          "request_http_headers": {
            "type": "array",
            "description": "The request headers",
            "items": {
              "$ref": "#/components/schemas/HeaderItem"
            }
          },
          "request_method": {
            "type": "string",
            "description": "The request HTTP method"
          },
          "request_protocol": {
            "type": "string",
            "description": "The request protocol"
          },
          "resource_id": {
            "type": "string",
            "description": "The resource ID"
          },
          "resource_path": {
            "type": "string",
            "description": "The resource path"
          },
          "response_body": {
            "type": "string",
            "description": "The response body payload"
          },
          "response_http_headers": {
            "type": "array",
            "description": "The response headers",
            "items": {
              "$ref": "#/components/schemas/HeaderItem"
            }
          },
          "space_id": {
            "type": "string",
            "description": "The space ID (not present for non-space APIs)"
          },
          "space_name": {
            "type": "string",
            "description": "The space name (not present for non-space APIs)"
          },
          "status_code": {
            "type": "string",
            "description": "The HTTP response status code",
            "example": "200 OK"
          },
          "tags": {
            "type": "array",
            "description": "Internal tags on the API event",
            "items": {
              "type": "string",
              "example": "apicapievent"
            }
          },
          "time_to_serve_request": {
            "type": "number",
            "description": "The time taken to serve the request"
          },
          "transaction_id": {
            "type": "string",
            "description": "The internal transaction ID"
          },
          "uri_path": {
            "type": "string",
            "description": "The URI path"
          }
        },
        "required": [
          "datetime",
          "event_id"
        ]
      },
      "EventCountResponse": {
        "type": "object",
        "description": "Number of matching events at the requested scope.",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          }
        }
      },
      "EventList": {
        "type": "array",
        "description": "Array of API events.",
        "items": {
          "$ref": "#/components/schemas/Event"
        }
      },
      "EventListResponse": {
        "type": "object",
        "description": "API event list response.",
        "required": [
          "total",
          "search_time",
          "events"
        ],
        "properties": {
          "total": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "search_time": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "offset": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "limit": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "first": {
            "$ref": "#/components/schemas/PaginationLink"
          },
          "next": {
            "$ref": "#/components/schemas/PaginationLink"
          },
          "previous": {
            "$ref": "#/components/schemas/PaginationLink"
          },
          "last": {
            "$ref": "#/components/schemas/PaginationLink"
          },
          "events": {
            "$ref": "#/components/schemas/EventList"
          }
        }
      },
      "EventResponse": {
        "type": "object",
        "description": "API event response.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          }
        ]
      },
      "DiscoverTimelineResponse": {
        "type": "object",
        "description": "Discover timeline response.",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "search_time": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "api_calls_in_timeframe": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          }
        }
      },
      "FilterParam": {
        "type": "object",
        "description": "Filter parameter.",
        "properties": {
          "name": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "operators": {
            "$ref": "#/components/schemas/OperatorList"
          }
        }
      },
      "FilterParamList": {
        "type": "array",
        "description": "Array of filter params.",
        "items": {
          "$ref": "#/components/schemas/FilterParam"
        }
      },
      "FilterParamListResponse": {
        "type": "object",
        "description": "Parameter list response.",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/FilterParamList"
          }
        }
      },
      "FunnelReport": {
        "type": "object",
        "description": "Part of the funnel report response",
        "properties": {
          "count": {
            "type": "number",
            "example": 10
          },
          "percent": {
            "type": "number",
            "example": 1
          }
        }
      },
      "GatewayDashboardResponse": {
        "type": "object",
        "description": "Data to display on the GATEWAY Dashboard.",
        "properties": {
          "search_time": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "total": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GatewayObject"
            }
          }
        }
      },
      "GatewayObject": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Gateway IP"
          },
          "gateway_service_name": {
            "type": "string",
            "description": "Gateway service name"
          },
          "usage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupDateValueItem"
            }
          },
          "latency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupDateValueItem"
            }
          }
        }
      },
      "GroupDateValueItem": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "GroupDateValueItemData": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GroupDateValueItemList"
          }
        }
      },
      "GroupDateValueItemList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GroupDateValueItem"
        }
      },
      "GroupValueDataList": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/components/schemas/GroupValueItemList"
          }
        }
      },
      "GroupValueItem": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string"
          },
          "value": {
            "type": "integer"
          }
        }
      },
      "GroupValueItemList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GroupValueItem"
        }
      },
      "GroupKeyValueItem": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "GroupKeyValueDataList": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "data": {
            "$ref": "#/components/schemas/GroupKeyValueItemList"
          }
        }
      },
      "GroupKeyValueItemList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GroupKeyValueItem"
        }
      },
      "HeaderItem": {
        "type": "object",
        "description": "An HTTP header",
        "additionalProperties": true
      },
      "Id": {
        "type": "string",
        "description": "Event ID.",
        "minLength": 1,
        "maxLength": 1000
      },
      "IndexBody": {
        "type": "object",
        "properties": {
          "aliases": {
            "type": "object",
            "additionalProperties": true
          },
          "mappings": {
            "type": "object",
            "additionalProperties": true
          },
          "settings": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "LatencyDashboardResponse": {
        "type": "object",
        "description": "Data to display on the LATENCY Dashboard.",
        "properties": {
          "search_time": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "min_response_time": {
            "$ref": "#/components/schemas/DataItem"
          },
          "avg_response_time": {
            "$ref": "#/components/schemas/DataItem"
          },
          "max_response_time": {
            "$ref": "#/components/schemas/DataItem"
          },
          "total_api_calls": {
            "$ref": "#/components/schemas/DataItem"
          },
          "top_apis_by_response_time": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          },
          "response_times": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "data_usage_received": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "data_usage_sent": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          }
        }
      },
      "LatencyInfoItem": {
        "type": "object",
        "description": "An object representing the latency information for an API assembly policy",
        "properties": {
          "started": {
            "type": "string",
            "description": "The time the policy started"
          },
          "task": {
            "type": "string",
            "description": "The type of policy"
          },
          "name": {
            "type": "string",
            "description": "The name of the policy (optional)"
          },
          "title": {
            "type": "string",
            "description": "The title of the policy (optional)"
          }
        }
      },
      "Leaderboard": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "api",
              "product",
              "plan"
            ]
          },
          "top_data": {
            "$ref": "#/components/schemas/RankedData"
          },
          "bottom_data": {
            "$ref": "#/components/schemas/RankedData"
          }
        }
      },
      "LeaderboardReportResponse": {
        "type": "object",
        "description": "Leaderboard for the API Usage dashboard",
        "properties": {
          "org_name": {
            "type": "string"
          },
          "catalog_name": {
            "type": "string"
          },
          "space_name": {
            "type": "string"
          },
          "catalogs": {
            "description": "Semicolon separated list of org/catalog names",
            "example": "custom-org/custom-cat;other-org/other-cat",
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "leaderboard": {
            "$ref": "#/components/schemas/Leaderboard"
          }
        }
      },
      "ProviderLeaderboardDetailReportResponse": {
        "type": "object",
        "description": "Leaderboard for the API Usage dashboard",
        "properties": {
          "org_name": {
            "type": "string"
          },
          "catalog_name": {
            "type": "string"
          },
          "space_name": {
            "type": "string"
          },
          "catalogs": {
            "description": "Semicolon separated list of org/catalog names",
            "example": "custom-org/custom-cat;other-org/other-cat",
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": [
              "api",
              "product",
              "plan"
            ]
          },
          "ref": {
            "type": "string",
            "example": "customapi:1.0.0"
          },
          "trends": {
            "$ref": "#/components/schemas/ProviderReportTrends"
          },
          "api_call_volume": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "breakdown": {
            "$ref": "#/components/schemas/BreakDownData"
          },
          "response_times": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "corg_leaderboard": {
            "$ref": "#/components/schemas/LeaderboardRanked"
          },
          "application_leaderboard": {
            "$ref": "#/components/schemas/LeaderboardRanked"
          }
        }
      },
      "Message": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Detailed error message.",
        "example": "Invalid request payload JSON format."
      },
      "NodesResponse": {
        "type": "string",
        "description": "Data returned from /_nodes query."
      },
      "NodeBody": {
        "type": "object",
        "description": "Opensearch node object",
        "additionalProperties": true
      },
      "NonNegativeInteger": {
        "type": "integer",
        "description": "Integer greater than or equal to zero.",
        "minimum": 0
      },
      "OpentracingInfoItem": {
        "type": "object",
        "description": "An optional object containing opentracing information if in use.",
        "additionalProperties": true,
        "properties": {
          "span_id": {
            "type": "string",
            "description": "The opentracing span ID"
          },
          "trace_id": {
            "type": "string",
            "description": "The opentracing trace ID"
          }
        }
      },
      "Operator": {
        "type": "object",
        "description": "Operator object",
        "properties": {
          "text": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          }
        }
      },
      "OperatorList": {
        "type": "array",
        "description": "Array of available operators",
        "items": {
          "$ref": "#/components/schemas/Operator"
        }
      },
      "PaginationLink": {
        "type": "object",
        "description": "Pagination link used in list responses.",
        "properties": {
          "href": {
            "type": "string"
          }
        }
      },
      "ProductDashboardResponse": {
        "type": "object",
        "description": "Data to display on the PRODUCT Dashboard.",
        "properties": {
          "search_time": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "apps_per_plan": {
            "$ref": "#/components/schemas/GroupValueDataList"
          },
          "total_api_calls": {
            "$ref": "#/components/schemas/DataItem"
          },
          "total_apis": {
            "$ref": "#/components/schemas/DataItem"
          },
          "total_products": {
            "$ref": "#/components/schemas/DataItem"
          },
          "total_consumer_orgs": {
            "$ref": "#/components/schemas/DataItem"
          },
          "api_calls_per_day": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          }
        }
      },
      "Query": {
        "type": "object",
        "description": "Query",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "owner": {
            "type": "string"
          },
          "query_string": {
            "type": "string"
          },
          "shared": {
            "type": "boolean",
            "default": false
          },
          "org_id": {
            "type": "string"
          },
          "org_name": {
            "type": "string"
          },
          "catalog_id": {
            "type": "string"
          },
          "catalog_name": {
            "type": "string"
          },
          "space_id": {
            "type": "string"
          },
          "space_name": {
            "type": "string"
          },
          "settings": {
            "type": "object",
            "additionalProperties": true
          },
          "owner_first_name": {
            "type": "string"
          },
          "owner_last_name": {
            "type": "string"
          },
          "owner_username": {
            "type": "string"
          }
        }
      },
      "QueryRequest": {
        "type": "object",
        "description": "Request body to create/update a query.",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "query_string": {
            "type": "string"
          },
          "shared": {
            "type": "boolean",
            "default": false
          },
          "settings": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "QueryUpdateRequest": {
        "type": "object",
        "description": "Request body to update a query.",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "query_string": {
            "type": "string"
          },
          "settings": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "QueryList": {
        "type": "array",
        "description": "Array of queries.",
        "items": {
          "$ref": "#/components/schemas/Query"
        }
      },
      "QueryListResponse": {
        "type": "object",
        "description": "Query list response.",
        "required": [
          "total",
          "search_time",
          "queries"
        ],
        "properties": {
          "total": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "search_time": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "offset": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "limit": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "first": {
            "$ref": "#/components/schemas/PaginationLink"
          },
          "next": {
            "$ref": "#/components/schemas/PaginationLink"
          },
          "previous": {
            "$ref": "#/components/schemas/PaginationLink"
          },
          "last": {
            "$ref": "#/components/schemas/PaginationLink"
          },
          "queries": {
            "$ref": "#/components/schemas/QueryList"
          }
        }
      },
      "QueryTransferOwnerRequest": {
        "type": "object",
        "required": [
          "new_owner_user_url"
        ],
        "properties": {
          "new_owner_user_url": {
            "type": "string",
            "example": "/api/user-registries/9fae1d20-3d20-4418-8c09-d3409b303b7e/d4654412-f96f-4989-895e-dca377ac9fa4/users/7982df1f-1a86-4077-8131-7ce583385d7d"
          }
        }
      },
      "RankedData": {
        "type": "array",
        "description": "An array of ranked data as used in report leaderboards",
        "items": {
          "type": "object",
          "properties": {
            "rank": {
              "description": "This items rank position, e.g. 1 equals first",
              "type": "number"
            },
            "ref": {
              "description": "The reference field for this artifact, e.g. apiname:version or productname:version or productname:version:plan",
              "type": "string",
              "example": "apiname:1.0.0"
            },
            "value": {
              "type": "number"
            },
            "trend": {
              "description": "optional attribute representing whether this item is trending up or down",
              "type": "string",
              "enum": [
                "up",
                "down"
              ],
              "nullable": true
            }
          }
        }
      },
      "ReportTrendComponent": {
        "type": "object",
        "properties": {
          "trend": {
            "type": "string",
            "description": "Percentage change from start of the time period to the end. Negative values mean decrease.",
            "example": "20%"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "ProviderReportTrends": {
        "type": "object",
        "description": "Component representing the change in various characteristics from the start of a report to the end.",
        "properties": {
          "api_calls": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          },
          "errors": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          },
          "successes": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          },
          "bytes_received": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          },
          "bytes_sent": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          },
          "total_apis": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          },
          "total_products": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          },
          "subscription_count": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          },
          "consumer_count": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          }
        }
      },
      "RerouteBody": {
        "type": "object",
        "properties": {
          "commands": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      },
      "ScrollDeleteRequest": {
        "type": "object",
        "properties": {
          "scroll_id": {
            "type": "string",
            "description": "Pass this scroll ID to close its search context. To close all open scroll context use '_all'.\n"
          }
        }
      },
      "ScrollDeleteResponse": {
        "type": "object",
        "properties": {
          "succeeded": {
            "type": "boolean",
            "description": "If true, the request succeeded. This does not indicate whether any scrolling search requests were cleared."
          },
          "num_freed": {
            "type": "number",
            "description": "Number of scrolling search requests cleared."
          }
        }
      },
      "ScrollRequest": {
        "type": "object",
        "properties": {
          "size": {
            "type": "number",
            "description": "The number of results that you want returned for each batch. Defaults to 1000. Requests with a scroll_id will ignore this field.\n"
          },
          "scroll": {
            "type": "string",
            "description": "Tell OpenSearch how long you need to keep scrolling. Defaults to '10m'. This search context needs to be long enough to process a single batch of results.\n"
          },
          "scroll_id": {
            "type": "string",
            "description": "Pass this scroll ID to the scroll operation to get back the next batch of results."
          }
        }
      },
      "ScrollResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "Total number of events stored."
          },
          "scroll_id": {
            "type": "string",
            "description": "Pass this scroll ID of the current scroll operation."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "SecureSettingsPassword": {
        "type": "object",
        "properties": {
          "secure_settings_password": {
            "type": "string"
          }
        }
      },
      "SettingsBody": {
        "type": "object",
        "description": "OpenSearch settings request body",
        "properties": {
          "rollover": {
            "type": "object",
            "required": [
              "min_doc_count",
              "min_index_age"
            ],
            "properties": {
              "min_doc_count": {
                "description": "The minimum number of documents required to roll over the event index.",
                "type": "integer",
                "minimum": 1,
                "x-example": 25000000
              },
              "min_index_age": {
                "description": "The minimum age required to roll over the event index. Index age is the time between its creation and the present. Use d for day and h for hour, e.g. 30d or 96h.",
                "type": "string",
                "x-example": "1d"
              }
            }
          },
          "retention": {
            "type": "object",
            "required": [
              "min_index_age"
            ],
            "properties": {
              "min_index_age": {
                "description": "The minimum age required to delete the event index. Index age is the time between its creation and the present. Use d for day and h for hour, e.g. 30d or 96h.",
                "type": "string",
                "x-example": "90d"
              }
            }
          },
          "summary_retention": {
            "type": "object",
            "required": [
              "min_index_age"
            ],
            "properties": {
              "min_index_age": {
                "description": "The minimum age required to delete the summary index. Index age is the time between its creation and the present. Use d for day and h for hour, e.g. 366d or 8000h.",
                "type": "string",
                "x-example": "366d"
              }
            }
          }
        }
      },
      "SplitBody": {
        "type": "object",
        "properties": {
          "aliases": {
            "type": "object",
            "additionalProperties": true
          },
          "settings": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "Settings": {
        "type": "object",
        "additionalProperties": true
      },
      "Status": {
        "type": "integer",
        "description": "Status code of the error.",
        "minimum": 400,
        "maximum": 599,
        "example": 400
      },
      "StatusDashboardResponse": {
        "type": "object",
        "description": "Data to display on the STATUS Dashboard.",
        "properties": {
          "search_time": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "status_codes": {
            "$ref": "#/components/schemas/GroupValueDataList"
          },
          "total_api_calls": {
            "$ref": "#/components/schemas/DataItem"
          },
          "errors": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "success_rate": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          }
        }
      },
      "ServiceStatusResponse": {
        "type": "object",
        "description": "Response showing analytics service information.",
        "properties": {
          "initial_transform": {
            "type": "boolean"
          },
          "long_term_data_enabled": {
            "type": "boolean"
          },
          "storage_enabled": {
            "type": "boolean"
          },
          "rollover_ok": {
            "type": "boolean"
          },
          "aws_storage": {
            "type": "boolean"
          },
          "geoip_enabled": {
            "type": "boolean"
          },
          "diskspace_ok": {
            "type": "boolean"
          },
          "transform_ok": {
            "type": "boolean"
          }
        }
      },
      "UsageDashboardResponse": {
        "type": "object",
        "description": "Data to display on the USAGE Dashboard.",
        "properties": {
          "search_time": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "top_products_by_calls": {
            "$ref": "#/components/schemas/GroupValueDataList"
          },
          "top_apis_by_calls": {
            "$ref": "#/components/schemas/GroupValueDataList"
          },
          "top_client_ips_by_calls": {
            "$ref": "#/components/schemas/GroupValueDataList"
          },
          "top_apps_by_calls": {
            "$ref": "#/components/schemas/GroupValueDataList"
          },
          "top_apis_by_bytes_sent": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          },
          "top_apis_by_bytes_received": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          }
        }
      },
      "DataDashboardResponse": {
        "type": "object",
        "description": "Data to display on the DATA Dashboard.",
        "properties": {
          "search_time": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "top_apis_by_request_size": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          },
          "top_apis_by_response_size": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          },
          "top_apps_by_request_size": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          },
          "top_apps_by_response_size": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          },
          "top_corgs_by_request_size": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          },
          "top_corgs_by_response_size": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          },
          "top_plans_by_request_size": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          },
          "top_plans_by_response_size": {
            "$ref": "#/components/schemas/GroupKeyValueDataList"
          },
          "total_request_size": {
            "$ref": "#/components/schemas/DataItem"
          },
          "total_response_size": {
            "$ref": "#/components/schemas/DataItem"
          }
        }
      },
      "LeaderboardReport": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/LeaderboardRanked"
          }
        }
      },
      "InactiveCorgFunnelResponse": {
        "type": "object",
        "description": "Inactive consumer organizations funnel response",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "total": {
            "type": "number"
          },
          "no_applications": {
            "$ref": "#/components/schemas/FunnelReport"
          },
          "no_subscriptions": {
            "$ref": "#/components/schemas/FunnelReport"
          },
          "no_traffic": {
            "$ref": "#/components/schemas/FunnelReport"
          },
          "no_recent_traffic": {
            "$ref": "#/components/schemas/FunnelReport"
          }
        }
      },
      "InactiveCorgs": {
        "type": "array",
        "description": "Array of inactive items",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the inactive item"
            },
            "catalogs": {
              "type": "string",
              "description": "Comma-separated list of org/catalog"
            }
          }
        }
      },
      "InactiveCorgTableResponse": {
        "type": "object",
        "description": "Inactive consumer organizations funnel response",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "total": {
            "type": "number"
          },
          "inactive_items": {
            "$ref": "#/components/schemas/InactiveCorgs"
          }
        }
      },
      "InactivePollingResponse": {
        "type": "object",
        "description": "Inactive report polling response",
        "properties": {
          "report_url": {
            "type": "string",
            "description": "Partial URL to query for the report generation",
            "example": "/cloud/reports/inactive/consumerorg"
          },
          "message": {
            "type": "string",
            "description": "Information message about the response",
            "example": "Report processing"
          }
        }
      },
      "InactiveProducts": {
        "type": "array",
        "description": "Array of inactive items",
        "items": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string",
              "description": "Name of the inactive item"
            },
            "catalogs": {
              "type": "string",
              "description": "Comma-separated list of org/catalog"
            }
          }
        }
      },
      "InactiveProductResponse": {
        "type": "object",
        "description": "Inactive product response",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "total": {
            "type": "number"
          },
          "inactive_items": {
            "$ref": "#/components/schemas/InactiveProducts"
          }
        }
      },
      "DeprecatedPollingResponse": {
        "type": "object",
        "description": "Deprecated report polling response",
        "properties": {
          "report_url": {
            "type": "string",
            "description": "Partial URL to query for the report generation",
            "example": "/cloud/reports/deprecated/consumerorg"
          },
          "message": {
            "type": "string",
            "description": "Information message about the response",
            "example": "Report processing"
          }
        }
      },
      "DeprecatedProducts": {
        "type": "array",
        "description": "Array of deprecated items",
        "items": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string",
              "description": "Name of the deprecated item"
            },
            "catalogs": {
              "type": "string",
              "description": "Comma-separated list of org/catalog"
            },
            "total": {
              "type": "number",
              "description": "Total number of API calls made using the deprecated products"
            },
            "errors": {
              "type": "number"
            },
            "success": {
              "type": "number"
            }
          }
        }
      },
      "DeprecatedProductResponse": {
        "type": "object",
        "description": "Deprecated product response",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "total": {
            "type": "number"
          },
          "deprecated_items": {
            "$ref": "#/components/schemas/DeprecatedProducts"
          }
        }
      },
      "LeaderboardsReportResponse": {
        "type": "object",
        "description": "Leaderboard Response",
        "properties": {
          "org_name": {
            "type": "string"
          },
          "catalog_name": {
            "type": "string"
          },
          "space_name": {
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": [
              "api",
              "product",
              "plan",
              "applications",
              "consumerOrg"
            ]
          },
          "leaderboard": {
            "$ref": "#/components/schemas/LeaderboardReport"
          }
        }
      },
      "LeaderboardRanked": {
        "type": "array",
        "description": "An array of ranked data",
        "items": {
          "type": "object",
          "properties": {
            "rank": {
              "description": "This items rank position, e.g. 1 equals first",
              "type": "number"
            },
            "ref": {
              "description": "The reference field for this artifact, e.g. apiname:version or productname:version or productname:version:plan",
              "type": "string",
              "example": "apiname:1.0.0"
            },
            "total": {
              "type": "number"
            },
            "errors": {
              "type": "number"
            },
            "success": {
              "type": "number"
            }
          }
        }
      },
      "ConsumerTrendRankedData": {
        "type": "array",
        "description": "An array of ranked data as used in consumer trend report leaderboards",
        "items": {
          "type": "object",
          "properties": {
            "rank": {
              "description": "This items rank position, e.g. 1 equals first",
              "type": "number"
            },
            "ref": {
              "description": "The reference field for this artifact, e.g. appname or consumerorgname",
              "type": "string",
              "example": "appname"
            },
            "value": {
              "type": "number"
            },
            "trend": {
              "description": "optional attribute representing whether this item is trending up or down",
              "type": "string",
              "enum": [
                "up",
                "down"
              ],
              "nullable": true
            }
          }
        }
      },
      "ConsumerReportTrends": {
        "type": "object",
        "description": "Component representing the change in various characteristics from the start of a report to the end.",
        "properties": {
          "consumers": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          },
          "applications": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          },
          "subscriptions": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          },
          "trends": {
            "$ref": "#/components/schemas/ConsumerLeaderboardDetailReportTrends"
          }
        }
      },
      "ConsumerTrendLeaderboard": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "application",
              "consumerorg"
            ]
          },
          "top_data": {
            "$ref": "#/components/schemas/ConsumerTrendRankedData"
          },
          "bottom_data": {
            "$ref": "#/components/schemas/ConsumerTrendRankedData"
          }
        }
      },
      "ConsumerTrendReportResponse": {
        "type": "object",
        "description": "Data to display on the consumer trends report.",
        "properties": {
          "org_name": {
            "type": "string"
          },
          "catalog_name": {
            "type": "string"
          },
          "space_name": {
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "trends": {
            "$ref": "#/components/schemas/ConsumerReportTrends"
          },
          "applications": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "subscriptions": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "consumers": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          }
        }
      },
      "ConsumerTrendLeaderboardReportResponse": {
        "type": "object",
        "description": "Leaderboard for the consumer trends report",
        "properties": {
          "org_name": {
            "type": "string"
          },
          "catalog_name": {
            "type": "string"
          },
          "space_name": {
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "leaderboard": {
            "$ref": "#/components/schemas/ConsumerTrendLeaderboard"
          }
        }
      },
      "ConsumerLeaderboardDetailReportTrends": {
        "type": "object",
        "description": "Component representing the change in various characteristics from the start of a report to the end.",
        "properties": {
          "subscription_count": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          },
          "app_count": {
            "$ref": "#/components/schemas/ReportTrendComponent"
          }
        }
      },
      "ConsumerTrendLeaderboardDetailReportResponse": {
        "type": "object",
        "description": "Leaderboard detail for the consumer trends report",
        "properties": {
          "org_name": {
            "type": "string"
          },
          "catalog_name": {
            "type": "string"
          },
          "space_name": {
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": [
              "application",
              "consumerorg"
            ]
          },
          "ref": {
            "type": "string",
            "example": "custom-app"
          },
          "catalogs": {
            "description": "Semicolon separated list of org/catalog names",
            "example": "custom-org/custom-cat;other-org/other-cat",
            "type": "string"
          },
          "trends": {
            "$ref": "#/components/schemas/ConsumerLeaderboardDetailReportTrends"
          },
          "api_calls": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "breakdown": {
            "$ref": "#/components/schemas/BreakDownData"
          },
          "response_times": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "api_leaderboard": {
            "$ref": "#/components/schemas/LeaderboardRanked"
          },
          "product_leaderboard": {
            "$ref": "#/components/schemas/LeaderboardRanked"
          }
        }
      }
    },
    "responses": {
      "ApiDashboardResponse": {
        "description": "Data needed to populate the API Dashboard",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiDashboardResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ApiDashboardResponse"
            }
          }
        }
      },
      "ApiUsageReportResponse": {
        "description": "Data needed to populate the API usage report",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiUsageReportResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ApiUsageReportResponse"
            }
          }
        }
      },
      "ApiUsageLeaderboardReportResponse": {
        "description": "Data needed to populate the leaderboard for the API usage report",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LeaderboardReportResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/LeaderboardReportResponse"
            }
          }
        }
      },
      "ApiUsageLeaderboardDetailReportResponse": {
        "description": "Data needed to populate the detailed view of the leaderboard for the API usage report",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProviderLeaderboardDetailReportResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ProviderLeaderboardDetailReportResponse"
            }
          }
        }
      },
      "ClusterMgmtIngestionResponse": {
        "description": "Response from Logstash cluster management API.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ClusterMgmtIngestionResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ClusterMgmtIngestionResponse"
            }
          }
        }
      },
      "ClusterMgmtObjectResponse": {
        "description": "Response from cluster management API.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ClusterMgmtObjectResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ClusterMgmtObjectResponse"
            }
          }
        }
      },
      "ConsumptionDashboardResponse": {
        "description": "Data needed to populate the Consumption Dashboard",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConsumptionDashboardResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ConsumptionDashboardResponse"
            }
          }
        }
      },
      "Error": {
        "description": "Unexpected error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "EventCountResponse": {
        "description": "Number of events at requested scope.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EventCountResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/EventCountResponse"
            }
          }
        }
      },
      "EventListResponse": {
        "description": "Events found at requested scope.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EventListResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/EventListResponse"
            }
          }
        }
      },
      "EventResponse": {
        "description": "Event matching supplied ID if exists at specified scope.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EventResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/EventResponse"
            }
          }
        }
      },
      "DiscoverTimelineResponse": {
        "description": "Data needed to populate the Gateway Dashboard",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DiscoverTimelineResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/DiscoverTimelineResponse"
            }
          }
        }
      },
      "FilterParamListResponse": {
        "description": "Filter parameters supported at requested scope.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FilterParamListResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/FilterParamListResponse"
            }
          }
        }
      },
      "GatewayDashboardResponse": {
        "description": "Data needed to populate the Gateway Dashboard",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GatewayDashboardResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/GatewayDashboardResponse"
            }
          }
        }
      },
      "LatencyDashboardResponse": {
        "description": "Data needed to populate the Latency Dashboard",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LatencyDashboardResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/LatencyDashboardResponse"
            }
          }
        }
      },
      "NoContentResponse": {
        "description": "The resource was deleted successfully."
      },
      "ProductDashboardResponse": {
        "description": "Data needed to populate the Product Dashboard",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProductDashboardResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ProductDashboardResponse"
            }
          }
        }
      },
      "QueryListResponse": {
        "description": "Queries found at requested scope.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/QueryListResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/QueryListResponse"
            }
          }
        }
      },
      "QueryResponse": {
        "description": "Singular query.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Query"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/Query"
            }
          }
        }
      },
      "ScrollDeleteResponse": {
        "description": "Response from the /events/scroll/delete API.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ScrollDeleteResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ScrollDeleteResponse"
            }
          }
        }
      },
      "ScrollResponse": {
        "description": "Response from the /events/scroll API.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ScrollResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ScrollResponse"
            }
          }
        }
      },
      "SettingsBodyResponse": {
        "description": "Settings body",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SettingsBody"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/SettingsBody"
            }
          }
        }
      },
      "StatusDashboardResponse": {
        "description": "Data needed to populate the Status Dashboard",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StatusDashboardResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/StatusDashboardResponse"
            }
          }
        }
      },
      "UsageDashboardResponse": {
        "description": "Data needed to populate the Usage Dashboard",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UsageDashboardResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/UsageDashboardResponse"
            }
          }
        }
      },
      "DataDashboardResponse": {
        "description": "Data needed to populate the Data Dashboard",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DataDashboardResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/DataDashboardResponse"
            }
          }
        }
      },
      "InactiveCorgFunnelResponse": {
        "description": "Data needed to populate the Inactive consumer organizations funnel report",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InactiveCorgFunnelResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/InactiveCorgFunnelResponse"
            }
          }
        }
      },
      "InactiveCorgTableResponse": {
        "description": "Data needed to populate the Inactive consumer organizations table report",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InactiveCorgTableResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/InactiveCorgTableResponse"
            }
          }
        }
      },
      "InactivePollingResponse": {
        "description": "Report is being generated.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InactivePollingResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/InactivePollingResponse"
            }
          }
        }
      },
      "InactiveProductResponse": {
        "description": "Data needed to populate the Inactive product report",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InactiveProductResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/InactiveProductResponse"
            }
          }
        }
      },
      "DeprecatedPollingResponse": {
        "description": "Report is being generated.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DeprecatedPollingResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/DeprecatedPollingResponse"
            }
          }
        }
      },
      "DeprecatedProductResponse": {
        "description": "Data needed to populate the Deprecateds product report",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DeprecatedProductResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/DeprecatedProductResponse"
            }
          }
        }
      },
      "LeaderboardResponse": {
        "description": "Data needed to populate all leaderboards",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LeaderboardsReportResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/LeaderboardsReportResponse"
            }
          }
        }
      },
      "ConsumerTrendReportResponse": {
        "description": "Data needed to populate the consumer trend report",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConsumerTrendReportResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ConsumerTrendReportResponse"
            }
          }
        }
      },
      "ConsumerTrendLeaderboardReportResponse": {
        "description": "Data needed to populate the leaderboard for the consumer trend report",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConsumerTrendLeaderboardReportResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ConsumerTrendLeaderboardReportResponse"
            }
          }
        }
      },
      "ConsumerTrendLeaderboardDetailReportResponse": {
        "description": "Data needed to populate the detailed view of the leaderboard for the consumer trend report",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConsumerTrendLeaderboardDetailReportResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ConsumerTrendLeaderboardDetailReportResponse"
            }
          }
        }
      },
      "ServiceStatusResponse": {
        "description": "Analytics service status information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ServiceStatusResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ServiceStatusResponse"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "description": "API Manager API Token at either Cloud Admin or Provider scope as appropriate for each operation as defined by the x-auth-token attribute.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://apimserver.example.com/api/oauth2/authorize",
            "scopes": {
              "api-analytics:view": "Create an Analytics object"
            }
          },
          "password": {
            "tokenUrl": "https://apimserver.example.com/api/token",
            "refreshUrl": "https://apimserver.example.com/api/token",
            "scopes": {
              "api-analytics:view": "Create an Analytics object"
            }
          },
          "clientCredentials": {
            "tokenUrl": "https://apimserver.example.com/api/token",
            "scopes": {
              "api-analytics:view": "Create an Analytics object"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "https://apimserver.example.com/api/oauth2/authorize",
            "tokenUrl": "https://apimserver.example.com/api/token",
            "refreshUrl": "https://apimserver.example.com/api/token",
            "scopes": {
              "api-analytics:view": "Create an Analytics object"
            }
          }
        }
      }
    }
  },
  "x-ibm-configuration": {
    "testable": false
  }
},
{
  "openapi": "3.0.0",
  "info": {
    "x-ibm-name": "consumer-analytics",
    "version": "2.0.0",
    "title": "IBM API Connect Consumer Analytics API",
    "description": "## API for the API Connect Consumer Analytics dashboard\n",
    "termsOfService": "https://ww.ibm.com/terms-of-service",
    "contact": {
      "name": "IBM",
      "url": "https://www.ibm.com",
      "email": "help@ibm.com"
    }
  },
  "servers": [
    {
      "url": "https://apimserver.example.com/consumer-analytics",
      "description": "Consumer analytics V2 base path"
    }
  ],
  "paths": {
    "/orgs/{org}/dashboard": {
      "description": "GET data needed to populate the consumer analytics dashboard.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get data to populate the consumer analytics dashboard.",
        "description": "Get data to populate the consumer analytics dashboard.",
        "operationId": "dashboard_get",
        "security": [
          {
            "oauth": [
              "app-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/accept_language_optional"
          },
          {
            "$ref": "#/components/parameters/x_ibm_consumer_context"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Analytics",
          "Analytics"
        ]
      }
    },
    "/orgs/{org}/apps/{app}/dashboard": {
      "description": "GET data needed to populate the consumer analytics dashboard by app id.\n",
      "parameters": [
        {
          "$ref": "#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/org"
        }
      ],
      "get": {
        "summary": "Get data to populate the consumer analytics dashboard by app id.",
        "description": "Get data to populate the consumer analytics dashboard by app id.",
        "operationId": "dashboard_getByApp",
        "security": [
          {
            "oauth": [
              "app-analytics:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/end_time_optional"
          },
          {
            "$ref": "#/components/parameters/limit_optional"
          },
          {
            "$ref": "#/components/parameters/offset_optional"
          },
          {
            "$ref": "#/components/parameters/start_time_optional"
          },
          {
            "$ref": "#/components/parameters/timeframe_optional"
          },
          {
            "$ref": "#/components/parameters/accept_language_optional"
          },
          {
            "$ref": "#/components/parameters/x_ibm_consumer_context"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerDashboardResponse"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Consumer Analytics",
          "Analytics"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "accept_language_optional": {
        "name": "accept-language",
        "in": "header",
        "description": "Natural language and locale that the client prefers.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "en"
        }
      },
      "app": {
        "name": "app",
        "in": "path",
        "description": "Consumer organization app.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "end_time_optional": {
        "name": "end",
        "in": "query",
        "description": "If set, the API will only return events with a datetime equal or older than this. The value must follow the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z. See https://datatracker.ietf.org/doc/html/rfc3339#section-5.6.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "limit_optional": {
        "name": "limit",
        "in": "query",
        "description": "If set, the number of items to return when requesting a list. Maximum: 200",
        "required": false,
        "schema": {
          "type": "string",
          "example": "50"
        }
      },
      "offset_optional": {
        "name": "offset",
        "in": "query",
        "description": "If set, the offset to be applied when requesting a list. e.g. return events starting from the 100th result",
        "required": false,
        "schema": {
          "type": "string",
          "example": "100"
        }
      },
      "org": {
        "name": "org",
        "in": "path",
        "description": "Consumer organization name or ID.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "start_time_optional": {
        "name": "start",
        "in": "query",
        "description": "If set, the API will only return events with a datetime equal or newer than this. The value must follow the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z. See https://datatracker.ietf.org/doc/html/rfc3339#section-5.6.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "timeframe_optional": {
        "name": "timeframe",
        "in": "query",
        "description": "If set, the API will only return events within the indicated timeframe. This parameter will be ignored if either start or end have been specified.\n",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "last1minute",
            "last5minutes",
            "last15minutes",
            "last30minutes",
            "last1hour",
            "last4hours",
            "last12hours",
            "last24hours",
            "last7days",
            "last30days"
          ]
        }
      },
      "x_ibm_consumer_context": {
        "name": "X-IBM-Consumer-Context",
        "in": "header",
        "description": "Consumer context in the form of {provider-org}.{catalog}, e.g. myorg.mycat\n",
        "required": true,
        "schema": {
          "type": "string",
          "example": "myorg.mycat"
        }
      }
    },
    "responses": {
      "ConsumerDashboardResponse": {
        "description": "Data needed to populate the consumer analytics Dashboard",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConsumerDashboardResponse"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/ConsumerDashboardResponse"
            }
          }
        }
      },
      "Error": {
        "description": "Unexpected error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "ApiCallsList": {
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "data": {
            "$ref": "#/components/schemas/EventArray"
          }
        }
      },
      "ConsumerDashboardResponse": {
        "type": "object",
        "description": "Data to display on the consumer analytics Dashboard.",
        "properties": {
          "search_time": {
            "$ref": "#/components/schemas/NonNegativeInteger"
          },
          "status_codes": {
            "$ref": "#/components/schemas/GroupValueDataList"
          },
          "min_response_time": {
            "$ref": "#/components/schemas/DataItem"
          },
          "avg_response_time": {
            "$ref": "#/components/schemas/DataItem"
          },
          "max_response_time": {
            "$ref": "#/components/schemas/DataItem"
          },
          "total_api_calls": {
            "$ref": "#/components/schemas/DataItem"
          },
          "total_errors": {
            "$ref": "#/components/schemas/DataItem"
          },
          "errors": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "response_times": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "throttled_calls": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "api_calls_per_day": {
            "$ref": "#/components/schemas/GroupDateValueItemData"
          },
          "last_api_calls": {
            "$ref": "#/components/schemas/ApiCallsList"
          }
        }
      },
      "DataItem": {
        "type": "object",
        "properties": {
          "data": {
            "type": "number"
          }
        }
      },
      "Error": {
        "type": "object",
        "description": "Generic error response.",
        "additionalProperties": true,
        "properties": {
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "message": {
            "$ref": "#/components/schemas/Message"
          },
          "errors": {
            "$ref": "#/components/schemas/ErrorModels"
          }
        }
      },
      "ErrorModels": {
        "type": "array",
        "description": "Array of more detailed error information.",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "A snake case string succinctly identifying the problem."
            },
            "message": {
              "type": "string",
              "description": "A plainly-written, developer-oriented explanation of the solution to the problem in complete, well-formed sentences."
            },
            "more_info": {
              "type": "string",
              "description": "A publicly-accessible URL where information about the error can be read."
            },
            "target": {
              "$ref": "#/components/schemas/ErrorTargetModel"
            }
          }
        }
      },
      "ErrorTargetModel": {
        "type": "object",
        "description": "Contains information about specific error targets.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Either field, parameter, or header."
          },
          "name": {
            "type": "string",
            "description": "The name of the problematic field (with dot-syntax if necessary), query parameter, or header."
          }
        }
      },
      "EventArray": {
        "type": "array",
        "description": "Array of API events",
        "items": {
          "$ref": "#/components/schemas/EventBody"
        }
      },
      "EventBody": {
        "type": "object",
        "description": "The API Event logged by the gateway",
        "additionalProperties": true,
        "properties": {
          "api_version": {
            "type": "string",
            "description": "The version of the API"
          },
          "api_name": {
            "type": "string",
            "description": "The name of the API"
          },
          "api_id": {
            "type": "string",
            "description": "The ID of the API"
          },
          "api_resource_id": {
            "type": "string",
            "description": "The API resource ID"
          },
          "app_lifecycle_state": {
            "type": "string",
            "description": "The lifecycle state of the calling application"
          },
          "bytes_received": {
            "type": "number",
            "description": "The number of bytes received by the gateway"
          },
          "bytes_sent": {
            "type": "number",
            "description": "The number of bytes sent by the gateway"
          },
          "client_id": {
            "type": "string",
            "description": "The application client ID used"
          },
          "datetime": {
            "type": "string",
            "format": "date-time",
            "description": "The date time of the API event from the gateway"
          },
          "developer_org_id": {
            "type": "string",
            "description": "The consumer organization ID"
          },
          "developer_org_name": {
            "type": "string",
            "description": "The consumer organization name"
          },
          "developer_org_title": {
            "type": "string",
            "description": "The consumer organization title"
          },
          "headers": {
            "type": "object",
            "description": "Internal headers array from ingestion"
          },
          "host": {
            "type": "string",
            "description": "The ingestion host IP address"
          },
          "http_user_agent": {
            "type": "string",
            "description": "The caller user agent string",
            "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36"
          },
          "org_name": {
            "type": "string",
            "description": "The provider organization name"
          },
          "org_id": {
            "type": "string",
            "description": "The provider organization ID"
          },
          "plan_id": {
            "type": "string",
            "description": "The plan ID"
          },
          "plan_name": {
            "type": "string",
            "description": "The plan name"
          },
          "product_version": {
            "type": "string",
            "description": "The product version"
          },
          "product_name": {
            "type": "string",
            "description": "The product name"
          },
          "product_id": {
            "type": "string",
            "description": "The product ID"
          },
          "product_title": {
            "type": "string",
            "description": "The product title"
          },
          "query_string": {
            "type": "string",
            "description": "Any provided query parameters"
          },
          "request_body": {
            "type": "string",
            "description": "The request body payload"
          },
          "request_http_headers": {
            "type": "array",
            "description": "The request headers",
            "items": {
              "$ref": "#/components/schemas/HeaderItem"
            }
          },
          "request_method": {
            "type": "string",
            "description": "The request HTTP method"
          },
          "request_protocol": {
            "type": "string",
            "description": "The request protocol"
          },
          "resource_id": {
            "type": "string",
            "description": "The resource ID"
          },
          "resource_path": {
            "type": "string",
            "description": "The resource path"
          },
          "response_body": {
            "type": "string",
            "description": "The response body payload"
          },
          "response_http_headers": {
            "type": "array",
            "description": "The response headers",
            "items": {
              "$ref": "#/components/schemas/HeaderItem"
            }
          },
          "status_code": {
            "type": "string",
            "description": "The HTTP response status code",
            "example": "200 OK"
          },
          "time_to_serve_request": {
            "type": "number",
            "description": "The time taken to serve the request"
          },
          "uri_path": {
            "type": "string",
            "description": "The URI path"
          }
        },
        "required": [
          "org_name",
          "org_id",
          "resource_path",
          "status_code",
          "product_name",
          "product_version",
          "product_id",
          "api_name",
          "api_version",
          "api_id"
        ]
      },
      "GroupDateValueItem": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "GroupDateValueItemData": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GroupDateValueItemList"
          }
        }
      },
      "GroupDateValueItemList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GroupDateValueItem"
        }
      },
      "GroupValueDataList": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GroupValueItemList"
          }
        }
      },
      "GroupValueItem": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string"
          },
          "value": {
            "type": "integer"
          }
        }
      },
      "GroupValueItemList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GroupValueItem"
        }
      },
      "HeaderItem": {
        "type": "object",
        "description": "An HTTP header",
        "additionalProperties": true
      },
      "Message": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Detailed error message.",
        "example": "Invalid request payload JSON format."
      },
      "NonNegativeInteger": {
        "type": "integer",
        "description": "Integer greater than or equal to zero.",
        "minimum": 0
      },
      "Status": {
        "type": "integer",
        "description": "Status code of the error.",
        "minimum": 400,
        "maximum": 599,
        "example": 400
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "description": "API Manager Consumer API Token at appropriate catalog scope.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://apimserver.example.com/consumer-api/oauth2/authorize",
            "scopes": {
              "app-analytics:view": "View consumer analytics"
            }
          },
          "password": {
            "tokenUrl": "https://apimserver.example.com/consumer-api/token",
            "refreshUrl": "https://apimserver.example.com/consumer-api/token",
            "scopes": {
              "app-analytics:view": "View consumer analytics"
            }
          },
          "clientCredentials": {
            "tokenUrl": "https://apimserver.example.com/consumer-api/token",
            "scopes": {
              "app-analytics:view": "View consumer analytics"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "https://apimserver.example.com/consumer-api/oauth2/authorize",
            "tokenUrl": "https://apimserver.example.com/consumer-api/token",
            "refreshUrl": "https://apimserver.example.com/consumer-api/token",
            "scopes": {
              "app-analytics:view": "View consumer analytics"
            }
          }
        }
      }
    }
  },
  "x-ibm-configuration": {
    "testable": false
  }
},
{
  "openapi": "3.0.0",
  "info": {
    "x-ibm-name": "portaladmin",
    "version": "1.0.0",
    "title": "API Connect Portal Admin API",
    "description": "API for the API Connect Portal Admin subsystem",
    "termsOfService": "https://ww.ibm.com/terms-of-service",
    "contact": {
      "name": "IBM",
      "url": "https://www.ibm.com",
      "email": "help@ibm.com"
    },
    "license": {
      "name": "tbd",
      "url": "https://tbd.com"
    }
  },
  "servers": [
    {
      "url": "https://apimserver.example.com/portal",
      "description": "Portal Admin base path"
    }
  ],
  "paths": {
    "/catalogs/{org}/{catalog}/api/list": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Shows a list of apis from a site.",
        "description": "Show a list of apis of the provided org and catalog.",
        "operationId": "api_list",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=api-apic-apilist"
        },
        "responses": {
          "200": {
            "description": "Successful output of the list apis command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Api"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/api/get": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get a specific api from a developer portal.",
        "description": "Get a specific api from the developer portal of the provided org and catalog. The id or name:version of a specific api needs to be provided. e.g. 'id-of-api-called-example-3' or 'example:3.0.0'.",
        "operationId": "api_get",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=api-apic-apiget"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/api"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the get api command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Api"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/api/get-document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get a specific entire api document from a developer portal.",
        "description": "Get a specific entire api document from the developer portal of the provided org and catalog. The id or name:version of a specific api needs to be provided. e.g. 'id-of-api-called-example-3' or 'example:3.0.0'.",
        "operationId": "api_getDocument",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=api-apic-apiget-document"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/api"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the get-document api command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Api"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/api/add-attachment": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Add an attachment for the given api.",
        "description": "Add an attachment for a api within the developer portal of the provided org and catalog. A api can hold 10 attachments. The id or name:version of a specific api needs to be provided. e.g. 'id-of-api-called-example-3' or 'example:3.0.0'.",
        "operationId": "api_addAttachment",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=api-apic-apiaddattachment"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/api"
          },
          {
            "$ref": "#/components/parameters/attachment_name"
          },
          {
            "$ref": "#/components/parameters/attachment_description"
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful add of the api attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Api"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/api/add-tag": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Add a tag for the given api.",
        "description": "Add a tag for a api within the developer portal of the provided org and catalog. The id or name:version of a specific api needs to be provided. e.g. 'id-of-api-called-example-3' or 'example:3.0.0'.",
        "operationId": "api_addTag",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=api-apic-apiaddtag"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/api"
          },
          {
            "$ref": "#/components/parameters/tag_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful add of the api tag",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Api"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/api/set-icon": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "put": {
        "summary": "Set an icon image for the given api.",
        "description": "Set an icon image for a api within the developer portal of the provided org and catalog. The existing icon will be overwritten. The id or name:version of a specific api needs to be provided. e.g. 'id-of-api-called-example-3' or 'example:3.0.0'.",
        "operationId": "api_setIcon",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=api-apic-apiseticon"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/api"
          },
          {
            "$ref": "#/components/parameters/icon_description"
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful set of the api icon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Api"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/apic-config/get": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the configuration object that the developer portal holds.",
        "description": "Get the configuration object that the developer portal holds that was sent by APIM.",
        "operationId": "apic_config_get",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=config-apic-apic-configget"
        },
        "responses": {
          "200": {
            "description": "Successful output of the get apic config command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Apic Config"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/application/list": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Shows a list of applications from a site.",
        "description": "Show a list of applications of the provided org and catalog.",
        "operationId": "application_list",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=application-apic-applicationlist"
        },
        "responses": {
          "200": {
            "description": "Successful output of the list applications command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Application"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/application/get": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get a specific application from a developer portal.",
        "description": "Get a specific application from the developer portal of the provided org and catalog. The id of a specific application needs to be provided.",
        "operationId": "application_get",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=application-apic-applicationget"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/application"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the get application command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Application"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/consumer-org/list": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Shows a list of consumer orgs from a site.",
        "description": "Show a list of consumer orgs of the provided org and catalog.",
        "operationId": "consumer_org_list",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=org-apic-consumer-orglist"
        },
        "responses": {
          "200": {
            "description": "Successful output of the list consumer orgs command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Consumer Org"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/consumer-org/get": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get a specific consumer org from a developer portal.",
        "description": "Get a specific consumer org from the developer portal of the provided org and catalog. The id of a specific consumer organization needs to be provided.",
        "operationId": "consumer_org_get",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=org-apic-consumer-orgget"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/consumer-org"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the get consumer org command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Consumer Org"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/content/export/{entity_type}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/entity_type"
        }
      ],
      "post": {
        "summary": "Export a tgz containing the site content",
        "description": "Export a tgz containing the site content. You can export specific entity types and specific ids or you can generate a tar containing all content. Depending on your site's content please be advised that an export all can take a long time to complete. If called via the toolkit CLI, it will automatically poll the response every 30 seconds up to 25 minutes.",
        "operationId": "content_createExport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=content-apic-contentexport"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/entity_ids"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful create of the task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Task already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Content"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/content/export/{task_id}/download": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "When ready, streams a content export artifact.",
        "description": "When ready, streams a content export artifact back to the related task id that is provided in the arguments.",
        "operationId": "content_getExport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=content-apic-contentget-export"
        },
        "responses": {
          "200": {
            "description": "The export artifact stream.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "This task and its related artifact could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "406": {
            "description": "The task is not an export operation and therefore an artifact cannot be streamed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "425": {
            "description": "The artifact related to this task is still being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Content"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/content/export/{task_id}/delete": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "delete": {
        "summary": "If running, cancels a content export task.",
        "description": "If running, cancels the content export task and deletes any related artifacts that have been generated.",
        "operationId": "content_deleteExport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=content-apic-contentdelete-export"
        },
        "responses": {
          "204": {
            "description": "The task has been cancelled and it's artifacts deleted."
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Content"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/content/export/{task_id}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "Returns information about the status of this task.",
        "description": "Returns information related to the task id that is provided in the arguments.",
        "operationId": "content_getExportStatus",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=content-apic-contentget-export-status"
        },
        "responses": {
          "200": {
            "description": "Task is ready to be obtained",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "202": {
            "description": "Waiting on task to finish.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "410": {
            "description": "The task and its artifacts have expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Content"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/content/import": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Create a task that imports an archive of site content.",
        "description": "Creates a task that imports an archive of site content. The status of this task can be tracked with the /content/TASK_ID/status route. Depending on your site's content please be advised that an import can take a long time to complete. If called via the toolkit CLI, it will automatically poll the response every 30 seconds up to 25 minutes.",
        "operationId": "custom_module_createImport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=content-apic-contentimport"
        },
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create of the import task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Task already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Content"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/content/import/{task_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "delete": {
        "summary": "If running, cancels a content import task.",
        "description": "If running, cancels the content import task and deletes any related artifacts that have been generated.",
        "operationId": "content_deleteImport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=content-apic-contentdelete-import"
        },
        "responses": {
          "204": {
            "description": "The task has been cancelled and it's artifacts deleted."
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Content"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/content/import/{task_id}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "Returns information about the status of this task.",
        "description": "Returns information related to the task id that is provided in the arguments.",
        "operationId": "content_getImportStatus",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=content-apic-contentget-import-status"
        },
        "responses": {
          "200": {
            "description": "Task is ready to be obtained",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "202": {
            "description": "Waiting on task to finish.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "410": {
            "description": "The task and its artifacts have expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Content"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/content/list/{entity_type}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/entity_type"
        }
      ],
      "get": {
        "summary": "Lists all of the entities in your site for the given entity type and bundle.",
        "description": "Lists all of the entities in your site for the given entity type and bundle.",
        "operationId": "content_list",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=entity-apic-contentlist"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/bundle"
          }
        ],
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Content"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/content/list-types": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Lists allowed content types on your site.",
        "description": "Lists allowed content types on your site.",
        "operationId": "content_listTypes",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=entity-apic-contentlist-types"
        },
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Content"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-module/export": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Create a task that exports an archive that contains the custom modules of a site.",
        "description": "You can create a task to export an archive of the custom modules of a site. You can then use that archive to quickly and simply override the custom modules on another site.",
        "operationId": "custom_module_createExport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=module-apic-custom-modulecreate-export"
        },
        "responses": {
          "201": {
            "description": "Successful create of the task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Task already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomModule"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-module/export/{task_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "When ready, streams a custom module export artifact.",
        "description": "When ready, streams a custom module export artifact back to the related task id that is provided in the arguments.",
        "operationId": "custom_module_getExport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=module-apic-custom-moduleget-export"
        },
        "responses": {
          "200": {
            "description": "A stream of the export artifact.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "This task and its related artifact could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "406": {
            "description": "The task is not an export operation and therefore an artifact cannot be streamed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "425": {
            "description": "The artifact related to this task is still being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomModule"
        ]
      },
      "delete": {
        "summary": "If running, cancels a custom module export task.",
        "description": "If running, cancels the custom module export task and deletes any related artifacts that have been generated.",
        "operationId": "custom_module_deleteExport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=module-apic-custom-moduledelete-export"
        },
        "responses": {
          "204": {
            "description": "The task has been cancelled and it's artifacts deleted."
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomModule"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-module/export/{task_id}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "Returns information about the status of this task.",
        "description": "Returns information related to the task id that is provided in the arguments.",
        "operationId": "custom_module_getExportStatus",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=module-apic-custom-moduleget-export-status"
        },
        "responses": {
          "200": {
            "description": "Task is ready to be obtained",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "202": {
            "description": "Waiting on task to finish.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "410": {
            "description": "The task and its artifacts have expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomModule"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-module/import": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/wait_cache"
        }
      ],
      "post": {
        "summary": "Create a task that imports an archive that contains the custom modules of a site.",
        "description": "You can create a task to import an archive of the custom modules of a site. You can use the imported archive to quickly and simply override the custom modules for the specified site.",
        "operationId": "custom_module_createImport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=module-apic-custom-modulecreate-import"
        },
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create of the task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Task already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomModule"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-module/import/{task_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "delete": {
        "summary": "If running, cancels a custom module import task.",
        "description": "If running, cancels the custom module import task and deletes any related artifacts that have been generated.",
        "operationId": "custom_module_deleteImport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=module-apic-custom-moduledelete-import"
        },
        "responses": {
          "204": {
            "description": "The task has been cancelled and it's artifacts deleted."
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomModule"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-module/import/{task_id}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "Get the result of the custom module import task.",
        "description": "Get the result of the custom module import task. If the import task has completed on the portal system, this command returns the result of the command. If the import task has not completed on the portal system, it returns the current status of the task.",
        "operationId": "custom_module_getImportStatus",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=module-apic-custom-moduleget-import-status"
        },
        "responses": {
          "200": {
            "description": "Output from portal cli command request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "202": {
            "description": "Waiting on task to finish.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "410": {
            "description": "The task and its result have expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomModule"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-theme/export": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Create a task that exports an archive that contains the custom themes of a site.",
        "description": "You can create a task to export an archive of the custom themes of a site. You can then use that archive to quickly and simply override the custom themes on another site.",
        "operationId": "custom_theme_createExport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=theme-apic-custom-themecreate-export"
        },
        "responses": {
          "201": {
            "description": "Successful create of the task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Task already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTheme"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-theme/export/{task_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "When ready, streams a custom theme export artifact.",
        "description": "When ready, streams a custom theme export artifact back to the related task id that is provided in the arguments.",
        "operationId": "custom_theme_getExport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=theme-apic-custom-themeget-export"
        },
        "responses": {
          "200": {
            "description": "A stream of the export artifact.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "This task and its related artifact could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "406": {
            "description": "The task is not an export operation and therefore an artifact cannot be streamed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "425": {
            "description": "The artifact related to this task is still being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTheme"
        ]
      },
      "delete": {
        "summary": "If running, cancels a custom theme export task.",
        "description": "If running, cancels the custom theme export task and deletes any related artifacts that have been generated.",
        "operationId": "custom_theme_deleteExport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=theme-apic-custom-themedelete-export"
        },
        "responses": {
          "204": {
            "description": "The task has been cancelled and it's artifacts deleted."
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTheme"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-theme/export/{task_id}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "Returns information about the status of this task.",
        "description": "Returns information related to the task id that is provided in the arguments.",
        "operationId": "custom_theme_getExportStatus",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=theme-apic-custom-themeget-export-status"
        },
        "responses": {
          "200": {
            "description": "Task is ready to be obtained",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "202": {
            "description": "Waiting on task to finish.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "410": {
            "description": "The task and its artifacts have expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTheme"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-theme/import": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/wait_cache"
        }
      ],
      "post": {
        "summary": "Create a task that imports an archive that contains the custom themes of a site.",
        "description": "You can create a task to import an archive of the custom themes of a site. You can use the imported archive to quickly and simply override the custom themes for the specified site.",
        "operationId": "custom_theme_createImport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=theme-apic-custom-themecreate-import"
        },
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create of the task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Task already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTheme"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-theme/import/{task_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "delete": {
        "summary": "Cancels a running custom theme import task.",
        "description": "Cancels the custom theme import task and deletes any generated artifacts.",
        "operationId": "custom_theme_deleteImport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=theme-apic-custom-themedelete-import"
        },
        "responses": {
          "204": {
            "description": "The task has been cancelled and it's artifacts deleted."
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTheme"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-theme/import/{task_id}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "Get the result of the custom theme import task.",
        "description": "Get the result of the custom theme import task. If the import task has completed on the portal system, this command returns the result of the command. If the import task has not completed on the portal system, it returns the current status of the task.",
        "operationId": "custom_theme_getImportStatus",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=theme-apic-custom-themeget-import-status"
        },
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "202": {
            "description": "Waiting on task to finish.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "410": {
            "description": "The task and its result have expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTheme"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-translation/export": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Create a task that exports an archive that contains the custom translation of a site.",
        "description": "You can create a task to export an archive of the custom translation of a site. You can then use that archive to quickly and simply override the custom translations on another site.",
        "operationId": "custom_translation_createExport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=translation-apic-custom-translationcreate-export"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/langcodes"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful create of the task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Task already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTranslation"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-translation/export/{task_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "When ready, streams a custom translation export artifact.",
        "description": "When ready, streams a custom translation export artifact back to the related task id that is provided in the arguments.",
        "operationId": "custom_translation_getExport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=translation-apic-custom-translationget-export"
        },
        "responses": {
          "200": {
            "description": "The export artifact stream.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "This task and its related artifact could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "406": {
            "description": "The task is not an export operation and therefore an artifact cannot be streamed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "425": {
            "description": "The artifact related to this task is still being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTranslation"
        ]
      },
      "delete": {
        "summary": "If running, cancels a custom translation export task.",
        "description": "If running, cancels the custom translation export task and deletes any related artifacts that have been generated.",
        "operationId": "custom_translation_deleteExport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=translation-apic-custom-translationdelete-export"
        },
        "responses": {
          "204": {
            "description": "The task has been cancelled and it's artifacts deleted."
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTranslation"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-translation/export/{task_id}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "Returns information about the status of this task.",
        "description": "Returns information related to the task id that is provided in the arguments.",
        "operationId": "custom_translation_getExportStatus",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=translation-apic-custom-translationget-export-status"
        },
        "responses": {
          "200": {
            "description": "Task is ready to be obtained",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "202": {
            "description": "Waiting on task to finish.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "410": {
            "description": "The task and its artifacts have expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTranslation"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-translation/import": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Create a task that imports an archive that contains the custom translations of a site.",
        "description": "You can create a task to import an archive of the custom translations of a site. You can use the imported archive to quickly and simply override the custom translations for the specified site.",
        "operationId": "custom_translation_createImport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=translation-apic-custom-translationcreate-import"
        },
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create of the task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Task already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTranslation"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-translation/import/{task_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "delete": {
        "summary": "If running, cancels a custom translation import task.",
        "description": "If running, cancels the custom translation import task and deletes any related artifacts that have been generated.",
        "operationId": "custom_translation_deleteImport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=translation-apic-custom-translationdelete-import"
        },
        "responses": {
          "204": {
            "description": "The task has been cancelled and it's artifacts deleted."
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTranslation"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/custom-translation/import/{task_id}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "Get the result of the custom translation import task.",
        "description": "Get the result of the custom translation import task. If the import task has completed on the portal system, this command returns the result of the command. If the import task has not completed on the portal system, it returns the current status of the task.",
        "operationId": "custom_translation_getImportStatus",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=translation-apic-custom-translationget-import-status"
        },
        "responses": {
          "200": {
            "description": "Output from portal cli command request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "202": {
            "description": "Waiting on task to finish.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "410": {
            "description": "The task and its result have expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomTranslation"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/export-entity": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "List export entities",
        "description": "List export entities within your Developer Portal. Export Entities contain a defined list of content to be exported when launched.",
        "operationId": "export_entity_list",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=export-entity-apic-export-entitylist"
        },
        "responses": {
          "200": {
            "description": "The creation of an export entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: ExportEntity"
        ]
      },
      "put": {
        "summary": "Create an export entity",
        "description": "Create a new export entity. This export entity can be populated with content which can subsequently be exported.",
        "operationId": "export_entity_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=export-entity-apic-export-entitycreate"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/export_entity_name"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful create of an export entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: ExportEntity"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/export-entity/{export_entity_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/export_entity_id"
        }
      ],
      "get": {
        "summary": "Get an export entity",
        "description": "Get an export entity by its ID, which will list the content that will be exported as part of this export entity.",
        "operationId": "export_entity_get",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=export-entity-apic-export-entityget"
        },
        "responses": {
          "200": {
            "description": "A list of content within the export entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: ExportEntity"
        ]
      },
      "delete": {
        "summary": "Delete an export entity",
        "description": "Delete an export entity by its ID.",
        "operationId": "export_entity_delete",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=export-entity-apic-export-entitydelete"
        },
        "responses": {
          "200": {
            "description": "The export entity has been successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: ExportEntity"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/export-entity/{export_entity_id}/add-content": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/export_entity_id"
        }
      ],
      "post": {
        "summary": "Add content to an export entity",
        "description": "Add content to an existing export entity. Provide the content type and IDs that you wish to add to this export entity.",
        "operationId": "export_entity_addContent",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=export-entity-apic-export-entityadd-content"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/entity_ids"
          },
          {
            "$ref": "#/components/parameters/entity_type_query"
          }
        ],
        "responses": {
          "200": {
            "description": "Content succesfully added to export entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: ExportEntity"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/export-entity/{export_entity_id}/remove-content": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/export_entity_id"
        }
      ],
      "post": {
        "summary": "Remove content from an export entity",
        "description": "Remove content from an export entity. Provide the content type and IDs that you wish to remove from this export entity.",
        "operationId": "export_entity_removeContent",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=export-entity-apic-export-entityremove-content"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/entity_ids"
          },
          {
            "$ref": "#/components/parameters/entity_type_query"
          }
        ],
        "responses": {
          "200": {
            "description": "Content successfully removed from export entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: ExportEntity"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/export-entity/{export_entity_id}/launch": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/export_entity_id"
        }
      ],
      "post": {
        "summary": "Launch a export entity",
        "description": "Launch an export entity which will create an export tgz of all the entities contained in the export. If called via the toolkit CLI, it will automatically poll the response every 30 seconds up to 25 minutes.",
        "operationId": "export_entity_launchExport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=export-entity-apic-export-entitylaunch"
        },
        "responses": {
          "201": {
            "description": "Successful create of the task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Task already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: ExportEntity"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/export-entity/{task_id}/download": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "When ready, streams a content export artifact generated from an export entity.",
        "description": "When ready, streams a content export artifact generated from an export entity back to the related task id that is provided in the arguments.",
        "operationId": "export_entity_getLaunchExport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=export-entity-apic-export-entityget-launch-export"
        },
        "responses": {
          "200": {
            "description": "The export artifact stream.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "This task and its related artifact could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "406": {
            "description": "The task is not an export operation and therefore an artifact cannot be streamed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "425": {
            "description": "The artifact related to this task is still being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: ExportEntity"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/export-entity/{task_id}/delete": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "delete": {
        "summary": "If running, cancels a export entity launch export task.",
        "description": "If running, cancels a export entity launch export task and deletes any related artifacts that have been generated.",
        "operationId": "export_entity_deleteLaunchExport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=export-entity-apic-export-entitydelete-launch-export"
        },
        "responses": {
          "204": {
            "description": "The task has been cancelled and it's artifacts deleted."
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: ExportEntity"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/export-entity/{task_id}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "Returns information about the status of this task.",
        "description": "Returns information related to the task id that is provided in the arguments.",
        "operationId": "export_entity_getLaunchExportStatus",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=export-entity-apic-export-entityget-launch-export-status"
        },
        "responses": {
          "200": {
            "description": "Task is ready to be obtained",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "202": {
            "description": "Waiting on task to finish.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "410": {
            "description": "The task and its artifacts have expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: ExportEntity"
        ]
      }
    },
    "/service/custom-webserver-page": {
      "parameters": [
        {
          "$ref": "#/components/parameters/portal_service_name"
        },
        {
          "$ref": "#/components/parameters/page_type"
        }
      ],
      "get": {
        "summary": "Get the HTML for a web server page.",
        "description": "Get the web server HTML content of a specific web server page (index, 404, 40x, 50x).",
        "operationId": "custom_webserver_page_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=page-apic-custom-webserver-pageget"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomWebserverPage"
        ]
      },
      "delete": {
        "summary": "Delete the custom HTML for a web server page.",
        "description": "Delete the custom web server HTML content of a specific web server page (index, 404, 40x, 50x). (Will fallback to a default.)",
        "operationId": "custom_webserver_page_delete",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=page-apic-custom-webserver-pagedelete"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomWebserverPage"
        ]
      },
      "post": {
        "summary": "Set a custom HTML page for a web server page type.",
        "description": "Set the custom web server HTML content of a specific web server page (index, 404, 40x, 50x). Maximum size of 8 MB.",
        "operationId": "custom_webserver_page_set",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=page-apic-custom-webserver-pageset"
        },
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomWebserverPage"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site/check": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Run a platform check against a portal site",
        "description": "Performs filesystem, database and API Manager checks against a portal site. This command is useful when trying to identify platform related problems if you are having issues with your portal site.",
        "operationId": "site_check",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=site-apic-sitecheck"
        },
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Site"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site/export": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Create a task that exports an archive that contains the entire make-up of a site.",
        "description": "You can create a task to export an archive of the entire make-up of a site. You can then use that archive to quickly and simply override another site's content and configuration to make them identical.",
        "operationId": "site_createExport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=site-apic-sitecreate-export"
        },
        "responses": {
          "201": {
            "description": "Successful create of the task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Task already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Site"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site/export/{task_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "When ready, streams a site export artifact.",
        "description": "When ready, streams a site export artifact back to the related task id that is provided in the arguments.",
        "operationId": "site_getExport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=site-apic-siteget-export"
        },
        "responses": {
          "200": {
            "description": "The export artifact stream.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "This task and its related artifact could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "406": {
            "description": "The task is not an export operation and therefore an artifact cannot be streamed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "425": {
            "description": "The artifact related to this task is still being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomModule"
        ]
      },
      "delete": {
        "summary": "If running, cancels a site export task.",
        "description": "If running, cancels the site export task and deletes any related artifacts that have been generated.",
        "operationId": "site_deleteExport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=site-apic-sitedelete-export"
        },
        "responses": {
          "204": {
            "description": "The task has been cancelled and it's artifacts deleted."
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Site"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site/export/{task_id}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "Returns information about the status of this task.",
        "description": "Returns information related to the task id that is provided in the arguments.",
        "operationId": "site_getExportStatus",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=site-apic-siteget-export-status"
        },
        "responses": {
          "200": {
            "description": "Task is ready to be obtained",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "202": {
            "description": "Waiting on task to finish.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "410": {
            "description": "The task and its artifacts have expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Site"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site/import": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Create a task that imports an archive that contains the make-up of a site.",
        "description": "You can create a task to import an archive of the make-up of a site. You can use the imported archive to quickly and simply override the site config, content and custom modules and themes for the specified site.",
        "operationId": "site_createImport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=site-apic-sitecreate-import"
        },
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create of the task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Task already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: CustomModule"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site/import/{task_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "delete": {
        "summary": "If running, cancels a site import task.",
        "description": "If running, cancels the site import task and deletes any related artifacts that have been generated.",
        "operationId": "site_deleteImport",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=site-apic-sitedelete-import"
        },
        "responses": {
          "204": {
            "description": "The task has been cancelled and it's artifacts deleted."
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Site"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site/import/{task_id}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "Get the result of the site import task.",
        "description": "Get the result of the site import task. If the import task has completed on the portal system, this command returns the result of the command. If the import task has not completed on the portal system, it returns the current status of the task.",
        "operationId": "site_getImportStatus",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=siteapic-siteget-import-status"
        },
        "responses": {
          "200": {
            "description": "Output from portal cli command request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "202": {
            "description": "Waiting on task to finish.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "410": {
            "description": "The task and its result have expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Site"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site/login-link": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Gets an admin login link for a specific Portal site.",
        "description": "Returns a one time login link for the Drupal admin account for the site specified by org and catalog parameters",
        "operationId": "site_loginLink",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=site-apic-sitelogin-link"
        },
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Site"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site/state": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Obtain the current state of a portal site",
        "description": "Returns the state of a portal site. This command is useful as a general health check analysis of the portal site.",
        "operationId": "site_state",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=site-apic-sitestate"
        },
        "responses": {
          "200": {
            "description": "An output of the state of the portal site",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Site"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/entity/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Shows a count of entities from a site.",
        "description": "Show a count of entities of the provided org and catalog.",
        "operationId": "entity_count",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=entity-apic-entitycount"
        },
        "responses": {
          "200": {
            "description": "Successful output of the entity count command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Entity"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/forums/disable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Disable the forum module for a given site",
        "description": "Removes all forums vocabulary taxonomy terms before disabling the forum module for a given site.",
        "operationId": "forums_disable",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=forums-apic-forumsdisable"
        },
        "responses": {
          "200": {
            "description": "Output from portal cli command request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Forums"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/forums/enable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Enable the forum module for a given site",
        "description": "Enables the forum module for a given site.",
        "operationId": "forums_enable",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=forums-apic-forumsenable"
        },
        "responses": {
          "200": {
            "description": "Output from portal cli command request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Forums"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/security/clearbans": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Clear all bans for a site.",
        "description": "Clear any existing User/IP bans.",
        "operationId": "security_clearbans",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=security-apic-securityclear-bans"
        },
        "responses": {
          "200": {
            "description": "Successful output of the clearbans security command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Security"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/drupal-config": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the Config object",
        "description": "Get the Config object or a specific config key value.",
        "operationId": "drupal_config_get",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=config-apic-drupal-configget"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/config_name"
          },
          {
            "$ref": "#/components/parameters/config_key_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: DrupalConfig"
        ]
      },
      "delete": {
        "summary": "Delete the Config object.",
        "description": "Delete the Config object or a specific config key.",
        "operationId": "drupal_config_delete",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=config-apic-drupal-configdelete"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/config_name"
          },
          {
            "$ref": "#/components/parameters/config_key_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: DrupalConfig"
        ]
      },
      "post": {
        "summary": "Set a config value.",
        "description": "Can set a new config value or update an already existing key-value.",
        "operationId": "drupal_config_set",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=config-apic-drupal-configset"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/config_name"
          },
          {
            "$ref": "#/components/parameters/config_key"
          },
          {
            "$ref": "#/components/parameters/config_value"
          }
        ],
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: DrupalConfig"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/drupal-config/list": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "List the config names by prefix",
        "description": "List the config names by prefix or provide no prefix to see all.",
        "operationId": "drupal_config_list",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=config-apic-drupal-configlist"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/prefix"
          }
        ],
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: DrupalConfig"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/drupal-state": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get the State key",
        "description": "Get the State key value.",
        "operationId": "drupal_state_get",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=state-apic-drupal-stateget"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/state_key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: DrupalState"
        ]
      },
      "delete": {
        "summary": "Delete the State key.",
        "description": "Delete the specific state key.",
        "operationId": "drupal_state_delete",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=state-apic-drupal-statedelete"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/state_key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: DrupalState"
        ]
      },
      "post": {
        "summary": "Set a state key value.",
        "description": "Can set a new state value or update an already existing key-value.",
        "operationId": "drupal_state_set",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=state-apic-drupal-stateset"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/state_key"
          },
          {
            "$ref": "#/components/parameters/state_value"
          },
          {
            "$ref": "#/components/parameters/input_format"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: DrupalState"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/maintenance/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Gets the maintenance mode for the given Developer Portal.",
        "description": "Gets maintenance mode on the Developer Portal installed within this org and catalog.",
        "operationId": "maintenance_status",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=maintenance-apic-maintenancestatus"
        },
        "responses": {
          "200": {
            "description": "The maintenance status of this Developer Portal.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Maintenance"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/maintenance/enable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "put": {
        "summary": "Enables maintenance mode for the given Developer Portal.",
        "description": "Enables maintenance mode on the Developer Portal installed within this org and catalog.",
        "operationId": "maintenance_enable",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=maintenance-apic-maintenanceenable"
        },
        "responses": {
          "200": {
            "description": "Site maintenance has been enabled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Maintenance"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/maintenance/disable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "put": {
        "summary": "Disables maintenance mode for the given Developer Portal.",
        "description": "Disables maintenance mode on the Developer Portal installed within this org and catalog.",
        "operationId": "maintenance_disable",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=maintenance-apic-maintenancedisable"
        },
        "responses": {
          "200": {
            "description": "Site maintenance has been disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Maintenance"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/maintenance/search-api-index-status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Prints the search API index status for a Developer Portal.",
        "description": "Prints the search API index status for a Developer Portal.",
        "operationId": "maintenance_searchApiIndexStatus",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=maintenance-apic-maintenancesearch-api-index-status"
        },
        "responses": {
          "200": {
            "description": "The status of the Search API Index.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Maintenance"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/maintenance/rebuild-node-access": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "put": {
        "summary": "Rebuilds the node access table for a Developer Portal.",
        "description": "Rebuilds the node access table for a Developer Portal, which ensures the correct users can access particular content.",
        "operationId": "maintenance_rebuildNodeAccess",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=maintenance-apic-maintenancerebuild-node-access"
        },
        "responses": {
          "200": {
            "description": "The node access table will be rebuilt.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Maintenance"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/maintenance/search-api-index-rebuild": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "put": {
        "summary": "Rebuilds and reindexes the search API index for a Developer Portal.",
        "description": "Rebuilds and reindexes the search API index for a Developer Portal. NOTE: this command triggers the reindex in the background, and reindexing can take a long time. You can track the index status with maintenance:search-api-index-status",
        "operationId": "maintenance_searchApiIndexRebuild",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=maintenance-apic-maintenancesearch-api-index-rebuild"
        },
        "responses": {
          "200": {
            "description": "The Search API Index will be rebuilt.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Maintenance"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site-config/export": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Create a task that exports an archive that contains the configuration of a site.",
        "description": "You can create a task to export an archive of the configuration of a site. You can then use that archive to quickly and simply override the configuration on another site.",
        "operationId": "site_config_createExport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=config-apic-site-configcreate-export"
        },
        "responses": {
          "201": {
            "description": "Successful create of the task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Task already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: SiteConfig"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site-config/export/{task_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "When ready, streams a site configuration export artifact.",
        "description": "When ready, streams a site configuration export artifact back to the related task id that is provided in the arguments.",
        "operationId": "site_config_getExport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=config-apic-site-configget-export"
        },
        "responses": {
          "200": {
            "description": "A stream of the export artifact.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "This task and its related artifact could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "406": {
            "description": "The task is not an export operation and therefore an artifact cannot be streamed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "425": {
            "description": "The artifact related to this task is still being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: SiteConfig"
        ]
      },
      "delete": {
        "summary": "If running, cancels a site configuration export task.",
        "description": "If running, cancels the site configuration export task and deletes any related artifacts that have been generated.",
        "operationId": "site_config_deleteExport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=config-apic-site-configdelete-export"
        },
        "responses": {
          "204": {
            "description": "The task has been cancelled and it's artifacts deleted."
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: SiteConfig"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site-config/export/{task_id}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "Returns information about the status of this task.",
        "description": "Returns information related to the task id that is provided in the arguments.",
        "operationId": "site_config_getExportStatus",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=config-apic-site-configget-export-status"
        },
        "responses": {
          "200": {
            "description": "Task is ready to be obtained",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "202": {
            "description": "Waiting on task to finish.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "410": {
            "description": "The task and its artifacts have expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: SiteConfig"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site-config/import": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Create a task that imports an archive that contains the configuration of a site.",
        "description": "You can create a task to import an archive of the configuration of a site. You can use the imported archive to quickly and simply override the configuration for the specified site.",
        "operationId": "site_config_createImport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=config-apic-site-configcreate-import"
        },
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful create of the task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Task already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: SiteConfig"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site-config/import/{task_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "delete": {
        "summary": "Cancels a running site configuration import task.",
        "description": "Cancels the site configuration import task and deletes any generated artifacts.",
        "operationId": "site_config_deleteImport",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=config-apic-site-configdelete-import"
        },
        "responses": {
          "204": {
            "description": "The task has been cancelled and it's artifacts deleted."
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: SiteConfig"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site-config/import/{task_id}/status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/task_id"
        }
      ],
      "get": {
        "summary": "Get the result of the site configuration import task.",
        "description": "Get the result of the site configuration import task. If the import task has completed on the portal system, this command returns the result of the command. If the import task has not completed on the portal system, it returns the current status of the task.",
        "operationId": "site_config_getImportStatus",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=config-apic-site-configget-import-status"
        },
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "202": {
            "description": "Waiting on task to finish.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "410": {
            "description": "The task and its artifacts have expired.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: SiteConfig"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/queue": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Shows queued and locked platform related tasks for a Developer Portal.",
        "description": "Shows queued and locked platform related tasks for a Developer Portal, including Developer Portal creates, restores, upgrades, snapshots, crons etc.",
        "operationId": "queue_get",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=queue-apic-queueget"
        },
        "responses": {
          "200": {
            "description": "A list of queued tasks for the given Developer Portal",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Queue"
        ]
      }
    },
    "/service/backups/list": {
      "get": {
        "summary": "List the backups present on the remote backup server.",
        "description": "Lists all the backups that are currently present on the remote backup server, if one has been set.",
        "operationId": "backups_list",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=backups-apic-backupslist"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the list backups command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Backups"
        ]
      }
    },
    "/service/platforms/list": {
      "get": {
        "summary": "List the platforms present on the portal service.",
        "description": "Lists all the platforms that are currently present on the Portal service.",
        "operationId": "platforms_list",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=platforms-apic-platformslist"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the list platforms command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Platforms"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/product/list": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Shows a list of products from a site.",
        "description": "Show a list of products of the provided org and catalog.",
        "operationId": "product_list",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=product-apic-productlist"
        },
        "responses": {
          "200": {
            "description": "Successful output of the list products command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Product"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/product/get": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get a specific product from a developer portal.",
        "description": "Get a specific product from the developer portal of the provided org and catalog. The id or name:version of a specific product needs to be provided. e.g. 'id-of-product-called-example-3' or 'example:3.0.0'.",
        "operationId": "product_get",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=product-apic-productget"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/product"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the get product command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Product"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/product/get-document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get a specific entire product document from a developer portal.",
        "description": "Get a specific entire product document from the developer portal of the provided org and catalog. The id or name:version of a specific api needs to be provided. e.g. 'id-of-api-called-example-3' or 'example:3.0.0'.",
        "operationId": "product_getDocument",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=product-apic-productgetdocument"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/product"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the get product document command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Product"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/product/add-attachment": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Add an attachment for the given product.",
        "description": "Add an attachment for a product within the developer portal of the provided org and catalog. A product can hold 10 attachments. The id or name:version of a specific product needs to be provided. e.g. 'id-of-api-called-example-3' or 'example:3.0.0'.",
        "operationId": "product_addAttachment",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=product-apic-productaddattachment"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/product"
          },
          {
            "$ref": "#/components/parameters/attachment_name"
          },
          {
            "$ref": "#/components/parameters/attachment_description"
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful add of the product attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Product"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/product/add-tag": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Add a tag for the given product.",
        "description": "Add a tag for a product within the developer portal of the provided org and catalog. The id or name:version of a specific product needs to be provided. e.g. 'id-of-api-called-example-3' or 'example:3.0.0'.",
        "operationId": "product_addTag",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=product-apic-productaddtag"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/product"
          },
          {
            "$ref": "#/components/parameters/tag_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful add of the product tag",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Product"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/product/set-icon": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "put": {
        "summary": "Set an icon image for the given product.",
        "description": "Set an icon image for a product within the developer portal of the provided org and catalog. The existing icon will be overwritten. The id or name:version of a specific product needs to be provided. e.g. 'id-of-api-called-example-3' or 'example:3.0.0'.",
        "operationId": "product_setIcon",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=product-apic-productseticon"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/product"
          },
          {
            "$ref": "#/components/parameters/icon_description"
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful set of the product icon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Product"
        ]
      }
    },
    "/service/list": {
      "get": {
        "summary": "List the Portal service.",
        "description": "Lists the Portal service currently installed.",
        "operationId": "service_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=service-apic-servicelist"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the list service command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Service"
        ]
      }
    },
    "/service/sites/check": {
      "get": {
        "summary": "Run a platform check against all portal sites present on a portal service.",
        "description": "Performs filesystem, database and API Manager checks against all portal sites on a given portal service. This command is useful when trying to identify platform related problems on one of more of your portal sites.",
        "operationId": "sites_check",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=sites-apic-sitescheck"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the check sites command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Sites"
        ]
      }
    },
    "/service/sites/list": {
      "get": {
        "summary": "List the sites present on the Portal service.",
        "description": "Lists all the sites that are currently present on the Portal service.",
        "operationId": "sites_list",
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=sites-apic-siteslist"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the list sites command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Sites"
        ]
      }
    },
    "/service/sites/reset-upgrade-attempts": {
      "put": {
        "summary": "Resets the Developer Portal site upgrade attempts.",
        "description": "Resets the Developer Portal site upgrade attempts. Useful when upgrade has been attempted multiple times and has failed.",
        "operationId": "sites_resetUpgradeAttempts",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=sites-apic-sitesresetupgradeattempts"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "A notification of upgrade attempts being reset.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Sites"
        ]
      }
    },
    "/service/factory-reset": {
      "delete": {
        "summary": "Factory resets the Developer Portal.",
        "description": "Performs a factory reset of the Developer Portal, deleting the portal service and all portal sites. This command is irreversible - please ensure you have backups configured.",
        "operationId": "factory_reset_singletonDel",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=reset-apic-service-factory-resetdelete"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_endpoint"
          },
          {
            "$ref": "#/components/parameters/execute_reset"
          }
        ],
        "responses": {
          "200": {
            "description": "Output from portal cli command request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: FactoryReset"
        ]
      }
    },
    "/service/ip-security-enabled": {
      "post": {
        "summary": "Enable or disable IP security functionality within the Developer Portal",
        "description": "Enable or disable IP security functionality within the Developer Portal",
        "operationId": "ip_security_enabled_update",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=enabled-apic-ip-security-enabledupdate"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          },
          {
            "$ref": "#/components/parameters/ip_security_enabled"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output message of the security functionality being set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: IpSecurityEnabled"
        ]
      }
    },
    "/service/queue/list": {
      "get": {
        "summary": "Shows queued and locked platform related tasks across all Developer Portals.",
        "description": "Shows queued and locked platform related tasks across all Developer Portal, including Developer Portal creates, restores, upgrades, snapshots, crons etc.",
        "operationId": "queue_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=queue-apic-queuelist"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of queued tasks across all Developer Portals",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Queue"
        ]
      }
    },
    "/service/php-memory/list": {
      "get": {
        "summary": "List the PHP memory limit on the platform.",
        "description": "Lists the PHP memory_limit setting on the portal platform.",
        "operationId": "php_memory_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=memory-apic-php-memorylist"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the php memory limits",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: PhpMemory"
        ]
      }
    },
    "/service/php-memory/update": {
      "post": {
        "summary": "Set the PHP memory limit on the portal platform.",
        "description": "Sets the PHP memory limit on the portal platform for both admin and web containers",
        "operationId": "php_memory_update",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=memory-apic-php-memoryupdate"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          },
          {
            "$ref": "#/components/parameters/memory_value"
          }
        ],
        "responses": {
          "200": {
            "description": "Logs of the CLI command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: PhpMemory"
        ]
      }
    },
    "/service/ip-allowlist/add": {
      "post": {
        "summary": "Add IP(s) to the allowlist.",
        "description": "Add IP(s) to the allowlist",
        "operationId": "ip_allowlist_add",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=allowlist-apic-service-ip-allowlistadd"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          },
          {
            "$ref": "#/components/parameters/ips"
          }
        ],
        "responses": {
          "200": {
            "description": "Output from portal cli command request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: IpAllowlist"
        ]
      }
    },
    "/service/ip-allowlist/remove": {
      "post": {
        "summary": "Remove IP(s) from the allowlist.",
        "description": "Remove IP(s) from the allowlist",
        "operationId": "ip_allowlist_remove",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=allowlist-apic-service-ip-allowlistremove"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          },
          {
            "$ref": "#/components/parameters/ips"
          }
        ],
        "responses": {
          "200": {
            "description": "Output from portal cli command request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: IpAllowlist"
        ]
      }
    },
    "/service/ip-allowlist": {
      "delete": {
        "summary": "Remove all IPs from the allowlist.",
        "description": "Remove all IPs from the allowlist.",
        "operationId": "ip_allowlist_singletonDel",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=allowlist-apic-service-ip-allowlistdelete"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Output from portal cli command request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: IpAllowlist"
        ]
      }
    },
    "/service/ip-allowlist/list": {
      "get": {
        "summary": "List IP(s) currently on the allowlist.",
        "description": "List IP(s) currently on the allowlist.",
        "operationId": "ip_allowlist_list",
        "security": [
          {
            "oauth": [
              "org:view"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=allowlist-apic-service-ip-allowlistlist"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/portal_service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Output from portal cli command request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: IpAllowlist"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/modules/list": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Shows a list of available modules.",
        "description": "Show a list of modules for the portal of the provided org and catalog.",
        "operationId": "modules_list",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=modules-apic-moduleslist"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/package"
          },
          {
            "$ref": "#/components/parameters/no-core"
          },
          {
            "$ref": "#/components/parameters/core"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the list modules command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Modules"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/modules/enable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Enable one or more module.",
        "description": "Enable one or more module by providing a comma separated list.",
        "operationId": "modules_enable",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=modules-apic-modulesenable"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/modules"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the enable module(s) command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Modules"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/modules/disable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Disable one or more modules and their dependent modules.",
        "description": "Disable one or more modules and their dependent modules. The provided list of modules must be comma separated.",
        "operationId": "modules_disable",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=modules-apic-modulesdisable"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/modules"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the disable module(s) command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Modules"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/modules/delete": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "delete": {
        "summary": "Deletes one or more modules.",
        "description": "Deletes one or more modules. The provided list of modules must be comma separated. Running this command with the force option will make sure the Drupal table's are purged of any reference to the module.",
        "operationId": "modules_delete",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=modules-apic-modulesdelete"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/modules"
          },
          {
            "$ref": "#/components/parameters/force"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the delete module(s) command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Modules"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/role": {
      "description": "Role object operations",
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Get a role defined on the site.",
        "description": "Gets a Drupal User Role defined on the site and all the permissions it has been granted",
        "operationId": "role_get",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=role-apic-roleget"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/role"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the role get command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Role"
        ]
      },
      "post": {
        "summary": "Create a new role",
        "description": "Create a new role",
        "operationId": "role_create",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=role-apic-rolecreate"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/machine_name"
          },
          {
            "$ref": "#/components/parameters/human_readable_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the role create command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Role"
        ]
      },
      "delete": {
        "summary": "Delete a role",
        "description": "Delete a role",
        "operationId": "role_delete",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=role-apic-roledelete"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/role"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the role delete command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Role"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/role/permission": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Grant specified permission(s) to a role.",
        "description": "Grant specified permission(s) to a role.",
        "operationId": "role_addPermission",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=role-apic-roleaddpermission"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/role"
          },
          {
            "$ref": "#/components/parameters/permissions"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the role add permission command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Role"
        ]
      },
      "delete": {
        "summary": "Remove specified permission(s) from a role.",
        "description": "Remove specified permission(s) from a role.",
        "operationId": "role_removePermission",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=role-apic-roleremovepermission"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/role"
          },
          {
            "$ref": "#/components/parameters/permissions"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the role remove permission command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Role"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/role/list": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Display a list of all roles defined on the system. If a role name is provided as an argument, then all of the permissions of that role will be listed. If a permission name is provided as an option, then all of the roles that have been granted that permission will be listed.",
        "description": "Display a list of all roles defined on the system. If a role name is provided as an argument, then all of the permissions of that role will be listed. If a permission name is provided as an option, then all of the roles that have been granted that permission will be listed.",
        "operationId": "role_list",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=role-apic-rolelist"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/role"
          },
          {
            "$ref": "#/components/parameters/filter_by_permission"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the role list command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Role"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/site/cache-rebuild": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Rebuilds the cache of a specific Portal site.",
        "description": "Clears the existing cache and rebuilds a new one for a specific Portal site.",
        "operationId": "site_cache_rebuild",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=site-apic-sitecache-rebuild"
        },
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Site"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/themes/list": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Shows a list of available themes.",
        "description": "Show a list of themes for the portal of the provided org and catalog.",
        "operationId": "themes_list",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=themes-apic-themeslist"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/package"
          },
          {
            "$ref": "#/components/parameters/no-core"
          },
          {
            "$ref": "#/components/parameters/core"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the list themes command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Themes"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/themes/enable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Enable one or more theme.",
        "description": "Enable one or more theme by providing a comma separated list.",
        "operationId": "themes_enable",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=themes-apic-themesenable"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/themes"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the enable theme(s) command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Themes"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/themes/disable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Disable one or more themes.",
        "description": "Disable one or more themes and their dependent modules. The provided list of themes must be comma separated.",
        "operationId": "themes_disable",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=themes-apic-themesdisable"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/themes"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the disable theme(s) command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Themes"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/themes/delete": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "delete": {
        "summary": "Deletes one or more themes.",
        "description": "Deletes one or more themes. The provided list of themes must be comma separated.",
        "operationId": "themes_delete",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=themes-apic-themesdelete"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/themes"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the delete theme(s) command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Themes"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/themes/set-default": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Set a portal's default theme.",
        "description": "Set a portal's default theme. The theme provided must be one that is already enabled.",
        "operationId": "themes_setDefault",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=themes-apic-themesset-default"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/theme"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the set theme command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Themes"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/memcache": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Gets the memcache enabled status on a specific Developer Portal site.",
        "description": "Gets the memcache enabled status on a specific Developer Portal site.",
        "operationId": "memcache_get",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=memcache-apic-memcacheget"
        },
        "responses": {
          "200": {
            "description": "The enabled status of memcache for this Developer Portal.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Memcache"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/memcache/enable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "put": {
        "summary": "Enables memcache on a specific Developer Portal site.",
        "description": "Enables memcache on a specific Developer Portal site. This sets Drupal to use RAM for it's cache.",
        "operationId": "memcache_enable",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=memcache-apic-memcacheenable"
        },
        "responses": {
          "200": {
            "description": "Memcache has been successfully enabled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Memcache"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/memcache/disable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "put": {
        "summary": "Disables memcache on a specific Developer Portal site.",
        "description": "Disables memcache on a specific Developer Portal site. This sets Drupal to use the database as it's cache.",
        "operationId": "memcache_disable",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=memcache-apic-memcachedisable"
        },
        "responses": {
          "200": {
            "description": "Memcache has been successfully disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Memcache"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/twig/debug-enable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Enables twig debugging on a specific Portal site.",
        "description": "Enables twig debugging on a specific Portal site. Helps locate twig template issues.",
        "operationId": "twig_debugEnable",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=twig-apic-twigdebug-enable"
        },
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Twig"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/twig/debug-disable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Disable twig debugging on a specific Portal site.",
        "description": "Disable twig debugging on a specific Portal site. Helps locate twig template issues.",
        "operationId": "twig_debugDisable",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=twig-apic-twigdebug-disable"
        },
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Twig"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/twig/debug-status": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Shows the current state of twig debugging of a specific Portal site.",
        "description": "View the current state of twig debugging of a specific Portal site, if you are unsure of it.",
        "operationId": "twig_debugStatus",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=twig-apic-twigdebug-status"
        },
        "responses": {
          "200": {
            "description": "Task has completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: Twig"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/user/role": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        },
        {
          "$ref": "#/components/parameters/role_required"
        },
        {
          "$ref": "#/components/parameters/mail"
        },
        {
          "$ref": "#/components/parameters/names"
        },
        {
          "$ref": "#/components/parameters/uid"
        }
      ],
      "post": {
        "summary": "Add a role to the specified user accounts.",
        "description": "Add a role to the specified user accounts. You need to provide either the mail, username, or the uid of the user account.",
        "operationId": "user_addRole",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=user-apic-useraddrole"
        },
        "responses": {
          "200": {
            "description": "Successful output of the user role add command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: User"
        ]
      },
      "delete": {
        "summary": "Remove a role from the specified user accounts.",
        "description": "Remove a role from the specified user accounts. You need to provide either the mail, username, or the uid of the user account.",
        "operationId": "user_removeRole",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=user-apic-userremoverole"
        },
        "responses": {
          "200": {
            "description": "Successful output of the user role remove command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: User"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/user/block": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Block a Developer Portal Drupal User",
        "description": "Block a Developer Portal Drupal User. This will block a user from being able to login into the Developer Portal. You need to provide the username of the user.",
        "operationId": "user_block",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=user-apic-userblock"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/names"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the user block command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: User"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/user/unblock": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "post": {
        "summary": "Unblock a Developer Portal Drupal User",
        "description": "Unblock a Developer Portal Drupal User. This will allow a blocked user to be able to login into the Developer Portal again. You need to provide the username of the user.",
        "operationId": "user_unblock",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=user-apic-userunblock"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/names"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the user unblock command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/CliResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: User"
        ]
      }
    },
    "/catalogs/{org}/{catalog}/user/information": {
      "parameters": [
        {
          "$ref": "#/components/parameters/org"
        },
        {
          "$ref": "#/components/parameters/catalog"
        }
      ],
      "get": {
        "summary": "Gets Developer Portal Drupal user information",
        "description": "Gets Developer Portal Drupal user information. You can filter on different fields to obtain a list of users matching your criteria.",
        "operationId": "user_information",
        "security": [
          {
            "oauth": [
              "org:manage"
            ]
          }
        ],
        "externalDocs": {
          "description": "Additional documentation",
          "url": "https://www.ibm.com/docs/en/api-connect/10.0.x?topic=user-apic-userinformation"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/roles"
          },
          {
            "$ref": "#/components/parameters/mail"
          },
          {
            "$ref": "#/components/parameters/names"
          },
          {
            "$ref": "#/components/parameters/uid"
          },
          {
            "$ref": "#/components/parameters/consumer_org_urls"
          },
          {
            "$ref": "#/components/parameters/login_before"
          },
          {
            "$ref": "#/components/parameters/login_after"
          },
          {
            "$ref": "#/components/parameters/apic_state"
          },
          {
            "$ref": "#/components/parameters/user_status"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful output of the user information command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformation"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformation"
                }
              }
            }
          },
          "400": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Failure - unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "tags": [
          "Portal",
          "Resource: User"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "apic_state": {
        "name": "apic-state",
        "in": "query",
        "description": "A comma separated list of apic states to filter users by.",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/ApicState"
        }
      },
      "attachment_name": {
        "name": "attachment_name",
        "in": "query",
        "description": "The name given to the attachment once it has been uploaded e.g. my-file.txt",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "attachment_description": {
        "name": "attachment_description",
        "in": "query",
        "description": "A description of the attachment to be displayed to users.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "api": {
        "name": "api",
        "in": "query",
        "description": "The id or name:version of a specific api. e.g. 'id-of-api-called-example-3' or 'example:3.0.0'.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "application": {
        "name": "application",
        "in": "query",
        "description": "The id of a specific application.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "bundle": {
        "name": "bundle",
        "in": "query",
        "description": "The bundle type for a given entity type. E.g. \"page\" for the \"node\" entity type.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "catalog": {
        "name": "catalog",
        "in": "path",
        "description": "Name or ID of the catalog the site belongs to.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "consumer-org": {
        "name": "consumer-org",
        "in": "query",
        "description": "The id of a specific consumer organization.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "consumer_org_urls": {
        "name": "consumer-org",
        "in": "query",
        "description": "A comma separated list of consumer org urls",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "entity_ids": {
        "name": "entity_ids",
        "in": "query",
        "description": "A comma separated list of content ids.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "4,76,23"
        }
      },
      "config_key": {
        "name": "config_key",
        "in": "query",
        "description": "A config key, for example \"page.front\".",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "config_key_optional": {
        "name": "config_key",
        "in": "query",
        "description": "A config key, for example \"page.front\".",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "config_name": {
        "name": "config_name",
        "in": "query",
        "description": "The config object name, for example \"system.site\".",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "config_value": {
        "name": "config_value",
        "in": "query",
        "description": "The value to assign to the config key.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "core": {
        "name": "core",
        "in": "query",
        "description": "Filter out extensions that are not in drupal core.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "custom": {
        "name": "custom",
        "in": "query",
        "description": "Filter to only custom modules or themes",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "execute_reset": {
        "name": "execute_reset",
        "in": "query",
        "description": "set to true to trigger the Developer Portal reset",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "export_entity_id": {
        "name": "export_entity_id",
        "in": "path",
        "description": "ID of the export entity",
        "required": true,
        "schema": {
          "type": "string",
          "example": "4"
        }
      },
      "export_entity_name": {
        "name": "export_entity_name",
        "in": "query",
        "description": "name of the export entity",
        "required": false,
        "schema": {
          "type": "string",
          "example": "My Export Entity"
        }
      },
      "entity_type": {
        "name": "entity_type",
        "in": "path",
        "description": "Type of content you want to perform this operation on. To find out content types see the content list-types route.",
        "required": true,
        "schema": {
          "type": "string",
          "default": "node",
          "example": "node"
        }
      },
      "entity_type_query": {
        "name": "entity_type",
        "in": "query",
        "description": "Type of content you want to perform this operation on. To find out content types see the content list-types route.",
        "required": true,
        "schema": {
          "type": "string",
          "default": "node",
          "example": "node"
        }
      },
      "force": {
        "name": "force",
        "in": "query",
        "description": "Provides the force flag to the subsequent command. The force action is dependent on the command. Please read the command description.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "langcodes": {
        "name": "langcodes",
        "in": "query",
        "description": "A comma separated list of language codes e.g. \"es,zh-hans\"",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Limit the amount of results returned.",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "login_before": {
        "name": "login-before",
        "in": "query",
        "description": "A date to filter users who last logged in before the provided date. Date needs to be given in format of MM-DD-YYY or MM-DD-YY HH:MM:SS",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "login_after": {
        "name": "login-after",
        "in": "query",
        "description": "A date to filter users who last logged in after the provided date. Date needs to be given in format of MM-DD-YYY or MM-DD-YY HH:MM:SS",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "Offset the results return to aid in pagination.",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "human_readable_name": {
        "name": "human_readable_name",
        "in": "query",
        "description": "A descriptive name for the role.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "icon_description": {
        "name": "icon_description",
        "in": "query",
        "description": "A description of the icon to be displayed to users. Used as alt text for the image.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "input_format": {
        "name": "input_format",
        "in": "query",
        "description": "The input format of the value for the state key. Values: string, integer, float, boolean, json, yaml. [default: auto]",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/InputFormat"
        }
      },
      "input_format_config": {
        "name": "input_format",
        "in": "query",
        "description": "The input format of the value for the config key. Values: string, yaml. Since JSON is a subset of YAML, config_value may be in JSON format [default: string]",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/InputFormatConfig"
        }
      },
      "ip_security_enabled": {
        "name": "enabled",
        "in": "query",
        "description": "set to true or false to enable or disable IP security",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "machine_name": {
        "name": "machine_name",
        "in": "query",
        "description": "The symbolic machine name for the role.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "memory_value": {
        "name": "memory_value",
        "in": "query",
        "description": "The memory value in megabytes (mb)",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "modules": {
        "name": "modules",
        "in": "query",
        "description": "A list of modules separated by a comma.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "names": {
        "name": "names",
        "in": "query",
        "description": "A comma delimited list of names of users to operate on.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "no-core": {
        "name": "no-core",
        "in": "query",
        "description": "Filter out extensions that are provided by drupal core.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "org": {
        "name": "org",
        "in": "path",
        "description": "Name or ID of the organization the catalog belongs to.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "page_type": {
        "name": "page_type",
        "in": "query",
        "description": "The page type you want to run this command against. Values: index, 404, 40x, 50x",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/PageType"
        }
      },
      "product": {
        "name": "product",
        "in": "query",
        "description": "The id or name:version of a specific application. e.g. 'id-of-product-called-example-3' or 'example:3.0.0'.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "roles": {
        "name": "role",
        "in": "query",
        "description": "A command separated list of Drupal User Roles.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "role_required": {
        "name": "role",
        "in": "query",
        "description": "The name of the Drupal User Role.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "tag_name": {
        "name": "tag_name",
        "in": "query",
        "description": "The tag name e.g. top_level_element/next_level_element",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "task_id": {
        "name": "task_id",
        "in": "path",
        "description": "ID of the task created on the queue.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "theme": {
        "name": "theme",
        "in": "query",
        "description": "A name of a single theme.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "themes": {
        "name": "themes",
        "in": "query",
        "description": "A list of themes separated by a comma.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "package": {
        "name": "package",
        "in": "query",
        "description": "Filter by project packages. You can use multiple comma separated values.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "permissions": {
        "name": "permissions",
        "in": "query",
        "description": "The list of permission to grant, delimited by commas.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "portal_service_name": {
        "name": "portal_service_name",
        "in": "query",
        "description": "The name of the portal service",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "portal_service_endpoint": {
        "name": "portal_service_endpoint",
        "in": "query",
        "description": "The URL endpoint of the portal service",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uri"
        }
      },
      "role": {
        "name": "role",
        "in": "query",
        "description": "The name of the Drupal User Role.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "state_key": {
        "name": "state_key",
        "in": "query",
        "description": "The state key, for example \"system.cron_last\".",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "state_value": {
        "name": "state_value",
        "in": "query",
        "description": "The value to assign to the state key.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "status": {
        "name": "status",
        "in": "query",
        "description": "Filter by extension status. Choices _ enabled, disabled and/or 'not installed'. You can use multiple comma separated values.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "user_status": {
        "name": "status",
        "in": "query",
        "description": "Filter by Drupal user status. Choices are 'active' or 'blocked'.",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/UserStatus"
        }
      },
      "ips": {
        "name": "ips",
        "in": "query",
        "description": "Comma seperated list of IPs.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "wait_cache": {
        "name": "wait",
        "in": "query",
        "description": "Wait on the cache to be rebuilt as part of the task, otherwise it will be rebuilt in the background after the task has finished.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      }
    },
    "schemas": {
      "ApicState": {
        "name": "ApicState",
        "type": "string",
        "default": "enabled",
        "enum": [
          "enabled",
          "pending",
          "pending_approval"
        ]
      },
      "InputFormat": {
        "name": "InputFormat",
        "type": "string",
        "default": "auto",
        "enum": [
          "auto",
          "string",
          "integer",
          "float",
          "boolean",
          "json",
          "yaml"
        ]
      },
      "InputFormatConfig": {
        "name": "InputFormat",
        "type": "string",
        "default": "string",
        "enum": [
          "string",
          "yaml"
        ]
      },
      "PageType": {
        "name": "PageType",
        "type": "string",
        "default": "index",
        "enum": [
          "index",
          "404",
          "40x",
          "50x"
        ]
      },
      "CliResponse": {
        "x-bhendi-schema": "custom",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "integer",
            "minimum": 0,
            "maximum": 999
          },
          "message": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "stdout": {
                "type": "string"
              },
              "stderr": {
                "type": "string"
              }
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserList": {
        "type": "array",
        "description": "Array of Developer Portal Drupal Users.",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "User": {
        "type": "object",
        "description": "Developer Portal Drupal User",
        "additionalProperties": true,
        "properties": {
          "uid": {
            "type": "string",
            "description": "The uid of the Developer Portal Drupal User.",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "The username of the Developer Portal Drupal User.",
            "example": "portaluser1"
          },
          "mail": {
            "type": "string",
            "description": "The email address of the Developer Portal Drupal User.",
            "example": "portaluser1@ibm.com"
          },
          "roles": {
            "type": "array",
            "description": "The roles of the Developer Portal Drupal User.",
            "items": {
              "type": "string",
              "example": "authenticated"
            },
            "example": [
              "authenticated",
              "content_author"
            ]
          },
          "status": {
            "type": "string",
            "description": "The status of the Developer Portal Drupal User.",
            "example": "active"
          },
          "apic_state": {
            "type": "string",
            "description": "The APIC state of the Developer Portal Drupal User.",
            "example": "enabled"
          },
          "last_login": {
            "type": "string",
            "description": "The last login time of the Developer Portal Drupal User.",
            "example": "11/27/2023 11:45:07"
          },
          "user_registry": {
            "type": "string",
            "description": "The user registry of the Developer Portal Drupal User.",
            "example": "/consumer-api/user-registries/642d900f-3efb-4778-923b-80da799b27b7 (API Connect Catalog 1 Catalog User Registry)"
          },
          "consumer_orgs": {
            "type": "array",
            "description": "The consumer organizations the Developer Portal Drupal User is apart of.",
            "items": {
              "type": "string",
              "example": "authenticated"
            }
          }
        }
      },
      "UserInformation": {
        "x-bhendi-schema": "custom",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "users": {
            "description": "Array of Developer Portal Drupal Users.",
            "$ref": "#/components/schemas/UserList"
          }
        }
      },
      "UserStatus": {
        "name": "UserStatus",
        "type": "string",
        "default": "enabled",
        "enum": [
          "active",
          "blocked"
        ]
      },
      "Error": {
        "x-bhendi-schema": "custom",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
          },
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "responses": {
      "Error": {
        "description": "Unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "application/yaml": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "x-ibm-configuration": {
    "testable": false
  }
}
  ],
  docs: [
      {
        "name": "introduction",
        "title": "Introduction",
        "format": "b64html",
        "content": "PGFydGljbGUgaWQ9ImludHJvZHVjdGlvbiIgY2xhc3M9InBhZ2UiPgoKICA8ZGl2IGNsYXNzPSJhcGljLWV4cGxvcmVyLWRvY3BhZ2VfdGl0bGUiPgogICAgPGgyIGNsYXNzPSJhcGljLWV4cGxvcmVyLWRvY3BhZ2VfdGl0bGUtdGV4dCI+CiAgICAgIDxzcGFuIGNsYXNzPSJleHBsb3Jlci1kb2MtLWhlYWRlciBpbnRyby1oZWFkZXIiPgogICAgICAgIE9wZW4gQVBJIEV4cGxvcmVyIERvY3VtZW50YXRpb24gdjEwLjAuTEFURVNUCiAgICAgIDwvc3Bhbj4KICAgIDwvaDI+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0iYXBpYy1leHBsb3Jlci1kb2NwYWdlX2NvbnRlbnQgaW50cm8tY29udGVudCI+CiAgICA8c2VjdGlvbj4KICAgICAgPGgyPkludHJvZHVjdGlvbjwvaDI+CiAgICAgIDxwPgogICAgICAgIFRoZSBwbGF0Zm9ybSBSRVNUIEFQSXMgZG9jdW1lbnRlZCBoZXJlIGZvciBJQk0gQVBJIENvbm5lY3QgdjEwIHByb3ZpZGUgY29tcGxldGUgYWNjZXNzIHRvIHRoZSBjYXBhYmlsaXR5IG9mIHRoZSBwbGF0Zm9ybS4gVGhleSBtYXkgYmUgdXNlZCB0byBhdXRvbWF0ZSBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgcGxhdGZvcm07IGZvciBzY3JpcHRzIGFuZCB0b29scyB0byBzdXBwb3J0IGEgY29udGludW91cyBpbnRlZ3JhdGlvbiBlbnZpcm9ubWVudCBmb3IgQVBJIGRldmVsb3BtZW50IGFuZCBwdWJsaXNoaW5nOyBhbmQgZm9yIG1hbmFnZW1lbnQgb2YgY2F0YWxvZ3Mgb2YgQVBJcyBhbmQgdGhlaXIgc3Vic2NyaWJlcnMuIFRoZSBvcGVyYXRpb25zIHByb3ZpZGVkIGluIHRoZSBSRVNUIEFQSSBhbHNvIGNvcnJlc3BvbmQgZGlyZWN0bHkgd2l0aCBjb21tYW5kcyBpbiB0aGUgdG9vbGtpdCBDTEkuCiAgICAgIDwvcD4KICAgIDwvc2VjdGlvbj4KICAgIDxzZWN0aW9uPgogICAgICA8aDI+QVBJczwvaDI+CiAgICAgIDxwPgogICAgICAgIFRoZSBjYXBhYmlsaXR5IG9mIHRoZSBwbGF0Zm9ybSBpcyBjb21wcmlzZWQgb2YgdGhyZWUgQVBJcyB3aGljaCBhcmUgb3JpZW50ZWQgYXQgZGlmZmVyZW50IHNldHMgb2YgdXNlIGNhc2VzOgogICAgICA8L3A+CiAgICAgIDxkaXYgY2xhc3M9InNob3ctZXhwbG9yZXItYXBpcyI+PC9kaXY+CiAgICA8L3NlY3Rpb24+CiAgPC9kaXY+CjwvYXJ0aWNsZT4K"
      },
      {
        "name": "concepts",
        "title": "Concepts",
        "format": "b64html",
        "content": ""
      },
      {
        "name": "authentication",
        "title": "Authentication",
        "docs": [{
            "name": "auth_clientid_secret",
            "title": "Obtaining a Client ID and Secret",
            "format": "b64html",
            "content": "PGFydGljbGUgaWQ9ImNsaWVudC1pZC1zZWNyZXQiIGNsYXNzPSJwYWdlIj4KICA8ZGl2IGNsYXNzPSJhcGljLWV4cGxvcmVyLWRvY3BhZ2VfdGl0bGUiPgogICAgPGgyIGNsYXNzPSJhcGljLWV4cGxvcmVyLWRvY3BhZ2VfdGl0bGUtdGV4dCI+CiAgICAgIDxzcGFuIGNsYXNzPSJleHBsb3Jlci1kb2MtLWhlYWRlciBjbGllbnQtaWQtc2VjcmV0LWhlYWRlciI+CiAgICAgIE9idGFpbmluZyBhIENsaWVudCBJRCBhbmQgU2VjcmV0CiAgICAgIDwvc3Bhbj4KICAgIDwvaDI+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0iYXBpYy1leHBsb3Jlci1kb2NwYWdlX2NvbnRlbnQgY2xpZW50LWlkLXNlY3JldC1jb250ZW50Ij4KICAgIDxzZWN0aW9uPgogICAgICA8cD5FYWNoIGNsaWVudCBhcHAgdGhhdCBhY2Nlc3NlcyB0aGUgQVBJIENvbm5lY3QgUkVTVCBBUEkgbXVzdCBiZSByZWdpc3RlcmVkIHdpdGggdGhlIEFQSSBDb25uZWN0IGNsb3VkLiBUaGUgcHJvY2VzcyBvZiByZWdpc3RlcmluZyBhIGNsaWVudCBhc3NvY2lhdGVzIHRoZSBhcHBzJ3MgY2xpZW50IElEIHdpdGggYSBzZXQgb2Ygc2NvcGVzIHRoYXQgZGV0ZXJtaW5lIHdoaWNoIG9wZXJhdGlvbnMgdGhlIGFwcCBtYXkgYWNjZXNzLjwvcD4KICAgICAgPHA+VG8gcmVnaXN0ZXIgYSBjbGllbnQgYXBwLCB1c2UgdGhlIDx0dD5hcGljIHJlZ2lzdHJhdGlvbnM6Y3JlYXRlPC90dD4gQVBJIENvbm5lY3QgdG9vbGtpdCBDTEkgY29tbWFuZC4gVGhlIGNvbW1hbmQgdGFrZXMgYW4gaW5wdXQgSlNPTiBvYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIGZpZWxkczo8L3A+CiAgICAgIDxkbD4KICAgICAgICA8ZHQ+bmFtZTwvZHQ+CiAgICAgICAgPGRkPnNob3J0IG5hbWUgdG8gaWRlbnRpZnkgdGhlIGNsaWVudDwvZGQ+CiAgICAgICAgCiAgICAgICAgPGR0PnRpdGxlPC9kdD4KICAgICAgICA8ZGQ+ZGlzcGxheSBuYW1lIG9mIHRoZSBjbGllbnQ8L2RkPgogICAgICAgIAogICAgICAgIDxkdD5jbGllbnRfaWQ8L2R0PgogICAgICAgIDxkZD5hIGdlbmVyYXRlZCBjbGllbnQgSUQgdmFsdWU8L2RkPgoKICAgICAgICA8ZHQ+Y2xpZW50X3NlY3JldDwvZHQ+CiAgICAgICAgPGRkPmEgZ2VuZXJhdGVkIGNsaWVudCBzZWNyZXQgdmFsdWU8L2RkPgoKICAgICAgICA8ZHQ+Y2xpZW50X3R5cGU8L2R0PgogICAgICAgIDxkZD5vbmUgb2YgPHR0PnBvcnRhbDwvdHQ+LCA8dHQ+Z2F0ZXdheTwvdHQ+LCA8dHQ+dG9vbGtpdDwvdHQ+LCA8dHQ+Y29uc3VtZXJfdG9vbGtpdDwvdHQ+LCA8dHQ+dWk8L3R0PiwgPHR0PmNvbnN1bWVyX3VpPC90dD4sIDx0dD5pYm1fY2xvdWQ8L3R0PiwgPHR0Pm1pZ3JhdGlvbjwvdHQ+LCA8dHQ+anVodTwvdHQ+PC9kZD4KICAgICAgPC9kbD4KICAgIDwvc2VjdGlvbj4KICAgIDxzZWN0aW9uPgogICAgICA8cD5JbiBvcmRlciB0byBydW4gdGhpcyBjb21tYW5kLCB5b3UgbXVzdCBmaXJzdCBsb2cgaW4gdG8gdGhlIEFQSSBDb25uZWN0IHNlcnZlciBhcyBhbiBhZG1pbiB1c2VyIHVzaW5nIHRoZSA8dHQ+YXBpYyBsb2dpbjwvdHQ+IGNvbW1hbmQuIFdpdGggbm8gYXJndW1lbnRzLCB0aGUgbG9naW4gY29tbWFuZCBwcm9tcHRzIGZvciB5b3VyIHVzZXIgY3JlZGVudGlhbHMgYW5kIHRoZSByZWFsbSBpbiB3aGljaCB0aGUgdXNlciBhY2NvdW50IGV4aXN0cy4gVGhlIHJlYWxtIGNvcnJlc3BvbmRzIHRvIHRoZSB1c2VyIHJlZ2lzdHJ5IGluIHdoaWNoIHRoZSB1c2VyIGNyZWRlbnRpYWxzIGFyZSBoZWxkLjwvcD4KICAgICAgPHA+SWYgaXQncyB5b3VyIGZpcnN0IHRpbWUgbG9nZ2luZyBpbiB1c2luZyB0aGUgdG9vbGtpdCBDTEksIHlvdSdsbCBuZWVkIHRvIGZpbmQgdGhlIGlkZW50aXR5IHByb3ZpZGVyIHRvIHdoaWNoIHlvdXIgdXNlcmlkIGJlbG9uZ3MuIFlvdSBjYW4gbGlzdCB0aGUgc2V0IG9mIGFkbWluIGlkZW50aXR5IHByb3ZpZGVycyBpbiB0aGUgc3lzdGVtIHVzaW5nIHRoZSA8dHQ+YXBpYyBpZGVudGl0eS1wcm92aWRlcnM6bGlzdDwvdHQ+IGNvbW1hbmQuPC9wPgogICAgPC9zZWN0aW9uPgogICAgPHNlY3Rpb24+CiAgICAgIDxoMz5saXN0aW5nIGlkZW50aXR5IHByb3ZpZGVyczwvaDM+CiAgICAgIDxkaXYgaWQ9ImdldC1yZWFsbXZhbHVlLXJlcXVlc3QiIGNsYXNzPSJzaG93LWV4cGxvcmVyLWNvZGVzbmlwcGV0Ij4KJCBhcGljIGlkZW50aXR5LXByb3ZpZGVyczpsaXN0IC0tc2NvcGUgYWRtaW4gLS1zZXJ2ZXIgYXBpYy5pYm0uY29tCmRlZmF1bHQtaWRwLTEKICAgICAgPC9kaXY+CiAgICA8L3NlY3Rpb24+CiAgICA8c2VjdGlvbj4KICAgICAgPGgzPmFwaWMgbG9naW4gZXhhbXBsZTwvaDM+CiAgICAgIDxkaXYgY2xhc3M9InNob3ctZXhwbG9yZXItY29kZXNuaXBwZXQiPgokIGFwaWMgbG9naW4KRW50ZXIgeW91ciBBUEkgQ29ubmVjdCBjcmVkZW50aWFscwpTZXJ2ZXI/IGNocmlzbS5hcmdvLXNsLmRldi5jaW9uZGVtYW5kLmNvbQpSZWFsbT8gYWRtaW4vZGVmYXVsdC1pZHAtMQpVc2VybmFtZT8gY2hyaXMKUGFzc3dvcmQ/IApMb2dnZWQgaW50byBhcGljLmlibS5jb20gc3VjY2Vzc2Z1bGx5CiAgICAgIDwvZGl2PgogICAgICA8cD4oTm90ZSB0aGF0IHRoZSByZWFsbSBuYW1lIHVzZWQgZm9yIHRoZSBsb2dpbiBoYXMgdGhlIHZhbHVlICdhZG1pbi8nIHByZWZpeGVkIHRvIHRoZSByZWFsbSBuYW1lLik8L3A+CiAgICA8L3NlY3Rpb24+CiAgICA8c2VjdGlvbj4KICAgICAgPGgzPmFwaWMgcmVnaXN0cmF0aW9uczpjcmVhdGUgZXhhbXBsZTwvaDM+CiAgICAgIDxwPlRoaXMgSlNPTiBjb250ZW50ICg8dHQ+YXBwMS5qc29uPC90dD4pIHByb3ZpZGVzIHRoZSBwYXJhbWV0ZXJzIGZvciByZWdpc3RlcmluZyBhbiBhcHAgbmFtZWQgPHR0PmFwcDE8L3R0PiB1c2luZyB0aGUgPHR0PnRvb2xraXQ8L3R0PiBjbGllbnQgdHlwZSBhbmQgYSBwcmUtZGVmaW5lZCBjbGllbnQgSUQgYW5kIHNlY3JldDo8L3A+CiAgICAgIDxkaXYgY2xhc3M9InNob3ctZXhwbG9yZXItY29kZXNuaXBwZXQiPgp7CiAgIm5hbWUiOiAiYXBwMSIsCiAgImNsaWVudF9pZCI6ICJhcHAxaWQiLCAKICAiY2xpZW50X3NlY3JldCI6ICJhcHAxc2VjcmV0IiwKICAiY2xpZW50X3R5cGUiOiAidG9vbGtpdCIKfQogICAgICA8L2Rpdj4KICAgICAgPHA+VGhpcyBleGFtcGxlIHNob3dzIHRoZSByZWdpc3RyYXRpb24gY29tbWFuZCB0byByZWdpc3RlciB0aGlzIGFwcDo8L3A+CiAgICAgIDxkaXYgY2xhc3M9InNob3ctZXhwbG9yZXItY29kZXNuaXBwZXQiPgokIGFwaWMgcmVnaXN0cmF0aW9uczpjcmVhdGUgLS1zZXJ2ZXIgYXBpYy5pYm0uY29tIGFwcDEuanNvbgphcHAxICAgaHR0cHM6Ly9hcGljLmlibS5jb20vYXBpL2Nsb3VkL3JlZ2lzdHJhdGlvbnMvNTExOTYyMjItNzg4Yy00NzRmLWI0YzctMGIzNTFjZTUwOWRlCiAgICAgIDwvZGl2PgogICAgPC9zZWN0aW9uPgo8L2FydGljbGU+Cg=="
          },
            {
            "name": "auth_bearertoken",
            "title": "Getting and Using a Bearer Token",
            "format": "b64html",
            "content": ""
          }
        ]
      },
      {
        "name": "members",
        "title": "members",
        "docs": [{
            "name": "user_guidelines",
            "title": "Registering and Managing Admin Members",
            "format": "b64html",
            "content": "PGFydGljbGUgaWQ9ImFkbWluX21lbWJlcnNoaXAiIGNsYXNzPSJwYWdlIj4KICA8ZGl2IGNsYXNzPSJhcGljLWV4cGxvcmVyLWRvY3BhZ2VfdGl0bGUiPgogICAgPGgyIGNsYXNzPSJhcGljLWV4cGxvcmVyLWRvY3BhZ2VfdGl0bGUtdGV4dCI+CiAgICAgIDxzcGFuIGNsYXNzPSJleHBsb3Jlci1kb2MtLWhlYWRlciBhZG1pbl9tZW1iZXJzaGlwLWhlYWRlciI+CiAgICAgICAgTWFuYWdpbmcgQWRtaW4gVXNlcnMKICAgICAgPC9zcGFuPgogICAgPC9oMj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJhcGljLWV4cGxvcmVyLWRvY3BhZ2VfY29udGVudCBhZG1pbl9tZW1iZXJzaGlwLWNvbnRlbnQiPgoKICAgIDwhLS0gbm90ZSBvbiB0b2tlbnMgLS0+CiAgICA8c2VjdGlvbj4KICAgIDxwPlRoZSA8Y29kZT5UT0tFTjwvY29kZT4gdmFsdWUgaXMgdXNlZCBhcyBhIHBsYWNlaG9sZGVyIGZvciB0aGUgYmVhcmVyIHRva2VuIHVzZWQgYXMgdGhlIHZhbHVlIG9mIHRoZSBBdXRob3JpemF0aW9uIGhlYWRlciBmb3IgdGhlIGZvbGxvd2luZyBleGFtcGxlcy48L3A+CiAgICA8L3NlY3Rpb24+CgogICAgPCEtLSBzZWN0aW9uIG9uIGxpc3RpbmcgbWVtYmVycyAtLT4KICAgIDxzZWN0aW9uPgogICAgICA8aDM+TGlzdGluZyBhZG1pbiBvcmdhbml6YXRpb24gbWVtYmVyczwvaDM+CiAgICAgIDxwPlRoaXMgcmVxdWVzdCByZXR1cm5zIHRoZSBsaXN0IG9mIG1lbWJlcnMgcmVnaXN0ZXJlZCBpbiB0aGUgYWRtaW4gb3JnYW5pemF0aW9uLjwvcD4KICAgICAgPGg1IHN0eWxlPSJjb2xvcjojM2Q3MGIyIj5HRVQgL2FwaS9vcmdzL3tvcmd9L21lbWJlcnM8L2g1PgogICAgPC9icj4KICAgICAgPGRsPgogICAgICAgIDxkdCBzdHlsZT0iZm9udC13ZWlnaHQ6NDAwOyI+b3JnOjwvZHQ+CiAgICAgICAgPGRkPlRoZSBuYW1lIG9yIElEIG9mIHRoZSBhZG1pbiBvcmdhbml6YXRpb248L2RkPgogICAgICA8L2RsPgogICAgICA8aDQ+UmVxdWVzdDwvaDQ+CiAgICAgIDxkaXYgaWQ9ImdldC1hZG1pbl9tZW1iZXJsaXN0LXJlcXVlc3QiIGNsYXNzPSJzaG93LWV4cGxvcmVyLWNvZGVzbmlwcGV0Ij5jdXJsIC12IC1rIC1IICdBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24nIC1IICJBdXRob3JpemF0aW9uOiBiZWFyZXIgVE9LRU4iIGh0dHBzOi8vYXBpY29ubmVjdC1kZXYuaWJtLmNvbS9hcGkvb3Jncy8xZDg2ZjQ3MC02MTFiLTQwZmYtOTI1NS1iZDE1NjRiZDcxOGMvbWVtYmVycwogICAgICA8L2Rpdj4KICAgICAgPGg0PlJlc3BvbnNlPC9oND4KICAgICAgPGRpdiBpZD0iZ2V0LWFkbWluX21lbWJlcmxpc3QtcmVzcG9uc2UiIGNsYXNzPSJzaG93LWV4cGxvcmVyLWNvZGVzbmlwcGV0Ij57CiAgInRvdGFsX3Jlc3VsdHMiOiAxLAogICJyZXN1bHRzIjogWwogICAgewogICAgICAidHlwZSI6ICJtZW1iZXIiLAogICAgICAiYXBpX3ZlcnNpb24iOiAiMi4wLjAiLAogICAgICAiaWQiOiAiY2VmZGIzOTUtMmQ3Mi00NmVhLTg1MzAtOTQ4YmY1MjBlZGU2IiwKICAgICAgIm5hbWUiOiAiYWRtaW4iLAogICAgICAidGl0bGUiOiAiYWRtaW4iLAogICAgICAic3RhdGUiOiAiZW5hYmxlZCIsCiAgICAgICJzY29wZSI6ICJvcmciLAogICAgICAidXNlciI6IHsKICAgICAgICAgICAgICAgICJpZCI6ICJlNGYyMzY3OC00NTg2LTQ4YjYtYWI3Yy05MWNmZmUxOGIwNmMiLAogICAgICAgICAgICAgICAgInVybCI6ICJodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL3VzZXItcmVnaXN0cmllcy9lNzNhZjcwZC1lZWZjLTQxMGItODk3MS1kZTZhMTA3ZmMyNjYvNTNmNmQ3MTAtOGQ2YS00MGUzLWIyNzQtNjU5NzkwMjg5NGRjL3VzZXJzL2U0ZjIzNjc4LTQ1ODYtNDhiNi1hYjdjLTkxY2ZmZTE4YjA2YyIsCiAgICAgICAgICAgICAgICAibmFtZSI6ICJhZG1pbiIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJ1c2VyIiwKICAgICAgICAgICAgICAgICJlbWFpbCI6ICJ3aWxsQHdpbGwuY29tIiwKICAgICAgICAgICAgICAgICJzdGF0ZSI6ICJlbmFibGVkIiwKICAgICAgICAgICAgICAgICJ0aXRsZSI6ICJhZG1pbiIsCiAgICAgICAgICAgICAgICAib3JnX3VybCI6ICJodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL29yZ3MvZTczYWY3MGQtZWVmYy00MTBiLTg5NzEtZGU2YTEwN2ZjMjY2IiwKICAgICAgICAgICAgICAgICJ1c2VybmFtZSI6ICJhZG1pbiIsCiAgICAgICAgICAgICAgICAibGFzdF9uYW1lIjogIk93bmVyIiwKICAgICAgICAgICAgICAgICJmaXJzdF9uYW1lIjogIkNsb3VkIiwKICAgICAgICAgICAgICAgICJhcGlfdmVyc2lvbiI6ICIyLjAuMCIsCiAgICAgICAgICAgICAgICAiaWRlbnRpdHlfcHJvdmlkZXIiOiAiZGVmYXVsdC1pZHAtMSIsCiAgICAgICAgICAgICAgICAidXNlcl9yZWdpc3RyeV91cmwiOiAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS91c2VyLXJlZ2lzdHJpZXMvZTczYWY3MGQtZWVmYy00MTBiLTg5NzEtZGU2YTEwN2ZjMjY2LzUzZjZkNzEwLThkNmEtNDBlMy1iMjc0LTY1OTc5MDI4OTRkYyIsCiAgICAgICAgICAgICAgICAiZm9yY2VfcGFzc3dvcmRfY2hhbmdlIjogZmFsc2UKICAgICAgICAgICAgICB9LAogICAgICAicm9sZV91cmxzIjogWwogICAgICAgICJodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL29yZ3MvZTczYWY3MGQtZWVmYy00MTBiLTg5NzEtZGU2YTEwN2ZjMjY2L3JvbGVzLzdhYjQzYmYwLTkwMDYtNDg4MS05YWJkLTI3MTA1MTcwMzVhNyIKICAgICAgXSwKICAgICAgImNyZWF0ZWRfYXQiOiAiMjAyMS0xMS0wNFQyMDoyODoyNi4wMDBaIiwKICAgICAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0wNFQyMDoyODoyNi4wMDBaIiwKICAgICAgIm9yZ191cmwiOiAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9vcmdzL2U3M2FmNzBkLWVlZmMtNDEwYi04OTcxLWRlNmExMDdmYzI2NiIsCiAgICAgICJ1cmwiOiAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9vcmdzL2U3M2FmNzBkLWVlZmMtNDEwYi04OTcxLWRlNmExMDdmYzI2Ni9tZW1iZXJzL2NlZmRiMzk1LTJkNzItNDZlYS04NTMwLTk0OGJmNTIwZWRlNiIKICAgIH0KICBdCn0KICAgIDwvZGl2PgogICAgPC9zZWN0aW9uPgoKPCEtLSBzZWN0aW9uIGZvciBsaXN0aW5nIHJvbGVzIC0tPgogICAgPHNlY3Rpb24+CiAgICAgIDxoMz5MaXN0aW5nIGFkbWluIHJvbGVzPC9oMz4KICAgICAgPHA+VGhpcyByZXF1ZXN0IHJldHVybnMgdGhlIGxpc3Qgb2Ygcm9sZXMgdGhhdCBjYW4gYmUgYXNzaWduZWQgdG8gYWRtaW4gb3JnYW5pemF0aW9uIG1lbWJlcnMuPC9wPgogICAgICA8aDUgc3R5bGU9ImNvbG9yOiMzZDcwYjIiPkdFVCAvYXBpL29yZ3Mve29yZ30vcm9sZXM8L2g1PgogICAgPC9icj4KICAgIDxkbD4KICAgICAgPGR0IHN0eWxlPSJmb250LXdlaWdodDo0MDA7Ij5vcmc6PC9kdD4KICAgICAgPGRkPlRoZSBuYW1lIG9yIElEIG9mIHRoZSBhZG1pbiBvcmdhbml6YXRpb248L2RkPgogICAgPC9kbD4KICAgICAgPGg0PlJlcXVlc3Q8L2g0PgogICAgICA8ZGl2IGlkPSJnZXQtYWRtaW5fbWVtYmVyc2hpcC1yb2xlcy1yZXF1ZXN0IiBjbGFzcz0ic2hvdy1leHBsb3Jlci1jb2Rlc25pcHBldCI+Y3VybCAtdiAtayAtSCAnQWNjZXB0OiBhcHBsaWNhdGlvbi9qc29uJyAtSCAiQXV0aG9yaXphdGlvbjogYmVhcmVyIFRPS0VOIiBodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL29yZ3MvMWQ4NmY0NzAtNjExYi00MGZmLTkyNTUtYmQxNTY0YmQ3MThjL3JvbGVzCiAgICAgIDwvZGl2PgogICAgICA8aDQ+UmVzcG9uc2U8L2g0PgogICAgICA8ZGl2IGlkPSJnZXQtYWRtaW5fbWVtYmVyLXJvbGVzLXJlc3BvbnNlIiBjbGFzcz0ic2hvdy1leHBsb3Jlci1jb2Rlc25pcHBldCI+ewogICJ0b3RhbF9yZXN1bHRzIjogNiwKICAicmVzdWx0cyI6IFsKICAgIHsKICAgICAgInR5cGUiOiAicm9sZSIsCiAgICAgICJhcGlfdmVyc2lvbiI6ICIyLjAuMCIsCiAgICAgICJpZCI6ICI1NzdhZDBjOC04M2U5LTRjNWItOGYyYi00YTRlMjc0ZjkyOGMiLAogICAgICAibmFtZSI6ICJhZG1pbmlzdHJhdG9yIiwKICAgICAgInRpdGxlIjogIkFkbWluaXN0cmF0b3IiLAogICAgICAic3VtbWFyeSI6ICJBZG1pbmlzdGVycyB0aGUgYWRtaW4gb3JnYW5pemF0aW9uIiwKICAgICAgInBlcm1pc3Npb25fdXJscyI6IFsKICAgICAgICAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9jbG91ZC9wZXJtaXNzaW9ucy9vcmcvMTllNWViODktODUzMi00NzViLWI1YzYtMDBjN2MyZWJhZWU4IiwKICAgICAgICAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9jbG91ZC9wZXJtaXNzaW9ucy9vcmcvNTgwYjBkZjEtNjJmNC00Njc3LThjYzAtY2ZlYTllMTc2ODRiIiwKICAgICAgICAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9jbG91ZC9wZXJtaXNzaW9ucy9vcmcvN2VjNGU1NmEtODBiYS00OTlhLTk3ZTMtOTIyMzc5ZWNjMWZhIiwKICAgICAgICAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9jbG91ZC9wZXJtaXNzaW9ucy9vcmcvY2UzYzg3NmYtMDhmMS00N2I2LWJjMDEtZGYyMzhkMmFmM2E0IiwKICAgICAgICAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9jbG91ZC9wZXJtaXNzaW9ucy9vcmcvNzk3ODljZjUtODE3MS00MDNmLWEyOWYtZGVmNzkzOTUyOWQ1IiwKICAgICAgICAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9jbG91ZC9wZXJtaXNzaW9ucy9vcmcvN2E0NjZhNGMtNDk1NC00YWEzLTk3Y2YtZTcwYThjYmZiZGVmIiwKICAgICAgICAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9jbG91ZC9wZXJtaXNzaW9ucy9vcmcvYjk3MDMzYzgtYTcxMy00N2RmLWI5N2YtZDgwOWQwNjBjNzRhIiwKICAgICAgICAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9jbG91ZC9wZXJtaXNzaW9ucy9jbG91ZC9kNWM4OTg3Zi1lYjgxLTQyZWUtYmNiYi1lYThlNTZhNTMyZTUiLAogICAgICAgICJodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL2Nsb3VkL3Blcm1pc3Npb25zL2Nsb3VkLzFlOGRhYTRjLTU1MTQtNDA1Yi04Zjg5LTYwM2E4MzNiMDBiZCIsCiAgICAgICAgImh0dHBzOi8vYXBpY29ubmVjdC1kZXYuaWJtLmNvbS9hcGkvY2xvdWQvcGVybWlzc2lvbnMvY2xvdWQvYjkzYWEyNGMtNmJkMy00ZDc4LTk2MjAtY2Y0ODg1Zjg3OTdkIiwKICAgICAgICAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9jbG91ZC9wZXJtaXNzaW9ucy9jbG91ZC84YTNhZGQ5MC01MjJjLTRlNTAtOTRhMy05NDRmZjU3ODdmZWIiCiAgICAgIF0sCiAgICAgICAgImluaGVyaXRlZF9wZXJtaXNzaW9uX3VybHMiOiBbXSwKICAgICAgICAic2NvcGUiOiAib3JnIiwKICAgICAgICAiY3JlYXRlZF9hdCI6ICIyMDIxLTExLTA0VDIwOjI4OjI1LjAwMFoiLAogICAgICAgICJ1cGRhdGVkX2F0IjogIjIwMjEtMTEtMDRUMjA6Mjg6MjUuMDAwWiIsCiAgICAgICAgIm9yZ191cmwiOiAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9vcmdzL2U3M2FmNzBkLWVlZmMtNDEwYi04OTcxLWRlNmExMDdmYzI2NiIsCiAgICAgICAgInVybCI6ICJodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL29yZ3MvZTczYWY3MGQtZWVmYy00MTBiLTg5NzEtZGU2YTEwN2ZjMjY2L3JvbGVzLzU3N2FkMGM4LTgzZTktNGM1Yi04ZjJiLTRhNGUyNzRmOTI4YyIKICAgIH0sIC4uLgogIF0KfQogICAgICA8L2Rpdj4KICAgIDwvc2VjdGlvbj4KCiAgICA8IS0tIGNyZWF0aW5nIHNwZWNpZmljYWxseSBhIFVTRVIgaW4gdGhlIGFkbWluIG9yZyBsZXZlbCAtLT4KICAgIDxzZWN0aW9uPgogICAgICAgIDxoMz5DcmVhdGluZyBhIG5ldyBhZG1pbiB1c2VyPC9oMz4KICAgICAgICA8cD5BbiBhZG1pbiB1c2VyIGNvbXByaXNlcyBhIG1lbWJlciBlbnRyeSBpbiB0aGUgYWRtaW4gb3JnYW5pemF0aW9uLCB3aGljaCByZWZlcnMgdG8gYSB1c2VyIGVudHJ5IGluIGEgdXNlciByZWdpc3RyeSBhc3NvY2lhdGVkIHdpdGggYW4gYWRtaW4gaWRlbnRpdHkgcHJvdmlkZXIuIFRoaXMgcmVxdWVzdCBjcmVhdGVzIGEgbmV3IHVzZXIgZW50cnkuPC9wPgogICAgICAgICAgPGg1IHN0eWxlPSJjb2xvcjojM2Q3MGIyIj5QT1NUIC9hcGkvdXNlci1yZWdpc3RyaWVzL3tvcmd9L3t1c2VyX3JlZ2lzdHJ5fS91c2VyczwvaDU+CiAgICAgICAgPC9icj4KICAgICAgICAgIDxkbD4KICAgICAgICAgICAgPGR0IHN0eWxlPSJmb250LXdlaWdodDo0MDA7Ij5vcmc6PC9kdD4KICAgICAgICAgICAgPGRkPlRoZSBuYW1lIG9yIElEIG9mIHRoZSBhZG1pbiBvcmdhbml6YXRpb248L2RkPgogICAgICAgICAgICA8ZHQgc3R5bGU9ImZvbnQtd2VpZ2h0OjQwMDsiPnVzZXJfcmVnaXN0cnk6PC9kdD4KICAgICAgICAgICAgPGRkPlRoZSBuYW1lIG9yIElEIG9mIGFuIGFkbWluIHVzZXIgcmVnaXN0cnk8L2RkPgogICAgICAgICAgPC9kbD4KICAgICAgICAgICAgPGg1PlBvc3QgYm9keSBwcm9wZXJ0aWVzIChjb250ZW50LXR5cGUgYXBwbGljYXRpb24vanNvbiBvciBhcHBsaWNhdGlvbi95YW1sKTo8L2g1PgogICAgICAgICAgICA8IS0tIDxkaXYgaWQ9ImdldC1uZXctbWVtYmVyLXJlc3BvbnNlIiBjbGFzcz0ic2hvdy1leHBsb3Jlci1jb2Rlc25pcHBldCI+IC0tPgogICAgICAgICAgPGRsPgogICAgICAgICAgICA8ZHQgc3R5bGU9ImZvbnQtd2VpZ2h0OjQwMDsiPnVzZXJuYW1lOjwvZHQ+CiAgICAgICAgICAgIDxkZD5UaGUgdXNlcm5hbWUgZm9yIHRoZSBuZXcgdXNlcjwvZGQ+CiAgICAgICAgICAgIDxkdCBzdHlsZT0iZm9udC13ZWlnaHQ6NDAwOyI+ZW1haWw6PC9kdD4KICAgICAgICAgICAgPGRkPlRoZSBlbWFpbCBhZGRyZXNzIG9mIHRoZSBuZXcgdXNlcjwvZGQ+CiAgICAgICAgICAgIDxkdCBzdHlsZT0iZm9udC13ZWlnaHQ6NDAwOyI+Zmlyc3RfbmFtZTo8L2R0PgogICAgICAgICAgICA8ZGQ+VGhlIGZpcnN0IG5hbWUgb2YgdGhlIG5ldyB1c2VyPC9kZD4KICAgICAgICAgICAgPGR0IHN0eWxlPSJmb250LXdlaWdodDo0MDA7Ij5sYXN0X25hbWU6PC9kdD4KICAgICAgICAgICAgPGRkPlRoZSBsYXN0IG5hbWUgb2YgdGhlIG5ldyB1c2VyPC9kZD4KICAgICAgICAgICAgPGR0IHN0eWxlPSJmb250LXdlaWdodDo0MDA7Ij5wYXNzd29yZDo8L2R0PgogICAgICAgICAgICA8ZGQ+VGhlIGluaXRpYWwgcGFzc3dvcmQgZm9yIHRoZSBuZXcgdXNlcjwvZGQ+CiAgICAgICAgICA8L2RsPgogIDwhLS0gPC9kaXY+IC0tPgogICAgICAgIDwvcD4KICAgICAgICA8aDQ+UmVxdWVzdDwvaDQ+CiAgICAgICAgPGRpdiBpZD0icG9zdC1hZG1pbl9uZXctdXNlci1yZXF1ZXN0IiBjbGFzcz0ic2hvdy1leHBsb3Jlci1jb2Rlc25pcHBldCI+Y3VybCAtdiAtayBQT1NUIC1kICd7InVzZXJuYW1lIjoiY3ludGhpYTEiLCJlbWFpbCI6ImN5bnRoaWFAY3ludGhpYS5jb20iLCJmaXJzdF9uYW1lIjoiY3ludGhpYSIsImxhc3RfbmFtZSI6ImN5bnRoaWEiLCJwYXNzd29yZCI6IioqKioqKioifScgLUggJ0FjY2VwdDogYXBwbGljYXRpb24vanNvbicgLUggJ2NvbnRlbnQtdHlwZTogYXBwbGljYXRpb24vanNvbicgLUggIkF1dGhvcml6YXRpb246IGJlYXJlciBUT0tFTiIgaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS91c2VyLXJlZ2lzdHJpZXMvZTczYWY3MGQtZWVmYy00MTBiLTg5NzEtZGU2YTEwN2ZjMjY2LzUzZjZkNzEwLThkNmEtNDBlMy1iMjc0LTY1OTc5MDI4OTRkYy91c2VycwogICAgICAgIDwvZGl2PgogICAgICAgIDxoND5SZXNwb25zZTwvaDQ+CiAgICAgICAgPGRpdiBpZD0icG9zdC1hZG1pbl9uZXctdXNlci1yZXNwb25zZSIgY2xhc3M9InNob3ctZXhwbG9yZXItY29kZXNuaXBwZXQiPnsKICAidHlwZSI6ICJ1c2VyIiwKICAiYXBpX3ZlcnNpb24iOiAiMi4wLjAiLAogICJpZCI6ICJlOWM2NjlmZC05NGNiLTQzN2UtYTE2MS1mNjcxYjhhZTIyN2UiLAogICJuYW1lIjogImN5bnRoaWExIiwKICAidGl0bGUiOiAiY3ludGhpYTEiLAogICJzdGF0ZSI6ICJlbmFibGVkIiwKICAidXNlcm5hbWUiOiAiY3ludGhpYTEiLAogICJlbWFpbCI6ICJjeW50aGlhQGN5bnRoaWEuY29tIiwKICAiZmlyc3RfbmFtZSI6ICJjeW50aGlhIiwKICAibGFzdF9uYW1lIjogImN5bnRoaWEiLAogICJpZGVudGl0eV9wcm92aWRlciI6ICJkZWZhdWx0LWlkcC0xIiwKICAiY3JlYXRlZF9hdCI6ICIyMDIxLTExLTA1VDIwOjQwOjQzLjE3OVoiLAogICJ1cGRhdGVkX2F0IjogIjIwMjEtMTEtMDVUMjA6NDA6NDMuMTc5WiIsCiAgIm9yZ191cmwiOiAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9vcmdzL2U3M2FmNzBkLWVlZmMtNDEwYi04OTcxLWRlNmExMDdmYzI2NiIsCiAgInVzZXJfcmVnaXN0cnlfdXJsIjogImh0dHBzOi8vYXBpY29ubmVjdC1kZXYuaWJtLmNvbS9hcGkvdXNlci1yZWdpc3RyaWVzL2U3M2FmNzBkLWVlZmMtNDEwYi04OTcxLWRlNmExMDdmYzI2Ni81M2Y2ZDcxMC04ZDZhLTQwZTMtYjI3NC02NTk3OTAyODk0ZGMiLAogICJ1cmwiOiAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS91c2VyLXJlZ2lzdHJpZXMvZTczYWY3MGQtZWVmYy00MTBiLTg5NzEtZGU2YTEwN2ZjMjY2LzUzZjZkNzEwLThkNmEtNDBlMy1iMjc0LTY1OTc5MDI4OTRkYy91c2Vycy9lOWM2NjlmZC05NGNiLTQzN2UtYTE2MS1mNjcxYjhhZTIyN2UiCn0KICAgICAgICA8L2Rpdj4KICAgIDwvc2VjdGlvbj4KCjwhLS0gc2VjdGlvbiBvbiBjb252ZXJ0aW5nIGEgdXNlciB0byBhIG1lbWJlciBpbiB0aGUgYWRtaW4gbGV2ZWwgLS0+CiAgICA8c2VjdGlvbj4KICAgICAgPGgzPlJlZ2lzdGVyaW5nIHRoZSB1c2VyIGFzIGEgbWVtYmVyIGluIHRoZSBhZG1pbiBvcmdhbml6YXRpb248L2gzPgogICAgICA8cD5UaGlzIHJlcXVlc3QgYWRkcyBhIHVzZXIgYXMgYSBtZW1iZXIgb2YgdGhlIGFkbWluIG9yZ2FuaXphdGlvbi48L3A+CiAgICAgIDxoNSBzdHlsZT0iY29sb3I6IzNkNzBiMiI+UE9TVCAvYXBpL3VzZXItcmVnaXN0cmllcy97b3JnfS9tZW1iZXJzPC9oNT4KICAgIDwvYnI+CiAgICA8ZGw+CiAgICAgIDxkdCBzdHlsZT0iZm9udC13ZWlnaHQ6NDAwOyI+b3JnOjwvZHQ+CiAgICAgIDxkZD5UaGUgbmFtZSBvciBJRCBvZiB0aGUgYWRtaW4gb3JnYW5pemF0aW9uPC9kZD4KICAgIDwvZGw+CiAgICAgIDxoNT5Qb3N0IGJvZHkgcHJvcGVydGllcyAoY29udGVudC10eXBlIGFwcGxpY2F0aW9uL2pzb24gb3IgYXBwbGljYXRpb24veWFtbCk6PC9oNT4KICAgICAgPCEtLSA8ZGl2IGlkPSJnZXQtbmV3LW1lbWJlci1yZXNwb25zZSIgY2xhc3M9InNob3ctZXhwbG9yZXItY29kZXNuaXBwZXQiPiAtLT4KICAgIDxkbD4KICAgICAgPGR0IHN0eWxlPSJmb250LXdlaWdodDo0MDA7Ij51c2VyOjwvZHQ+CiAgICAgIDxkZD5vYmplY3QgY29udGFpbmluZyBhIHVybCBwcm9wZXJ0eSwgd2hpY2ggaXMgYSByZWZlcmVuY2UgdG8gYW4gZXhpc3RpbmcgdXNlcjwvZGQ+CiAgICAgIDxkdCBzdHlsZT0iZm9udC13ZWlnaHQ6NDAwOyI+dXJsOjwvZHQ+CiAgICAgIDxkZD5UaGUgdXJsIGZvciB0aGUgc3BlY2lmaWMgQVBJIENvbm5lY3QgdXNlciBzZWxlY3RlZCB0byBiZSByZWdpc3RlcmVkLCB0aGlzIGlzIGZvdW5kIGluIHRoZSBQT1NUIHVzZXIncyByZXNwb25zZTwvZGQ+CiAgICA8L2RsPgogICAgPCEtLSA8L2Rpdj4gLS0+CiAgICAgIDxoND5SZXF1ZXN0PC9oND4KICAgICAgPGRpdiBpZD0iZ2V0LW5ldy1tZW1iZXItcmVxdWVzdCIgY2xhc3M9InNob3ctZXhwbG9yZXItY29kZXNuaXBwZXQiPmN1cmwgLXYgLWsgLVggUE9TVCAtZCAneyJ1c2VyIjp7InVybCI6ICJodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL3VzZXItcmVnaXN0cmllcy9lNzNhZjcwZC1lZWZjLTQxMGItODk3MS1kZTZhMTA3ZmMyNjYvNTNmNmQ3MTAtOGQ2YS00MGUzLWIyNzQtNjU5NzkwMjg5NGRjL3VzZXJzL2U5YzY2OWZkLTk0Y2ItNDM3ZS1hMTYxLWY2NzFiOGFlMjI3ZSJ9fScgLUggJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbicgLUggJ0FjY2VwdDogYXBwbGljYXRpb24vanNvbicgLUggIkF1dGhvcml6YXRpb246IGJlYXJlciBUT0tFTiIgaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9vcmdzL2U3M2FmNzBkLWVlZmMtNDEwYi04OTcxLWRlNmExMDdmYzI2Ni9tZW1iZXJzCiAgICA8L2Rpdj4KICAgICAgPGg0PlJlc3BvbnNlPC9oND4KICAgICAgPGRpdiBpZD0iZ2V0LW5ldy1tZW1iZXItcmVzcG9uc2UiIGNsYXNzPSJzaG93LWV4cGxvcmVyLWNvZGVzbmlwcGV0Ij57CiAgInR5cGUiOiAibWVtYmVyIiwKICAiYXBpX3ZlcnNpb24iOiAiMi4wLjAiLAogICJpZCI6ICJlNTRjOTBiMC1iZjYxLTRmZDItYjY4NC1iNTUzMWM4OGE5MTUiLAogICJuYW1lIjogImN5bnRoaWExIiwKICAidGl0bGUiOiAiY3ludGhpYTEiLAogICJzdGF0ZSI6ICJlbmFibGVkIiwKICAidXNlciI6IHsKICAgICAgICAgICJ0eXBlIjogInVzZXIiLAogICAgICAgICAgImFwaV92ZXJzaW9uIjogIjIuMC4wIiwKICAgICAgICAgICJpZCI6ICJlOWM2NjlmZC05NGNiLTQzN2UtYTE2MS1mNjcxYjhhZTIyN2UiLAogICAgICAgICAgIm5hbWUiOiAiY3ludGhpYTEiLAogICAgICAgICAgInRpdGxlIjogImN5bnRoaWExIiwKICAgICAgICAgICJzdGF0ZSI6ICJlbmFibGVkIiwKICAgICAgICAgICJpZGVudGl0eV9wcm92aWRlciI6ICJkZWZhdWx0LWlkcC0xIiwKICAgICAgICAgICJ1c2VybmFtZSI6ICJjeW50aGlhMSIsCiAgICAgICAgICAiZW1haWwiOiAiY3ludGhpYUBjeW50aGlhLmNvbSIsCiAgICAgICAgICAiZmlyc3RfbmFtZSI6ICJjeW50aGlhIiwKICAgICAgICAgICJsYXN0X25hbWUiOiAiY3ludGhpYSIsCiAgICAgICAgICAib3JnX3VybCI6ICJodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL29yZ3MvZTczYWY3MGQtZWVmYy00MTBiLTg5NzEtZGU2YTEwN2ZjMjY2IiwKICAgICAgICAgICJ1c2VyX3JlZ2lzdHJ5X3VybCI6ICJodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL3VzZXItcmVnaXN0cmllcy9lNzNhZjcwZC1lZWZjLTQxMGItODk3MS1kZTZhMTA3ZmMyNjYvNTNmNmQ3MTAtOGQ2YS00MGUzLWIyNzQtNjU5NzkwMjg5NGRjIiwKICAgICAgICAgICJ1cmwiOiAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS91c2VyLXJlZ2lzdHJpZXMvZTczYWY3MGQtZWVmYy00MTBiLTg5NzEtZGU2YTEwN2ZjMjY2LzUzZjZkNzEwLThkNmEtNDBlMy1iMjc0LTY1OTc5MDI4OTRkYy91c2Vycy9lOWM2NjlmZC05NGNiLTQzN2UtYTE2MS1mNjcxYjhhZTIyN2UiCiAgICAgICAgfSwKICAic2NvcGUiOiAib3JnIiwKICAicm9sZV91cmxzIjogWwogICAgImh0dHBzOi8vYXBpY29ubmVjdC1kZXYuaWJtLmNvbS9hcGkvb3Jncy9lNzNhZjcwZC1lZWZjLTQxMGItODk3MS1kZTZhMTA3ZmMyNjYvcm9sZXMvNjg0NWE5YzctNGM3OS00OTM2LWIzMWItZjI1NjY0YmZhNTBmIgogIF0sCiAgImNyZWF0ZWRfYXQiOiAiMjAyMS0xMS0wNVQyMToxOTo1Ny45OThaIiwKICAidXBkYXRlZF9hdCI6ICIyMDIxLTExLTA1VDIxOjE5OjU3Ljk5OFoiLAogICJvcmdfdXJsIjogImh0dHBzOi8vYXBpY29ubmVjdC1kZXYuaWJtLmNvbS9hcGkvb3Jncy9lNzNhZjcwZC1lZWZjLTQxMGItODk3MS1kZTZhMTA3ZmMyNjYiLAogICJ1cmwiOiAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9vcmdzL2U3M2FmNzBkLWVlZmMtNDEwYi04OTcxLWRlNmExMDdmYzI2Ni9tZW1iZXJzL2U1NGM5MGIwLWJmNjEtNGZkMi1iNjg0LWI1NTMxYzg4YTkxNSIKfQogICAgICA8L2Rpdj4KICAgIDxwPgogICAgICBUaGUgbmV3bHkgcmVnaXN0ZXJlZCBtZW1iZXIgY2FuIG5vdyBiZSBzZWVuIGluIHRoZSBhZG1pbiBvcmdhbml6YXRpb24ncyBsaXN0IG9mIG1lbWJlcnMuCiAgICA8L3A+CiAgICA8L3NlY3Rpb24+CgogICAgPCEtLSBNb2RpZnlpbmcgdGhlIE1lbWJlcidzIHJvbGVzIC0tPgogICAgPHNlY3Rpb24+CiAgICA8aDM+Q2hhbmdpbmcgdGhlIHJvbGVzIG9mIGFuIGFkbWluIG9yZ2FuaXphdGlvbiBtZW1iZXI8L2gzPgogICAgPHA+VG8gY2hhbmdlIHRoZSByb2xlcyBvZiBhbiBhZG1pbiBvcmdhbml6YXRpb24gbWVtYmVyLCB1c2UgdGhlIFBBVENIIG9wZXJhdGlvbiB0byB1cGRhdGUgdGhlIG1lbWJlcidzIDxjb2RlPnJvbGVfdXJsczwvY29kZT4gcHJvcGVydHkuCiAgICA8L3A+CiAgICA8aDUgc3R5bGU9ImNvbG9yOiMzZDcwYjIiPlBBVENIIC9hcGkvb3Jncy97b3JnfS9tZW1iZXJzL3ttZW1iZXJ9PC9oNT4KICAgIDwvYnI+CiAgICA8ZGw+CiAgICAgIDxkdCBzdHlsZT0iZm9udC13ZWlnaHQ6NDAwOyI+b3JnOjwvZHQ+CiAgICAgIDxkZD5UaGUgbmFtZSBvciBJRCBvZiB0aGUgYWRtaW4gb3JnYW5pemF0aW9uPC9kZD4KICAgICAgPGR0IHN0eWxlPSJmb250LXdlaWdodDo0MDA7Ij5tZW1iZXI6PC9kdD4KICAgICAgPGRkPlRoZSBuYW1lIG9yIElEIG9mIHRoZSBhZG1pbiBvcmdhbml6YXRpb24gbWVtYmVyPC9kZD4KICAgIDwvZGw+CiAgICA8aDU+UG9zdCBib2R5IHByb3BlcnRpZXMgKGNvbnRlbnQtdHlwZSBhcHBsaWNhdGlvbi9qc29uIG9yIGFwcGxpY2F0aW9uL3lhbWwpOjwvaDU+CiAgICA8IS0tIDxkaXYgaWQ9InBvc3QtbmV3LW1lbWJlci1yb2xlcy1yZXF1ZXN0IiBjbGFzcz0ic2hvdy1leHBsb3Jlci1jb2Rlc25pcHBldCI+IC0tPgogICAgPGRsPgogICAgICA8ZHQgc3R5bGU9ImZvbnQtd2VpZ2h0OjQwMDsiPnJvbGVfdXJsczo8L2R0PgogICAgICA8ZGQ+QSBsaXN0IG9mIHJlZmVyZW5jZXMgdG8gdGhlIGFkbWluIG9yZ2FuaXphdGlvbiByb2xlcyB0byBiZSBhc3NpZ25lZCB0byB0aGUgbWVtYmVyPC9kZD4KICAgIDwvZGw+CiAgICA8IS0tIDwvZGl2PiAtLT4KICAgIDwhLS0gQWRkaW5nIHRoZSByb2xlIC0tPgogICAgPHA+SGVyZSBpcyBhbiBleGFtcGxlIHJlcXVlc3QgYW5kIHN1Y2Nlc3NmdWwgcmVzcG9uc2Ugd2hlbiBhIG5ldyByb2xlIGlzIGdpdmVuIHRvIGEgbWVtYmVyOjwvcD4KICAgIDxoND5SZXF1ZXN0PC9oND4KICAgIDxkaXYgaWQ9InBvc3QtbmV3LW1lbWJlci1yb2xlcy1yZXF1ZXN0IiBjbGFzcz0ic2hvdy1leHBsb3Jlci1jb2Rlc25pcHBldCI+Y3VybCAtdiAtayAtWCBQQVRDSCAtZCAneyJyb2xlX3VybHMiOlsiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9vcmdzL2U3M2FmNzBkLWVlZmMtNDEwYi04OTcxLWRlNmExMDdmYzI2Ni9yb2xlcy8zMWZhYWYxOS02NWNjLTRjNmItYjc5Ny1hMmJhNDY0YmRhMGUiXX0nIC1IICJBdXRob3JpemF0aW9uOiBiZWFyZXIgVE9LRU4iIC1IICJhY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24iIC1IICJjb250ZW50LXR5cGU6IGFwcGxpY2F0aW9uL2pzb24iIGh0dHBzOi8vYXBpY29ubmVjdC1kZXYuaWJtLmNvbS9hcGkvb3Jncy9lNzNhZjcwZC1lZWZjLTQxMGItODk3MS1kZTZhMTA3ZmMyNjYvbWVtYmVycy9lNTRjOTBiMC1iZjYxLTRmZDItYjY4NC1iNTUzMWM4OGE5MTUKICAgIDwvZGl2PgogICAgPGg0PlJlc3BvbnNlPC9oND4KICAgIDxkaXYgaWQ9InBvc3QtbmV3LW1lbWJlci1yb2xlcy1yZXNwb25zZSIgY2xhc3M9InNob3ctZXhwbG9yZXItY29kZXNuaXBwZXQiPnsKICAidHlwZSI6ICJtZW1iZXIiLAogICJhcGlfdmVyc2lvbiI6ICIyLjAuMCIsCiAgImlkIjogImU1NGM5MGIwLWJmNjEtNGZkMi1iNjg0LWI1NTMxYzg4YTkxNSIsCiAgIm5hbWUiOiAiY3ludGhpYTEiLAogICJ0aXRsZSI6ICJjeW50aGlhMSIsCiAgInN0YXRlIjogImVuYWJsZWQiLAogICJzY29wZSI6ICJvcmciLAogICJ1c2VyIjogewogICAgICAiaWQiOiAiZTljNjY5ZmQtOTRjYi00MzdlLWExNjEtZjY3MWI4YWUyMjdlIiwKICAgICAgInVybCI6ICJodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL3VzZXItcmVnaXN0cmllcy9lNzNhZjcwZC1lZWZjLTQxMGItODk3MS1kZTZhMTA3ZmMyNjYvNTNmNmQ3MTAtOGQ2YS00MGUzLWIyNzQtNjU5NzkwMjg5NGRjL3VzZXJzL2U5YzY2OWZkLTk0Y2ItNDM3ZS1hMTYxLWY2NzFiOGFlMjI3ZSIsCiAgICAgICJuYW1lIjogImN5bnRoaWExIiwKICAgICAgInR5cGUiOiAidXNlciIsCiAgICAgICJlbWFpbCI6ICJjeW50aGlhQGN5bnRoaWEuY29tIiwKICAgICAgInN0YXRlIjogImVuYWJsZWQiLAogICAgICAidGl0bGUiOiAiY3ludGhpYTEiLAogICAgICAib3JnX3VybCI6ICJodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL29yZ3MvZTczYWY3MGQtZWVmYy00MTBiLTg5NzEtZGU2YTEwN2ZjMjY2IiwKICAgICAgInVzZXJuYW1lIjogImN5bnRoaWExIiwKICAgICAgImxhc3RfbmFtZSI6ICJjeW50aGlhIiwKICAgICAgImZpcnN0X25hbWUiOiAiY3ludGhpYSIsCiAgICAgICJhcGlfdmVyc2lvbiI6ICIyLjAuMCIsCiAgICAgICJpZGVudGl0eV9wcm92aWRlciI6ICJkZWZhdWx0LWlkcC0xIiwKICAgICAgInVzZXJfcmVnaXN0cnlfdXJsIjogImh0dHBzOi8vYXBpY29ubmVjdC1kZXYuaWJtLmNvbS9hcGkvdXNlci1yZWdpc3RyaWVzL2U3M2FmNzBkLWVlZmMtNDEwYi04OTcxLWRlNmExMDdmYzI2Ni81M2Y2ZDcxMC04ZDZhLTQwZTMtYjI3NC02NTk3OTAyODk0ZGMiCiAgICB9LAogICJyb2xlX3VybHMiOiBbCiAgICAgICJodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL29yZ3MvZTczYWY3MGQtZWVmYy00MTBiLTg5NzEtZGU2YTEwN2ZjMjY2L3JvbGVzLzMxZmFhZjE5LTY1Y2MtNGM2Yi1iNzk3LWEyYmE0NjRiZGEwZSIKICBdLAogICJjcmVhdGVkX2F0IjogIjIwMjEtMTEtMDVUMjE6MTk6NTcuMDAwWiIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0wNVQyMTo0MTozOC43MTRaIiwKICAib3JnX3VybCI6ICJodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL29yZ3MvZTczYWY3MGQtZWVmYy00MTBiLTg5NzEtZGU2YTEwN2ZjMjY2IiwKICAidXJsIjogImh0dHBzOi8vYXBpY29ubmVjdC1kZXYuaWJtLmNvbS9hcGkvb3Jncy9lNzNhZjcwZC1lZWZjLTQxMGItODk3MS1kZTZhMTA3ZmMyNjYvbWVtYmVycy9lNTRjOTBiMC1iZjYxLTRmZDItYjY4NC1iNTUzMWM4OGE5MTUiCn0KPC9kaXY+CjxwPk11bHRpcGxlIHJvbGVzIGNhbiBiZSBhc3NpZ25lZCBpbiBhIHNpbmdsZSByZXF1ZXN0LiBFeGlzdGluZyByb2xlcyBjYW4gYmUgcmVtb3ZlZCBieSBvbWl0dGluZyB0aGVtIGZyb20gdGhlIHJlcXVlc3QuPC9wPgogICAgPC9zZWN0aW9uPgoKICAgIDwhLS0gRGVsZXRpbmcgdGhlIG1lbWJlcnMgZnJvbSBBZG1pbiBvcmcgLS0+CiAgICA8c2VjdGlvbj4KICAgIDxoMz5EZWxldGluZyBhbiBhZG1pbiBvcmdhbml6YXRpb24gbWVtYmVyPC9oMz4KICAgIDxwPlRoaXMgY29tbWFuZCByZW1vdmVzIGEgbWVtYmVyIGZyb20gdGhlIGFkbWluIG9yZ2FuaXphdGlvbi48L3A+CiAgICA8aDUgc3R5bGU9ImNvbG9yOiMzZDcwYjIiPkRFTEVURSAvYXBpL29yZ3Mve29yZ30vbWVtYmVycy97bWVtYmVyfTwvaDU+CiAgPC9icj4KICAgIDxkbD4KICAgICAgPGR0IHN0eWxlPSJmb250LXdlaWdodDo0MDA7Ij5vcmc6PC9kdD4KICAgICAgPGRkPlRoZSBuYW1lIG9yIElEIG9mIHRoZSBhZG1pbiBvcmdhbml6YXRpb248L2RkPgogICAgICA8ZHQgc3R5bGU9ImZvbnQtd2VpZ2h0OjQwMDsiPm1lbWJlcjo8L2R0PgogICAgICA8ZGQ+VGhlIG5hbWUgb3IgSUQgb2YgYW4gYWRtaW4gb3JnYW5pemF0aW9uIG1lbWJlcjwvZGQ+CiAgICA8L2RsPgogICAgPGg0PlJlcXVlc3Q8L2g0PgogICAgPGRpdiBpZD0iZGVsZXRlLW9sZC1tZW1iZXJzLXJlcXVlc3QiIGNsYXNzPSJzaG93LWV4cGxvcmVyLWNvZGVzbmlwcGV0Ij5jdXJsIC12IC1rIC1IICdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nIC1IICdBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24nIC1IICJBdXRob3JpemF0aW9uOiBiZWFyZXIgVE9LRU4iIC1YIERFTEVURSBodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL29yZ3MvZTczYWY3MGQtZWVmYy00MTBiLTg5NzEtZGU2YTEwN2ZjMjY2L21lbWJlcnMvZTU0YzkwYjAtYmY2MS00ZmQyLWI2ODQtYjU1MzFjODhhOTE1CiAgICA8L2Rpdj4KICAgIDxoND5SZXNwb25zZTwvaDQ+CiAgICA8ZGl2IGlkPSJkZWxldGUtb2xkLW1lbWJlcnMtcmVzcG9uc2UiIGNsYXNzPSJzaG93LWV4cGxvcmVyLWNvZGVzbmlwcGV0Ij57CiAgInR5cGUiOiAibWVtYmVyIiwKICAiYXBpX3ZlcnNpb24iOiAiMi4wLjAiLAogICJpZCI6ICJlNTRjOTBiMC1iZjYxLTRmZDItYjY4NC1iNTUzMWM4OGE5MTUiLAogICJuYW1lIjogImN5bnRoaWExIiwKICAidGl0bGUiOiAiY3ludGhpYTEiLAogICJzdGF0ZSI6ICJlbmFibGVkIiwKICAic2NvcGUiOiAib3JnIiwKICAidXNlciI6IHsKICAgICAgImlkIjogImU5YzY2OWZkLTk0Y2ItNDM3ZS1hMTYxLWY2NzFiOGFlMjI3ZSIsCiAgICAgICJ1cmwiOiAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS91c2VyLXJlZ2lzdHJpZXMvZTczYWY3MGQtZWVmYy00MTBiLTg5NzEtZGU2YTEwN2ZjMjY2LzUzZjZkNzEwLThkNmEtNDBlMy1iMjc0LTY1OTc5MDI4OTRkYy91c2Vycy9lOWM2NjlmZC05NGNiLTQzN2UtYTE2MS1mNjcxYjhhZTIyN2UiLAogICAgICAibmFtZSI6ICJjeW50aGlhMSIsCiAgICAgICJ0eXBlIjogInVzZXIiLAogICAgICAiZW1haWwiOiAiY3ludGhpYUBjeW50aGlhLmNvbSIsCiAgICAgICJzdGF0ZSI6ICJlbmFibGVkIiwKICAgICAgInRpdGxlIjogImN5bnRoaWExIiwKICAgICAgIm9yZ191cmwiOiAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9vcmdzL2U3M2FmNzBkLWVlZmMtNDEwYi04OTcxLWRlNmExMDdmYzI2NiIsCiAgICAgICJ1c2VybmFtZSI6ICJjeW50aGlhMSIsCiAgICAgICJsYXN0X25hbWUiOiAiY3ludGhpYSIsCiAgICAgICJmaXJzdF9uYW1lIjogImN5bnRoaWEiLAogICAgICAiYXBpX3ZlcnNpb24iOiAiMi4wLjAiLAogICAgICAiaWRlbnRpdHlfcHJvdmlkZXIiOiAiZGVmYXVsdC1pZHAtMSIsCiAgICAgICJ1c2VyX3JlZ2lzdHJ5X3VybCI6ICJodHRwczovL2FwaWNvbm5lY3QtZGV2LmlibS5jb20vYXBpL3VzZXItcmVnaXN0cmllcy9lNzNhZjcwZC1lZWZjLTQxMGItODk3MS1kZTZhMTA3ZmMyNjYvNTNmNmQ3MTAtOGQ2YS00MGUzLWIyNzQtNjU5NzkwMjg5NGRjIgogIH0sCiAgInJvbGVfdXJscyI6IFsKICAgICAgImh0dHBzOi8vYXBpY29ubmVjdC1kZXYuaWJtLmNvbS9hcGkvb3Jncy9lNzNhZjcwZC1lZWZjLTQxMGItODk3MS1kZTZhMTA3ZmMyNjYvcm9sZXMvMjRmOWI0NzEtNTNiYy00NTM0LWFmMWItMGUxY2I2NTZjMTJmIgogIF0sCiAgImNyZWF0ZWRfYXQiOiAiMjAyMS0xMS0wNVQyMToxOTo1Ny4wMDBaIiwKICAidXBkYXRlZF9hdCI6ICIyMDIxLTExLTA1VDIxOjU1OjMxLjAwMFoiLAogICJvcmdfdXJsIjogImh0dHBzOi8vYXBpY29ubmVjdC1kZXYuaWJtLmNvbS9hcGkvb3Jncy9lNzNhZjcwZC1lZWZjLTQxMGItODk3MS1kZTZhMTA3ZmMyNjYiLAogICJ1cmwiOiAiaHR0cHM6Ly9hcGljb25uZWN0LWRldi5pYm0uY29tL2FwaS9vcmdzL2U3M2FmNzBkLWVlZmMtNDEwYi04OTcxLWRlNmExMDdmYzI2Ni9tZW1iZXJzL2U1NGM5MGIwLWJmNjEtNGZkMi1iNjg0LWI1NTMxYzg4YTkxNSIKfQogICAgPC9kaXY+CiAgICA8cD5UaGUgcmVzcG9uc2UgcmVwcmVzZW50cyB0aGUgbWVtYmVyIHRoYXQgaGFzIGJlZW4gcmVtb3ZlZC48L3A+CiAgICA8L3NlY3Rpb24+CiAgPC9kaXY+CjwvYXJ0aWNsZT4K"
          }
        ]
      }
    ]
};
